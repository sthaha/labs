// build/_snowpack/pkg/common/index-aa9609af.js
function noop() {
}
function assign(tar, src) {
  for (const k in src)
    tar[k] = src[k];
  return tar;
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function is_empty(obj) {
  return Object.keys(obj).length === 0;
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function component_subscribe(component, store, callback) {
  component.$$.on_destroy.push(subscribe(store, callback));
}
function create_slot(definition, ctx, $$scope, fn) {
  if (definition) {
    const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
    return definition[0](slot_ctx);
  }
}
function get_slot_context(definition, ctx, $$scope, fn) {
  return definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;
}
function get_slot_changes(definition, $$scope, dirty, fn) {
  if (definition[2] && fn) {
    const lets = definition[2](fn(dirty));
    if ($$scope.dirty === void 0) {
      return lets;
    }
    if (typeof lets === "object") {
      const merged = [];
      const len = Math.max($$scope.dirty.length, lets.length);
      for (let i = 0; i < len; i += 1) {
        merged[i] = $$scope.dirty[i] | lets[i];
      }
      return merged;
    }
    return $$scope.dirty | lets;
  }
  return $$scope.dirty;
}
function update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {
  const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);
  if (slot_changes) {
    const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
    slot.p(slot_context, slot_changes);
  }
}
function exclude_internal_props(props) {
  const result = {};
  for (const k in props)
    if (k[0] !== "$")
      result[k] = props[k];
  return result;
}
function compute_rest_props(props, keys) {
  const rest = {};
  keys = new Set(keys);
  for (const k in props)
    if (!keys.has(k) && k[0] !== "$")
      rest[k] = props[k];
  return rest;
}
function compute_slots(slots) {
  const result = {};
  for (const key in slots) {
    result[key] = true;
  }
  return result;
}
function append(target, node) {
  target.appendChild(node);
}
function insert(target, node, anchor) {
  target.insertBefore(node, anchor || null);
}
function detach(node) {
  node.parentNode.removeChild(node);
}
function destroy_each(iterations, detaching) {
  for (let i = 0; i < iterations.length; i += 1) {
    if (iterations[i])
      iterations[i].d(detaching);
  }
}
function element(name) {
  return document.createElement(name);
}
function svg_element(name) {
  return document.createElementNS("http://www.w3.org/2000/svg", name);
}
function text(data) {
  return document.createTextNode(data);
}
function space() {
  return text(" ");
}
function empty() {
  return text("");
}
function listen(node, event, handler, options) {
  node.addEventListener(event, handler, options);
  return () => node.removeEventListener(event, handler, options);
}
function attr(node, attribute, value) {
  if (value == null)
    node.removeAttribute(attribute);
  else if (node.getAttribute(attribute) !== value)
    node.setAttribute(attribute, value);
}
function set_attributes(node, attributes) {
  const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);
  for (const key in attributes) {
    if (attributes[key] == null) {
      node.removeAttribute(key);
    } else if (key === "style") {
      node.style.cssText = attributes[key];
    } else if (key === "__value") {
      node.value = node[key] = attributes[key];
    } else if (descriptors[key] && descriptors[key].set) {
      node[key] = attributes[key];
    } else {
      attr(node, key, attributes[key]);
    }
  }
}
function to_number(value) {
  return value === "" ? null : +value;
}
function children(element2) {
  return Array.from(element2.childNodes);
}
function set_data(text2, data) {
  data = "" + data;
  if (text2.wholeText !== data)
    text2.data = data;
}
function set_input_value(input, value) {
  input.value = value == null ? "" : value;
}
var crossorigin;
function is_crossorigin() {
  if (crossorigin === void 0) {
    crossorigin = false;
    try {
      if (typeof window !== "undefined" && window.parent) {
        void window.parent.document;
      }
    } catch (error) {
      crossorigin = true;
    }
  }
  return crossorigin;
}
function add_resize_listener(node, fn) {
  const computed_style = getComputedStyle(node);
  if (computed_style.position === "static") {
    node.style.position = "relative";
  }
  const iframe = element("iframe");
  iframe.setAttribute("style", "display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;");
  iframe.setAttribute("aria-hidden", "true");
  iframe.tabIndex = -1;
  const crossorigin2 = is_crossorigin();
  let unsubscribe;
  if (crossorigin2) {
    iframe.src = "data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>";
    unsubscribe = listen(window, "message", (event) => {
      if (event.source === iframe.contentWindow)
        fn();
    });
  } else {
    iframe.src = "about:blank";
    iframe.onload = () => {
      unsubscribe = listen(iframe.contentWindow, "resize", fn);
    };
  }
  append(node, iframe);
  return () => {
    if (crossorigin2) {
      unsubscribe();
    } else if (unsubscribe && iframe.contentWindow) {
      unsubscribe();
    }
    detach(iframe);
  };
}
function toggle_class(element2, name, toggle) {
  element2.classList[toggle ? "add" : "remove"](name);
}
function custom_event(type, detail) {
  const e = document.createEvent("CustomEvent");
  e.initCustomEvent(type, false, false, detail);
  return e;
}
var current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
function createEventDispatcher() {
  const component = get_current_component();
  return (type, detail) => {
    const callbacks = component.$$.callbacks[type];
    if (callbacks) {
      const event = custom_event(type, detail);
      callbacks.slice().forEach((fn) => {
        fn.call(component, event);
      });
    }
  };
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
function getContext(key) {
  return get_current_component().$$.context.get(key);
}
var dirty_components = [];
var binding_callbacks = [];
var render_callbacks = [];
var flush_callbacks = [];
var resolved_promise = Promise.resolve();
var update_scheduled = false;
function schedule_update() {
  if (!update_scheduled) {
    update_scheduled = true;
    resolved_promise.then(flush);
  }
}
function add_render_callback(fn) {
  render_callbacks.push(fn);
}
function add_flush_callback(fn) {
  flush_callbacks.push(fn);
}
var flushing = false;
var seen_callbacks = new Set();
function flush() {
  if (flushing)
    return;
  flushing = true;
  do {
    for (let i = 0; i < dirty_components.length; i += 1) {
      const component = dirty_components[i];
      set_current_component(component);
      update(component.$$);
    }
    set_current_component(null);
    dirty_components.length = 0;
    while (binding_callbacks.length)
      binding_callbacks.pop()();
    for (let i = 0; i < render_callbacks.length; i += 1) {
      const callback = render_callbacks[i];
      if (!seen_callbacks.has(callback)) {
        seen_callbacks.add(callback);
        callback();
      }
    }
    render_callbacks.length = 0;
  } while (dirty_components.length);
  while (flush_callbacks.length) {
    flush_callbacks.pop()();
  }
  update_scheduled = false;
  flushing = false;
  seen_callbacks.clear();
}
function update($$) {
  if ($$.fragment !== null) {
    $$.update();
    run_all($$.before_update);
    const dirty = $$.dirty;
    $$.dirty = [-1];
    $$.fragment && $$.fragment.p($$.ctx, dirty);
    $$.after_update.forEach(add_render_callback);
  }
}
var outroing = new Set();
var outros;
function group_outros() {
  outros = {
    r: 0,
    c: [],
    p: outros
  };
}
function check_outros() {
  if (!outros.r) {
    run_all(outros.c);
  }
  outros = outros.p;
}
function transition_in(block, local) {
  if (block && block.i) {
    outroing.delete(block);
    block.i(local);
  }
}
function transition_out(block, local, detach2, callback) {
  if (block && block.o) {
    if (outroing.has(block))
      return;
    outroing.add(block);
    outros.c.push(() => {
      outroing.delete(block);
      if (callback) {
        if (detach2)
          block.d(1);
        callback();
      }
    });
    block.o(local);
  }
}
function get_spread_update(levels, updates) {
  const update2 = {};
  const to_null_out = {};
  const accounted_for = {$$scope: 1};
  let i = levels.length;
  while (i--) {
    const o = levels[i];
    const n = updates[i];
    if (n) {
      for (const key in o) {
        if (!(key in n))
          to_null_out[key] = 1;
      }
      for (const key in n) {
        if (!accounted_for[key]) {
          update2[key] = n[key];
          accounted_for[key] = 1;
        }
      }
      levels[i] = n;
    } else {
      for (const key in o) {
        accounted_for[key] = 1;
      }
    }
  }
  for (const key in to_null_out) {
    if (!(key in update2))
      update2[key] = void 0;
  }
  return update2;
}
function get_spread_object(spread_props) {
  return typeof spread_props === "object" && spread_props !== null ? spread_props : {};
}
function bind(component, name, callback) {
  const index = component.$$.props[name];
  if (index !== void 0) {
    component.$$.bound[index] = callback;
    callback(component.$$.ctx[index]);
  }
}
function create_component(block) {
  block && block.c();
}
function mount_component(component, target, anchor, customElement) {
  const {fragment, on_mount, on_destroy: on_destroy2, after_update} = component.$$;
  fragment && fragment.m(target, anchor);
  if (!customElement) {
    add_render_callback(() => {
      const new_on_destroy = on_mount.map(run).filter(is_function);
      if (on_destroy2) {
        on_destroy2.push(...new_on_destroy);
      } else {
        run_all(new_on_destroy);
      }
      component.$$.on_mount = [];
    });
  }
  after_update.forEach(add_render_callback);
}
function destroy_component(component, detaching) {
  const $$ = component.$$;
  if ($$.fragment !== null) {
    run_all($$.on_destroy);
    $$.fragment && $$.fragment.d(detaching);
    $$.on_destroy = $$.fragment = null;
    $$.ctx = [];
  }
}
function make_dirty(component, i) {
  if (component.$$.dirty[0] === -1) {
    dirty_components.push(component);
    schedule_update();
    component.$$.dirty.fill(0);
  }
  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;
}
function init(component, options, instance24, create_fragment26, not_equal2, props, dirty = [-1]) {
  const parent_component = current_component;
  set_current_component(component);
  const $$ = component.$$ = {
    fragment: null,
    ctx: null,
    props,
    update: noop,
    not_equal: not_equal2,
    bound: blank_object(),
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(parent_component ? parent_component.$$.context : options.context || []),
    callbacks: blank_object(),
    dirty,
    skip_bound: false
  };
  let ready = false;
  $$.ctx = instance24 ? instance24(component, options.props || {}, (i, ret, ...rest) => {
    const value = rest.length ? rest[0] : ret;
    if ($$.ctx && not_equal2($$.ctx[i], $$.ctx[i] = value)) {
      if (!$$.skip_bound && $$.bound[i])
        $$.bound[i](value);
      if (ready)
        make_dirty(component, i);
    }
    return ret;
  }) : [];
  $$.update();
  ready = true;
  run_all($$.before_update);
  $$.fragment = create_fragment26 ? create_fragment26($$.ctx) : false;
  if (options.target) {
    if (options.hydrate) {
      const nodes = children(options.target);
      $$.fragment && $$.fragment.l(nodes);
      nodes.forEach(detach);
    } else {
      $$.fragment && $$.fragment.c();
    }
    if (options.intro)
      transition_in(component.$$.fragment);
    mount_component(component, options.target, options.anchor, options.customElement);
    flush();
  }
  set_current_component(parent_component);
}
var SvelteComponent = class {
  $destroy() {
    destroy_component(this, 1);
    this.$destroy = noop;
  }
  $on(type, callback) {
    const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
    callbacks.push(callback);
    return () => {
      const index = callbacks.indexOf(callback);
      if (index !== -1)
        callbacks.splice(index, 1);
    };
  }
  $set($$props) {
    if (this.$$set && !is_empty($$props)) {
      this.$$.skip_bound = true;
      this.$$set($$props);
      this.$$.skip_bound = false;
    }
  }
};

// build/_snowpack/pkg/common/index-3e984e31.js
var subscriber_queue = [];
function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = [];
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (let i = 0; i < subscribers.length; i += 1) {
          const s = subscribers[i];
          s[1]();
          subscriber_queue.push(s, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update2(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.push(subscriber);
    if (subscribers.length === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      const index = subscribers.indexOf(subscriber);
      if (index !== -1) {
        subscribers.splice(index, 1);
      }
      if (subscribers.length === 0) {
        stop();
        stop = null;
      }
    };
  }
  return {set, update: update2, subscribe: subscribe2};
}
function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  const auto = fn.length < 2;
  return readable(initial_value, (set) => {
    let inited = false;
    const values = [];
    let pending = 0;
    let cleanup = noop;
    const sync = () => {
      if (pending) {
        return;
      }
      cleanup();
      const result = fn(single ? values[0] : values, set);
      if (auto) {
        set(result);
      } else {
        cleanup = is_function(result) ? result : noop;
      }
    };
    const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {
      values[i] = value;
      pending &= ~(1 << i);
      if (inited) {
        sync();
      }
    }, () => {
      pending |= 1 << i;
    }));
    inited = true;
    sync();
    return function stop() {
      run_all(unsubscribers);
      cleanup();
    };
  });
}

// build/_snowpack/pkg/svelte-routing.js
var LOCATION = {};
var ROUTER = {};
function getLocation(source) {
  return {
    ...source.location,
    state: source.history.state,
    key: source.history.state && source.history.state.key || "initial"
  };
}
function createHistory(source, options) {
  const listeners = [];
  let location2 = getLocation(source);
  return {
    get location() {
      return location2;
    },
    listen(listener) {
      listeners.push(listener);
      const popstateListener = () => {
        location2 = getLocation(source);
        listener({location: location2, action: "POP"});
      };
      source.addEventListener("popstate", popstateListener);
      return () => {
        source.removeEventListener("popstate", popstateListener);
        const index = listeners.indexOf(listener);
        listeners.splice(index, 1);
      };
    },
    navigate(to, {state, replace = false} = {}) {
      state = {...state, key: Date.now() + ""};
      try {
        if (replace) {
          source.history.replaceState(state, null, to);
        } else {
          source.history.pushState(state, null, to);
        }
      } catch (e) {
        source.location[replace ? "replace" : "assign"](to);
      }
      location2 = getLocation(source);
      listeners.forEach((listener) => listener({location: location2, action: "PUSH"}));
    }
  };
}
function createMemorySource(initialPathname = "/") {
  let index = 0;
  const stack = [{pathname: initialPathname, search: ""}];
  const states = [];
  return {
    get location() {
      return stack[index];
    },
    addEventListener(name, fn) {
    },
    removeEventListener(name, fn) {
    },
    history: {
      get entries() {
        return stack;
      },
      get index() {
        return index;
      },
      get state() {
        return states[index];
      },
      pushState(state, _, uri) {
        const [pathname, search = ""] = uri.split("?");
        index++;
        stack.push({pathname, search});
        states.push(state);
      },
      replaceState(state, _, uri) {
        const [pathname, search = ""] = uri.split("?");
        stack[index] = {pathname, search};
        states[index] = state;
      }
    }
  };
}
var canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var globalHistory = createHistory(canUseDOM ? window : createMemorySource());
var {navigate} = globalHistory;
var paramRe = /^:(.+)/;
var SEGMENT_POINTS = 4;
var STATIC_POINTS = 3;
var DYNAMIC_POINTS = 2;
var SPLAT_PENALTY = 1;
var ROOT_POINTS = 1;
function startsWith(string, search) {
  return string.substr(0, search.length) === search;
}
function isRootSegment(segment) {
  return segment === "";
}
function isDynamic(segment) {
  return paramRe.test(segment);
}
function isSplat(segment) {
  return segment[0] === "*";
}
function segmentize(uri) {
  return uri.replace(/(^\/+|\/+$)/g, "").split("/");
}
function stripSlashes(str) {
  return str.replace(/(^\/+|\/+$)/g, "");
}
function rankRoute(route, index) {
  const score = route.default ? 0 : segmentize(route.path).reduce((score2, segment) => {
    score2 += SEGMENT_POINTS;
    if (isRootSegment(segment)) {
      score2 += ROOT_POINTS;
    } else if (isDynamic(segment)) {
      score2 += DYNAMIC_POINTS;
    } else if (isSplat(segment)) {
      score2 -= SEGMENT_POINTS + SPLAT_PENALTY;
    } else {
      score2 += STATIC_POINTS;
    }
    return score2;
  }, 0);
  return {route, score, index};
}
function rankRoutes(routes) {
  return routes.map(rankRoute).sort((a, b) => a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index);
}
function pick(routes, uri) {
  let match2;
  let default_;
  const [uriPathname] = uri.split("?");
  const uriSegments = segmentize(uriPathname);
  const isRootUri = uriSegments[0] === "";
  const ranked = rankRoutes(routes);
  for (let i = 0, l = ranked.length; i < l; i++) {
    const route = ranked[i].route;
    let missed = false;
    if (route.default) {
      default_ = {
        route,
        params: {},
        uri
      };
      continue;
    }
    const routeSegments = segmentize(route.path);
    const params = {};
    const max = Math.max(uriSegments.length, routeSegments.length);
    let index = 0;
    for (; index < max; index++) {
      const routeSegment = routeSegments[index];
      const uriSegment = uriSegments[index];
      if (routeSegment !== void 0 && isSplat(routeSegment)) {
        const splatName = routeSegment === "*" ? "*" : routeSegment.slice(1);
        params[splatName] = uriSegments.slice(index).map(decodeURIComponent).join("/");
        break;
      }
      if (uriSegment === void 0) {
        missed = true;
        break;
      }
      let dynamicMatch = paramRe.exec(routeSegment);
      if (dynamicMatch && !isRootUri) {
        const value = decodeURIComponent(uriSegment);
        params[dynamicMatch[1]] = value;
      } else if (routeSegment !== uriSegment) {
        missed = true;
        break;
      }
    }
    if (!missed) {
      match2 = {
        route,
        params,
        uri: "/" + uriSegments.slice(0, index).join("/")
      };
      break;
    }
  }
  return match2 || default_ || null;
}
function match(route, uri) {
  return pick([route], uri);
}
function addQuery(pathname, query) {
  return pathname + (query ? `?${query}` : "");
}
function resolve(to, base) {
  if (startsWith(to, "/")) {
    return to;
  }
  const [toPathname, toQuery] = to.split("?");
  const [basePathname] = base.split("?");
  const toSegments = segmentize(toPathname);
  const baseSegments = segmentize(basePathname);
  if (toSegments[0] === "") {
    return addQuery(basePathname, toQuery);
  }
  if (!startsWith(toSegments[0], ".")) {
    const pathname = baseSegments.concat(toSegments).join("/");
    return addQuery((basePathname === "/" ? "" : "/") + pathname, toQuery);
  }
  const allSegments = baseSegments.concat(toSegments);
  const segments = [];
  allSegments.forEach((segment) => {
    if (segment === "..") {
      segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return addQuery("/" + segments.join("/"), toQuery);
}
function combinePaths(basepath, path) {
  return `${stripSlashes(path === "/" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`)}/`;
}
function shouldNavigate(event) {
  return !event.defaultPrevented && event.button === 0 && !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function create_fragment(ctx) {
  let current;
  const default_slot_template = ctx[9].default;
  const default_slot = create_slot(default_slot_template, ctx, ctx[8], null);
  return {
    c() {
      if (default_slot)
        default_slot.c();
    },
    m(target, anchor) {
      if (default_slot) {
        default_slot.m(target, anchor);
      }
      current = true;
    },
    p(ctx2, [dirty]) {
      if (default_slot) {
        if (default_slot.p && dirty & 256) {
          update_slot(default_slot, default_slot_template, ctx2, ctx2[8], dirty, null, null);
        }
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(default_slot, local);
      current = true;
    },
    o(local) {
      transition_out(default_slot, local);
      current = false;
    },
    d(detaching) {
      if (default_slot)
        default_slot.d(detaching);
    }
  };
}
function instance($$self, $$props, $$invalidate) {
  let $base;
  let $location;
  let $routes;
  let {$$slots: slots = {}, $$scope} = $$props;
  let {basepath = "/"} = $$props;
  let {url = null} = $$props;
  const locationContext = getContext(LOCATION);
  const routerContext = getContext(ROUTER);
  const routes = writable([]);
  component_subscribe($$self, routes, (value) => $$invalidate(7, $routes = value));
  const activeRoute = writable(null);
  let hasActiveRoute = false;
  const location2 = locationContext || writable(url ? {pathname: url} : globalHistory.location);
  component_subscribe($$self, location2, (value) => $$invalidate(6, $location = value));
  const base = routerContext ? routerContext.routerBase : writable({path: basepath, uri: basepath});
  component_subscribe($$self, base, (value) => $$invalidate(5, $base = value));
  const routerBase = derived([base, activeRoute], ([base2, activeRoute2]) => {
    if (activeRoute2 === null) {
      return base2;
    }
    const {path: basepath2} = base2;
    const {route, uri} = activeRoute2;
    const path = route.default ? basepath2 : route.path.replace(/\*.*$/, "");
    return {path, uri};
  });
  function registerRoute(route) {
    const {path: basepath2} = $base;
    let {path} = route;
    route._path = path;
    route.path = combinePaths(basepath2, path);
    if (typeof window === "undefined") {
      if (hasActiveRoute) {
        return;
      }
      const matchingRoute = match(route, $location.pathname);
      if (matchingRoute) {
        activeRoute.set(matchingRoute);
        hasActiveRoute = true;
      }
    } else {
      routes.update((rs) => {
        rs.push(route);
        return rs;
      });
    }
  }
  function unregisterRoute(route) {
    routes.update((rs) => {
      const index = rs.indexOf(route);
      rs.splice(index, 1);
      return rs;
    });
  }
  if (!locationContext) {
    onMount(() => {
      const unlisten = globalHistory.listen((history) => {
        location2.set(history.location);
      });
      return unlisten;
    });
    setContext(LOCATION, location2);
  }
  setContext(ROUTER, {
    activeRoute,
    base,
    routerBase,
    registerRoute,
    unregisterRoute
  });
  $$self.$$set = ($$props2) => {
    if ("basepath" in $$props2)
      $$invalidate(3, basepath = $$props2.basepath);
    if ("url" in $$props2)
      $$invalidate(4, url = $$props2.url);
    if ("$$scope" in $$props2)
      $$invalidate(8, $$scope = $$props2.$$scope);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & 32) {
      {
        const {path: basepath2} = $base;
        routes.update((rs) => {
          rs.forEach((r) => r.path = combinePaths(basepath2, r._path));
          return rs;
        });
      }
    }
    if ($$self.$$.dirty & 192) {
      {
        const bestMatch = pick($routes, $location.pathname);
        activeRoute.set(bestMatch);
      }
    }
  };
  return [
    routes,
    location2,
    base,
    basepath,
    url,
    $base,
    $location,
    $routes,
    $$scope,
    slots
  ];
}
var Router = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance, create_fragment, safe_not_equal, {basepath: 3, url: 4});
  }
};
var get_default_slot_changes = (dirty) => ({
  params: dirty & 4,
  location: dirty & 16
});
var get_default_slot_context = (ctx) => ({
  params: ctx[2],
  location: ctx[4]
});
function create_if_block(ctx) {
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block_1, create_else_block];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (ctx2[0] !== null)
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  return {
    c() {
      if_block.c();
      if_block_anchor = empty();
    },
    m(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert(target, if_block_anchor, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block.c();
        } else {
          if_block.p(ctx2, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o(local) {
      transition_out(if_block);
      current = false;
    },
    d(detaching) {
      if_blocks[current_block_type_index].d(detaching);
      if (detaching)
        detach(if_block_anchor);
    }
  };
}
function create_else_block(ctx) {
  let current;
  const default_slot_template = ctx[10].default;
  const default_slot = create_slot(default_slot_template, ctx, ctx[9], get_default_slot_context);
  return {
    c() {
      if (default_slot)
        default_slot.c();
    },
    m(target, anchor) {
      if (default_slot) {
        default_slot.m(target, anchor);
      }
      current = true;
    },
    p(ctx2, dirty) {
      if (default_slot) {
        if (default_slot.p && dirty & 532) {
          update_slot(default_slot, default_slot_template, ctx2, ctx2[9], dirty, get_default_slot_changes, get_default_slot_context);
        }
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(default_slot, local);
      current = true;
    },
    o(local) {
      transition_out(default_slot, local);
      current = false;
    },
    d(detaching) {
      if (default_slot)
        default_slot.d(detaching);
    }
  };
}
function create_if_block_1(ctx) {
  let switch_instance;
  let switch_instance_anchor;
  let current;
  const switch_instance_spread_levels = [
    {location: ctx[4]},
    ctx[2],
    ctx[3]
  ];
  var switch_value = ctx[0];
  function switch_props(ctx2) {
    let switch_instance_props = {};
    for (let i = 0; i < switch_instance_spread_levels.length; i += 1) {
      switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
    }
    return {props: switch_instance_props};
  }
  if (switch_value) {
    switch_instance = new switch_value(switch_props());
  }
  return {
    c() {
      if (switch_instance)
        create_component(switch_instance.$$.fragment);
      switch_instance_anchor = empty();
    },
    m(target, anchor) {
      if (switch_instance) {
        mount_component(switch_instance, target, anchor);
      }
      insert(target, switch_instance_anchor, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      const switch_instance_changes = dirty & 28 ? get_spread_update(switch_instance_spread_levels, [
        dirty & 16 && {location: ctx2[4]},
        dirty & 4 && get_spread_object(ctx2[2]),
        dirty & 8 && get_spread_object(ctx2[3])
      ]) : {};
      if (switch_value !== (switch_value = ctx2[0])) {
        if (switch_instance) {
          group_outros();
          const old_component = switch_instance;
          transition_out(old_component.$$.fragment, 1, 0, () => {
            destroy_component(old_component, 1);
          });
          check_outros();
        }
        if (switch_value) {
          switch_instance = new switch_value(switch_props());
          create_component(switch_instance.$$.fragment);
          transition_in(switch_instance.$$.fragment, 1);
          mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
        switch_instance.$set(switch_instance_changes);
      }
    },
    i(local) {
      if (current)
        return;
      if (switch_instance)
        transition_in(switch_instance.$$.fragment, local);
      current = true;
    },
    o(local) {
      if (switch_instance)
        transition_out(switch_instance.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(switch_instance_anchor);
      if (switch_instance)
        destroy_component(switch_instance, detaching);
    }
  };
}
function create_fragment$1(ctx) {
  let if_block_anchor;
  let current;
  let if_block = ctx[1] !== null && ctx[1].route === ctx[7] && create_if_block(ctx);
  return {
    c() {
      if (if_block)
        if_block.c();
      if_block_anchor = empty();
    },
    m(target, anchor) {
      if (if_block)
        if_block.m(target, anchor);
      insert(target, if_block_anchor, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      if (ctx2[1] !== null && ctx2[1].route === ctx2[7]) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & 2) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o(local) {
      transition_out(if_block);
      current = false;
    },
    d(detaching) {
      if (if_block)
        if_block.d(detaching);
      if (detaching)
        detach(if_block_anchor);
    }
  };
}
function instance$1($$self, $$props, $$invalidate) {
  let $activeRoute;
  let $location;
  let {$$slots: slots = {}, $$scope} = $$props;
  let {path = ""} = $$props;
  let {component = null} = $$props;
  const {registerRoute, unregisterRoute, activeRoute} = getContext(ROUTER);
  component_subscribe($$self, activeRoute, (value) => $$invalidate(1, $activeRoute = value));
  const location2 = getContext(LOCATION);
  component_subscribe($$self, location2, (value) => $$invalidate(4, $location = value));
  const route = {
    path,
    default: path === ""
  };
  let routeParams = {};
  let routeProps = {};
  registerRoute(route);
  if (typeof window !== "undefined") {
    onDestroy(() => {
      unregisterRoute(route);
    });
  }
  $$self.$$set = ($$new_props) => {
    $$invalidate(13, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    if ("path" in $$new_props)
      $$invalidate(8, path = $$new_props.path);
    if ("component" in $$new_props)
      $$invalidate(0, component = $$new_props.component);
    if ("$$scope" in $$new_props)
      $$invalidate(9, $$scope = $$new_props.$$scope);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & 2) {
      if ($activeRoute && $activeRoute.route === route) {
        $$invalidate(2, routeParams = $activeRoute.params);
      }
    }
    {
      const {path: path2, component: component2, ...rest} = $$props;
      $$invalidate(3, routeProps = rest);
    }
  };
  $$props = exclude_internal_props($$props);
  return [
    component,
    $activeRoute,
    routeParams,
    routeProps,
    $location,
    activeRoute,
    location2,
    route,
    path,
    $$scope,
    slots
  ];
}
var Route = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance$1, create_fragment$1, safe_not_equal, {path: 8, component: 0});
  }
};
function create_fragment$2(ctx) {
  let a;
  let current;
  let mounted;
  let dispose;
  const default_slot_template = ctx[16].default;
  const default_slot = create_slot(default_slot_template, ctx, ctx[15], null);
  let a_levels = [
    {href: ctx[0]},
    {"aria-current": ctx[2]},
    ctx[1],
    ctx[6]
  ];
  let a_data = {};
  for (let i = 0; i < a_levels.length; i += 1) {
    a_data = assign(a_data, a_levels[i]);
  }
  return {
    c() {
      a = element("a");
      if (default_slot)
        default_slot.c();
      set_attributes(a, a_data);
    },
    m(target, anchor) {
      insert(target, a, anchor);
      if (default_slot) {
        default_slot.m(a, null);
      }
      current = true;
      if (!mounted) {
        dispose = listen(a, "click", ctx[5]);
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (default_slot) {
        if (default_slot.p && dirty & 32768) {
          update_slot(default_slot, default_slot_template, ctx2, ctx2[15], dirty, null, null);
        }
      }
      set_attributes(a, a_data = get_spread_update(a_levels, [
        (!current || dirty & 1) && {href: ctx2[0]},
        (!current || dirty & 4) && {"aria-current": ctx2[2]},
        dirty & 2 && ctx2[1],
        dirty & 64 && ctx2[6]
      ]));
    },
    i(local) {
      if (current)
        return;
      transition_in(default_slot, local);
      current = true;
    },
    o(local) {
      transition_out(default_slot, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(a);
      if (default_slot)
        default_slot.d(detaching);
      mounted = false;
      dispose();
    }
  };
}
function instance$2($$self, $$props, $$invalidate) {
  let ariaCurrent;
  const omit_props_names = ["to", "replace", "state", "getProps"];
  let $$restProps = compute_rest_props($$props, omit_props_names);
  let $base;
  let $location;
  let {$$slots: slots = {}, $$scope} = $$props;
  let {to = "#"} = $$props;
  let {replace = false} = $$props;
  let {state = {}} = $$props;
  let {getProps = () => ({})} = $$props;
  const {base} = getContext(ROUTER);
  component_subscribe($$self, base, (value) => $$invalidate(13, $base = value));
  const location2 = getContext(LOCATION);
  component_subscribe($$self, location2, (value) => $$invalidate(14, $location = value));
  const dispatch = createEventDispatcher();
  let href, isPartiallyCurrent, isCurrent, props;
  function onClick(event) {
    dispatch("click", event);
    if (shouldNavigate(event)) {
      event.preventDefault();
      const shouldReplace = $location.pathname === href || replace;
      navigate(href, {state, replace: shouldReplace});
    }
  }
  $$self.$$set = ($$new_props) => {
    $$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
    $$invalidate(6, $$restProps = compute_rest_props($$props, omit_props_names));
    if ("to" in $$new_props)
      $$invalidate(7, to = $$new_props.to);
    if ("replace" in $$new_props)
      $$invalidate(8, replace = $$new_props.replace);
    if ("state" in $$new_props)
      $$invalidate(9, state = $$new_props.state);
    if ("getProps" in $$new_props)
      $$invalidate(10, getProps = $$new_props.getProps);
    if ("$$scope" in $$new_props)
      $$invalidate(15, $$scope = $$new_props.$$scope);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & 8320) {
      $$invalidate(0, href = to === "/" ? $base.uri : resolve(to, $base.uri));
    }
    if ($$self.$$.dirty & 16385) {
      $$invalidate(11, isPartiallyCurrent = startsWith($location.pathname, href));
    }
    if ($$self.$$.dirty & 16385) {
      $$invalidate(12, isCurrent = href === $location.pathname);
    }
    if ($$self.$$.dirty & 4096) {
      $$invalidate(2, ariaCurrent = isCurrent ? "page" : void 0);
    }
    if ($$self.$$.dirty & 23553) {
      $$invalidate(1, props = getProps({
        location: $location,
        href,
        isPartiallyCurrent,
        isCurrent
      }));
    }
  };
  return [
    href,
    props,
    ariaCurrent,
    base,
    location2,
    onClick,
    $$restProps,
    to,
    replace,
    state,
    getProps,
    isPartiallyCurrent,
    isCurrent,
    $base,
    $location,
    $$scope,
    slots
  ];
}
var Link = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance$2, create_fragment$2, safe_not_equal, {
      to: 7,
      replace: 8,
      state: 9,
      getProps: 10
    });
  }
};

// build/dist/Nav.svelte.js
function create_default_slot(ctx) {
  let svg;
  let path;
  let t0;
  let div;
  return {
    c() {
      svg = svg_element("svg");
      path = svg_element("path");
      t0 = space();
      div = element("div");
      div.textContent = "Home";
      attr(path, "d", "M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z");
      attr(svg, "xmlns", "http://www.w3.org/2000/svg");
      attr(svg, "class", "block pl-1 h-10 w-10");
      attr(svg, "fill", "currentColor");
      attr(svg, "viewBox", "0 0 24 24");
      attr(svg, "stroke", "currentColor");
    },
    m(target, anchor) {
      insert(target, svg, anchor);
      append(svg, path);
      insert(target, t0, anchor);
      insert(target, div, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(svg);
      if (detaching)
        detach(t0);
      if (detaching)
        detach(div);
    }
  };
}
function create_fragment2(ctx) {
  let header;
  let nav;
  let div0;
  let link;
  let t0;
  let div1;
  let t2;
  let div2;
  let current;
  link = new Link({
    props: {
      class: "block flex items-center",
      to: "/",
      $$slots: {default: [create_default_slot]},
      $$scope: {ctx}
    }
  });
  return {
    c() {
      header = element("header");
      nav = element("nav");
      div0 = element("div");
      create_component(link.$$.fragment);
      t0 = space();
      div1 = element("div");
      div1.innerHTML = `<a href="https://sthaha.github.io" target="_blank">Blog</a>`;
      t2 = space();
      div2 = element("div");
      div2.innerHTML = `<a href="https://github.com/sthaha/svelte-ts-p5-js" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path></svg></a>`;
      attr(div0, "class", "flex items-center px-3 h-12  bg-gray-900 hover:bg-gray-700 hover:text-gray-100 ");
      attr(div1, "class", "flex items-center ml-4 px-6 h-12  bg-gray-900 hover:bg-gray-700 hover:text-gray-100");
      attr(div2, "class", "ml-auto w-12 h-12 flex justify-center items-center\n      rounded-full bg-gray-900 hover:bg-gray-700 hover:text-gray-100\n      hover:ring-4 hover:ring-green-500");
      attr(nav, "class", "mx-4 flex w-full items-center text-xl text-gray-300");
      attr(header, "class", "fixed top-0 z-50 w-full h-16 opacity-95 bg-gray-800 flex items-center shadow-2xl");
    },
    m(target, anchor) {
      insert(target, header, anchor);
      append(header, nav);
      append(nav, div0);
      mount_component(link, div0, null);
      append(nav, t0);
      append(nav, div1);
      append(nav, t2);
      append(nav, div2);
      current = true;
    },
    p(ctx2, [dirty]) {
      const link_changes = {};
      if (dirty & 1) {
        link_changes.$$scope = {dirty, ctx: ctx2};
      }
      link.$set(link_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(link.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(link.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(header);
      destroy_component(link);
    }
  };
}
var Nav = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, null, create_fragment2, safe_not_equal, {});
  }
};
var Nav_svelte_default = Nav;

// build/dist/ui/Button.svelte.js
var get_contents_slot_changes = (dirty) => ({});
var get_contents_slot_context = (ctx) => ({});
function create_else_block2(ctx) {
  let button;
  let button_class_value;
  let mounted;
  let dispose;
  return {
    c() {
      button = element("button");
      attr(button, "class", button_class_value = "inline-block shadow h-4 w-4 md:h-8 md:w-8 rounded-full  hover:shadow-lg transition " + (ctx[5].class || "") + " " + (ctx[0] ? ctx[1] : ctx[2]));
    },
    m(target, anchor) {
      insert(target, button, anchor);
      if (!mounted) {
        dispose = listen(button, "click", ctx[3]);
        mounted = true;
      }
    },
    p(ctx2, dirty) {
      if (dirty & 39 && button_class_value !== (button_class_value = "inline-block shadow h-4 w-4 md:h-8 md:w-8 rounded-full  hover:shadow-lg transition " + (ctx2[5].class || "") + " " + (ctx2[0] ? ctx2[1] : ctx2[2]))) {
        attr(button, "class", button_class_value);
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching)
        detach(button);
      mounted = false;
      dispose();
    }
  };
}
function create_if_block2(ctx) {
  let button;
  let button_class_value;
  let current;
  let mounted;
  let dispose;
  const contents_slot_template = ctx[7].contents;
  const contents_slot = create_slot(contents_slot_template, ctx, ctx[6], get_contents_slot_context);
  return {
    c() {
      button = element("button");
      if (contents_slot)
        contents_slot.c();
      attr(button, "class", button_class_value = "inline-block px-4 py-2 rounded-2xl shadow text-center text-xs md:text-md hover:shadow-lg transition " + (ctx[5].class || "") + " " + (ctx[0] ? ctx[1] : ctx[2]));
    },
    m(target, anchor) {
      insert(target, button, anchor);
      if (contents_slot) {
        contents_slot.m(button, null);
      }
      current = true;
      if (!mounted) {
        dispose = listen(button, "click", ctx[3]);
        mounted = true;
      }
    },
    p(ctx2, dirty) {
      if (contents_slot) {
        if (contents_slot.p && dirty & 64) {
          update_slot(contents_slot, contents_slot_template, ctx2, ctx2[6], dirty, get_contents_slot_changes, get_contents_slot_context);
        }
      }
      if (!current || dirty & 39 && button_class_value !== (button_class_value = "inline-block px-4 py-2 rounded-2xl shadow text-center text-xs md:text-md hover:shadow-lg transition " + (ctx2[5].class || "") + " " + (ctx2[0] ? ctx2[1] : ctx2[2]))) {
        attr(button, "class", button_class_value);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(contents_slot, local);
      current = true;
    },
    o(local) {
      transition_out(contents_slot, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(button);
      if (contents_slot)
        contents_slot.d(detaching);
      mounted = false;
      dispose();
    }
  };
}
function create_fragment3(ctx) {
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block2, create_else_block2];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (ctx2[4].contents)
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  return {
    c() {
      if_block.c();
      if_block_anchor = empty();
    },
    m(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert(target, if_block_anchor, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block.c();
        } else {
          if_block.p(ctx2, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o(local) {
      transition_out(if_block);
      current = false;
    },
    d(detaching) {
      if_blocks[current_block_type_index].d(detaching);
      if (detaching)
        detach(if_block_anchor);
    }
  };
}
function instance2($$self, $$props, $$invalidate) {
  let {$$slots: slots = {}, $$scope} = $$props;
  const $$slots = compute_slots(slots);
  let {enabled = true} = $$props;
  let {enabledClass = "text-gray-200 bg-green-600"} = $$props;
  let {disabledClass = "text-gray-400 bg-gray-700"} = $$props;
  const dispatch = createEventDispatcher();
  const handleClick = (e) => {
    if (!enabled) {
      return;
    }
    dispatch("click", e);
  };
  $$self.$$set = ($$new_props) => {
    $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    if ("enabled" in $$new_props)
      $$invalidate(0, enabled = $$new_props.enabled);
    if ("enabledClass" in $$new_props)
      $$invalidate(1, enabledClass = $$new_props.enabledClass);
    if ("disabledClass" in $$new_props)
      $$invalidate(2, disabledClass = $$new_props.disabledClass);
    if ("$$scope" in $$new_props)
      $$invalidate(6, $$scope = $$new_props.$$scope);
  };
  $$props = exclude_internal_props($$props);
  return [
    enabled,
    enabledClass,
    disabledClass,
    handleClick,
    $$slots,
    $$props,
    $$scope,
    slots
  ];
}
var Button = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance2, create_fragment3, safe_not_equal, {
      enabled: 0,
      enabledClass: 1,
      disabledClass: 2
    });
  }
};
var Button_svelte_default = Button;

// build/dist/apps/test-timer/utils.js
var toHMS = (t) => {
  if (!t) {
    return {H: 0, M: 0, S: 0, ms: 0};
  }
  const H = Math.floor(t / (60 * 60 * 1e3));
  t -= H * 60 * 60 * 1e3;
  const M = Math.floor(t / (60 * 1e3));
  t -= M * 60 * 1e3;
  const S = Math.floor(t / 1e3);
  t -= S * 1e3;
  const ms = t;
  return {H, M, S, ms};
};
var twoDigits = (x) => x < 10 ? `0${x}` : `${x}`;
var toTime = (t) => typeof t === "number" ? toHMS(t) : t;
var prettyHMS = (t) => {
  if (!t) {
    return {H: "00", M: "00", S: "00", ms: "000"};
  }
  const hms = toTime(t);
  const H = twoDigits(hms.H);
  const M = twoDigits(hms.M);
  const S = twoDigits(hms.S);
  const ms = String(hms.ms).padStart(3, "0");
  return {H, M, S, ms};
};
var formatHMS = (t) => {
  const {H, M, S} = prettyHMS(t);
  return `${H}:${M}:${S}`;
};
var formatTime = (t) => {
  const {H, M, S, ms} = prettyHMS(t);
  return `${H}:${M}:${S}.${ms}`;
};

// build/dist/apps/test-timer/store.js
var newTestDuration = () => {
  const duration = writable(0);
  const {subscribe: subscribe2, set, update: update2} = duration;
  return {
    subscribe: subscribe2,
    setTime: (h, m, s, ms = 0) => set(((h * 60 + m) * 60 + s) * 1e3 + ms),
    reset: () => set(0)
  };
};
var testDuration = newTestDuration();

// build/dist/apps/test-timer/export-csv.js
var exportCSV = (filename, contents) => {
  const blob = new Blob([contents], {type: "text/csv;charset=utf-8;"});
  if (navigator.msSaveBlob) {
    navigator.msSaveBlob(blob, filename);
    return;
  }
  const link = document.createElement("a");
  if (link.download !== void 0) {
    var url = URL.createObjectURL(blob);
    link.setAttribute("href", url);
    link.setAttribute("download", filename);
    link.style.visibility = "hidden";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }
};

// build/dist/apps/test-timer/StopWatch.svelte.js
function create_fragment4(ctx) {
  let div8;
  let div7;
  let div0;
  let t0_value = ctx[0].H + "";
  let t0;
  let t1;
  let div1;
  let t3;
  let div2;
  let t4_value = ctx[0].M + "";
  let t4;
  let t5;
  let div3;
  let t7;
  let div4;
  let t8_value = ctx[0].S + "";
  let t8;
  let t9;
  let div5;
  let t11;
  let div6;
  let t12_value = ctx[0].ms + "";
  let t12;
  return {
    c() {
      div8 = element("div");
      div7 = element("div");
      div0 = element("div");
      t0 = text(t0_value);
      t1 = space();
      div1 = element("div");
      div1.textContent = ":";
      t3 = space();
      div2 = element("div");
      t4 = text(t4_value);
      t5 = space();
      div3 = element("div");
      div3.textContent = ":";
      t7 = space();
      div4 = element("div");
      t8 = text(t8_value);
      t9 = space();
      div5 = element("div");
      div5.textContent = ".";
      t11 = space();
      div6 = element("div");
      t12 = text(t12_value);
      attr(div0, "class", "p-2 rounded-xl appearance-none outline-none");
      attr(div1, "class", "text-gray-400");
      attr(div2, "class", "p-2 rounded-xl appearance-none outline-none");
      attr(div3, "class", "text-gray-400");
      attr(div4, "class", "pl-2 rounded-xl appearance-none outline-none");
      attr(div5, "class", "text-gray-400 text-sm");
      attr(div6, "class", "pr-2 rounded-xl appearance-none outline-none text-sm text-gray-300");
      attr(div7, "class", "flex items-center");
      attr(div8, "class", "inline-block p-2 min-w-min bg-gray-800 text-gray-200 rounded-lg text-md md:text-2xl font-mono");
    },
    m(target, anchor) {
      insert(target, div8, anchor);
      append(div8, div7);
      append(div7, div0);
      append(div0, t0);
      append(div7, t1);
      append(div7, div1);
      append(div7, t3);
      append(div7, div2);
      append(div2, t4);
      append(div7, t5);
      append(div7, div3);
      append(div7, t7);
      append(div7, div4);
      append(div4, t8);
      append(div7, t9);
      append(div7, div5);
      append(div7, t11);
      append(div7, div6);
      append(div6, t12);
    },
    p(ctx2, [dirty]) {
      if (dirty & 1 && t0_value !== (t0_value = ctx2[0].H + ""))
        set_data(t0, t0_value);
      if (dirty & 1 && t4_value !== (t4_value = ctx2[0].M + ""))
        set_data(t4, t4_value);
      if (dirty & 1 && t8_value !== (t8_value = ctx2[0].S + ""))
        set_data(t8, t8_value);
      if (dirty & 1 && t12_value !== (t12_value = ctx2[0].ms + ""))
        set_data(t12, t12_value);
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching)
        detach(div8);
    }
  };
}
function instance3($$self, $$props, $$invalidate) {
  let elapsedPretty;
  var {State: State2} = $$props;
  (function(State3) {
    State3[State3["Running"] = 0] = "Running";
    State3[State3["Paused"] = 1] = "Paused";
  })(State2 || (State2 = {}));
  let state = State2.Paused;
  let startedAt;
  let ranAt;
  let previousElapsed = 0;
  let elapsed = 0;
  const reset = () => {
    stopTimer();
    state = State2.Paused;
    startedAt = null;
    ranAt = null;
    previousElapsed = 0;
    $$invalidate(8, elapsed = 0);
  };
  const dispatch = createEventDispatcher();
  const pause = () => {
    previousElapsed = elapsed;
    stopTimer();
    state = State2.Paused;
    dispatch("pause");
  };
  const restart = () => {
    dispatchLap();
    reset();
    run2();
  };
  const stop = () => {
    pause();
    dispatchLap();
    reset();
  };
  const restartAt = (start, alreadyElapsed) => {
    stopTimer();
    startedAt = start;
    ranAt = start;
    previousElapsed = alreadyElapsed + elapsed;
    $$invalidate(8, elapsed = 0);
    run2();
  };
  let timer2;
  const run2 = () => {
    startedAt || (startedAt = new Date());
    state = State2.Running;
    ranAt = ranAt ? new Date() : startedAt;
    timer2 = setInterval(() => {
      $$invalidate(8, elapsed = new Date() - ranAt + previousElapsed);
    }, 15);
    console.log("run", {
      startedAt: startedAt.toLocaleTimeString(),
      ranAt: ranAt.toLocaleTimeString(),
      elapsed: formatTime(elapsed),
      prev: formatTime(previousElapsed)
    });
    dispatch("run", {state});
  };
  const toggleRun = () => {
    state == State2.Running ? pause() : run2();
  };
  const dispatchLap = () => {
    if (!startedAt || !ranAt) {
      console.warn("sending lap when there is no start or end");
      return;
    }
    const now = new Date();
    const paused = Math.floor((now - startedAt - elapsed) / 10) * 10;
    console.log(" >>> change", {
      startedAt: startedAt.toLocaleTimeString(),
      endedAt: now.toLocaleTimeString(),
      elapsed: toHMS(elapsed),
      paused: toHMS(paused)
    }, paused);
    dispatch("change", {startedAt, endedAt: now, elapsed, paused});
  };
  const stopTimer = () => {
    clearInterval(timer2);
    timer2 = null;
  };
  onDestroy(() => {
    stopTimer();
  });
  $$self.$$set = ($$props2) => {
    if ("State" in $$props2)
      $$invalidate(1, State2 = $$props2.State);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & 256) {
      $:
        $$invalidate(0, elapsedPretty = prettyHMS(elapsed));
    }
  };
  return [
    elapsedPretty,
    State2,
    reset,
    pause,
    restart,
    stop,
    restartAt,
    toggleRun,
    elapsed
  ];
}
var StopWatch = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance3, create_fragment4, safe_not_equal, {
      State: 1,
      reset: 2,
      pause: 3,
      restart: 4,
      stop: 5,
      restartAt: 6,
      toggleRun: 7
    });
  }
  get reset() {
    return this.$$.ctx[2];
  }
  get pause() {
    return this.$$.ctx[3];
  }
  get restart() {
    return this.$$.ctx[4];
  }
  get stop() {
    return this.$$.ctx[5];
  }
  get restartAt() {
    return this.$$.ctx[6];
  }
  get toggleRun() {
    return this.$$.ctx[7];
  }
};
var StopWatch_svelte_default = StopWatch;

// build/dist/apps/test-timer/Counter.svelte.js
function create_fragment5(ctx) {
  let div1;
  let div0;
  let t;
  return {
    c() {
      div1 = element("div");
      div0 = element("div");
      t = text(ctx[0]);
      attr(div1, "class", "font-mono w-16\n  text-md md:text-xl text-center text-gray-100 text-bold\n  rounded-xl mr-2 py-4 bg-gray-800");
    },
    m(target, anchor) {
      insert(target, div1, anchor);
      append(div1, div0);
      append(div0, t);
    },
    p(ctx2, [dirty]) {
      if (dirty & 1)
        set_data(t, ctx2[0]);
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching)
        detach(div1);
    }
  };
}
function instance4($$self, $$props, $$invalidate) {
  let {value = 0} = $$props;
  $$self.$$set = ($$props2) => {
    if ("value" in $$props2)
      $$invalidate(0, value = $$props2.value);
  };
  return [value];
}
var Counter = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance4, create_fragment5, safe_not_equal, {value: 0});
  }
};
var Counter_svelte_default = Counter;

// build/dist/ui/Toggle.svelte.js
var get_inactive_slot_changes = (dirty) => ({});
var get_inactive_slot_context = (ctx) => ({});
var get_active_slot_changes = (dirty) => ({});
var get_active_slot_context = (ctx) => ({});
function create_else_block_1(ctx) {
  let button;
  let button_class_value;
  let mounted;
  let dispose;
  return {
    c() {
      button = element("button");
      attr(button, "class", button_class_value = "inline-block shadow h-4 w-4 md:h-8 md:w-8 rounded-full  hover:shadow-lg transition " + (ctx[5].class || ""));
      toggle_class(button, "bg-green-600", !ctx[1] && ctx[2] || ctx[1] && !ctx[2]);
      toggle_class(button, "bg-gray-600", !ctx[1] && !ctx[2] || ctx[1] && ctx[2]);
    },
    m(target, anchor) {
      insert(target, button, anchor);
      if (!mounted) {
        dispose = listen(button, "click", ctx[3]);
        mounted = true;
      }
    },
    p(ctx2, dirty) {
      if (dirty & 32 && button_class_value !== (button_class_value = "inline-block shadow h-4 w-4 md:h-8 md:w-8 rounded-full  hover:shadow-lg transition " + (ctx2[5].class || ""))) {
        attr(button, "class", button_class_value);
      }
      if (dirty & 38) {
        toggle_class(button, "bg-green-600", !ctx2[1] && ctx2[2] || ctx2[1] && !ctx2[2]);
      }
      if (dirty & 38) {
        toggle_class(button, "bg-gray-600", !ctx2[1] && !ctx2[2] || ctx2[1] && ctx2[2]);
      }
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching)
        detach(button);
      mounted = false;
      dispose();
    }
  };
}
function create_if_block3(ctx) {
  let button;
  let current_block_type_index;
  let if_block;
  let button_class_value;
  let current;
  let mounted;
  let dispose;
  const if_block_creators = [create_if_block_12, create_else_block3];
  const if_blocks = [];
  function select_block_type_1(ctx2, dirty) {
    if (ctx2[2])
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type_1(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  return {
    c() {
      button = element("button");
      if_block.c();
      attr(button, "class", button_class_value = "inline-block px-4 py-2 rounded-2xl shadow  text-center text-xs md:text-md hover:shadow-lg transition " + (ctx[5].class || ""));
      toggle_class(button, "text-gray-500", !ctx[0]);
      toggle_class(button, "bg-gray-700", !ctx[0]);
      toggle_class(button, "bg-green-600", !ctx[1] && ctx[2] || ctx[1] && !ctx[2]);
      toggle_class(button, "bg-gray-600", !ctx[1] && !ctx[2] || ctx[1] && ctx[2]);
    },
    m(target, anchor) {
      insert(target, button, anchor);
      if_blocks[current_block_type_index].m(button, null);
      current = true;
      if (!mounted) {
        dispose = listen(button, "click", ctx[3]);
        mounted = true;
      }
    },
    p(ctx2, dirty) {
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type_1(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block.c();
        } else {
          if_block.p(ctx2, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(button, null);
      }
      if (!current || dirty & 32 && button_class_value !== (button_class_value = "inline-block px-4 py-2 rounded-2xl shadow  text-center text-xs md:text-md hover:shadow-lg transition " + (ctx2[5].class || ""))) {
        attr(button, "class", button_class_value);
      }
      if (dirty & 33) {
        toggle_class(button, "text-gray-500", !ctx2[0]);
      }
      if (dirty & 33) {
        toggle_class(button, "bg-gray-700", !ctx2[0]);
      }
      if (dirty & 38) {
        toggle_class(button, "bg-green-600", !ctx2[1] && ctx2[2] || ctx2[1] && !ctx2[2]);
      }
      if (dirty & 38) {
        toggle_class(button, "bg-gray-600", !ctx2[1] && !ctx2[2] || ctx2[1] && ctx2[2]);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o(local) {
      transition_out(if_block);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(button);
      if_blocks[current_block_type_index].d();
      mounted = false;
      dispose();
    }
  };
}
function create_else_block3(ctx) {
  let current;
  const inactive_slot_template = ctx[8].inactive;
  const inactive_slot = create_slot(inactive_slot_template, ctx, ctx[7], get_inactive_slot_context);
  return {
    c() {
      if (inactive_slot)
        inactive_slot.c();
    },
    m(target, anchor) {
      if (inactive_slot) {
        inactive_slot.m(target, anchor);
      }
      current = true;
    },
    p(ctx2, dirty) {
      if (inactive_slot) {
        if (inactive_slot.p && dirty & 128) {
          update_slot(inactive_slot, inactive_slot_template, ctx2, ctx2[7], dirty, get_inactive_slot_changes, get_inactive_slot_context);
        }
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(inactive_slot, local);
      current = true;
    },
    o(local) {
      transition_out(inactive_slot, local);
      current = false;
    },
    d(detaching) {
      if (inactive_slot)
        inactive_slot.d(detaching);
    }
  };
}
function create_if_block_12(ctx) {
  let current;
  const active_slot_template = ctx[8].active;
  const active_slot = create_slot(active_slot_template, ctx, ctx[7], get_active_slot_context);
  return {
    c() {
      if (active_slot)
        active_slot.c();
    },
    m(target, anchor) {
      if (active_slot) {
        active_slot.m(target, anchor);
      }
      current = true;
    },
    p(ctx2, dirty) {
      if (active_slot) {
        if (active_slot.p && dirty & 128) {
          update_slot(active_slot, active_slot_template, ctx2, ctx2[7], dirty, get_active_slot_changes, get_active_slot_context);
        }
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(active_slot, local);
      current = true;
    },
    o(local) {
      transition_out(active_slot, local);
      current = false;
    },
    d(detaching) {
      if (active_slot)
        active_slot.d(detaching);
    }
  };
}
function create_fragment6(ctx) {
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block3, create_else_block_1];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (ctx2[4].active || ctx2[4].inactive)
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  return {
    c() {
      if_block.c();
      if_block_anchor = empty();
    },
    m(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert(target, if_block_anchor, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block.c();
        } else {
          if_block.p(ctx2, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o(local) {
      transition_out(if_block);
      current = false;
    },
    d(detaching) {
      if_blocks[current_block_type_index].d(detaching);
      if (detaching)
        detach(if_block_anchor);
    }
  };
}
function instance5($$self, $$props, $$invalidate) {
  let {$$slots: slots = {}, $$scope} = $$props;
  const $$slots = compute_slots(slots);
  let {enabled = true} = $$props;
  let {invert = false} = $$props;
  const toggleActive = () => !active;
  let {isActive = toggleActive} = $$props;
  let active = true;
  const dispatch = createEventDispatcher();
  const toggle = () => {
    if (!enabled) {
      return;
    }
    dispatch("toggle", {active});
    $$invalidate(2, active = isActive());
  };
  onMount(() => {
    if (isActive != toggleActive) {
      $$invalidate(2, active = isActive());
    }
  });
  $$self.$$set = ($$new_props) => {
    $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    if ("enabled" in $$new_props)
      $$invalidate(0, enabled = $$new_props.enabled);
    if ("invert" in $$new_props)
      $$invalidate(1, invert = $$new_props.invert);
    if ("isActive" in $$new_props)
      $$invalidate(6, isActive = $$new_props.isActive);
    if ("$$scope" in $$new_props)
      $$invalidate(7, $$scope = $$new_props.$$scope);
  };
  $$props = exclude_internal_props($$props);
  return [enabled, invert, active, toggle, $$slots, $$props, isActive, $$scope, slots];
}
var Toggle = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance5, create_fragment6, safe_not_equal, {enabled: 0, invert: 1, isActive: 6});
  }
};
var Toggle_svelte_default = Toggle;

// build/dist/apps/test-timer/RunningTimer.svelte.js
function get_each_context(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[24] = list[i];
  child_ctx[26] = i;
  return child_ctx;
}
function create_else_block4(ctx) {
  let t0;
  let div;
  let button;
  let t1;
  let if_block1_anchor;
  let current;
  let if_block0 = ctx[2] == 0 && create_if_block_3(ctx);
  button = new Button_svelte_default({
    props: {
      class: "w-24 text-xs md:text-md md:w-36 font-bold",
      $$slots: {contents: [create_contents_slot_5]},
      $$scope: {ctx}
    }
  });
  button.$on("click", ctx[7]);
  let if_block1 = ctx[2] >= 1 && create_if_block_2(ctx);
  return {
    c() {
      if (if_block0)
        if_block0.c();
      t0 = space();
      div = element("div");
      create_component(button.$$.fragment);
      t1 = space();
      if (if_block1)
        if_block1.c();
      if_block1_anchor = empty();
    },
    m(target, anchor) {
      if (if_block0)
        if_block0.m(target, anchor);
      insert(target, t0, anchor);
      insert(target, div, anchor);
      mount_component(button, div, null);
      insert(target, t1, anchor);
      if (if_block1)
        if_block1.m(target, anchor);
      insert(target, if_block1_anchor, anchor);
      current = true;
    },
    p(ctx2, dirty) {
      if (ctx2[2] == 0) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
        } else {
          if_block0 = create_if_block_3(ctx2);
          if_block0.c();
          if_block0.m(t0.parentNode, t0);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      const button_changes = {};
      if (dirty & 134217728) {
        button_changes.$$scope = {dirty, ctx: ctx2};
      }
      button.$set(button_changes);
      if (ctx2[2] >= 1) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
          if (dirty & 4) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block_2(ctx2);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(button.$$.fragment, local);
      transition_in(if_block1);
      current = true;
    },
    o(local) {
      transition_out(button.$$.fragment, local);
      transition_out(if_block1);
      current = false;
    },
    d(detaching) {
      if (if_block0)
        if_block0.d(detaching);
      if (detaching)
        detach(t0);
      if (detaching)
        detach(div);
      destroy_component(button);
      if (detaching)
        detach(t1);
      if (if_block1)
        if_block1.d(detaching);
      if (detaching)
        detach(if_block1_anchor);
    }
  };
}
function create_if_block_13(ctx) {
  let div0;
  let button0;
  let t0;
  let div1;
  let button1;
  let t1;
  let div2;
  let toggle;
  let t2;
  let div3;
  let button2;
  let current;
  button0 = new Button_svelte_default({
    props: {
      enabled: ctx[4] == "running",
      class: "md:w-32 font-bold",
      $$slots: {contents: [create_contents_slot_2]},
      $$scope: {ctx}
    }
  });
  button0.$on("click", ctx[5]);
  button1 = new Button_svelte_default({
    props: {
      enabled: ctx[4] == "running" && ctx[2] >= 1,
      class: "md:w-24",
      enabledClass: "bg-red-300 text-gray-100",
      $$slots: {contents: [create_contents_slot_1]},
      $$scope: {ctx}
    }
  });
  button1.$on("click", ctx[6]);
  toggle = new Toggle_svelte_default({
    props: {
      class: "bg-yellow-600 md:w-32",
      isActive: ctx[16],
      invert: true,
      $$slots: {
        inactive: [create_inactive_slot],
        active: [create_active_slot]
      },
      $$scope: {ctx}
    }
  });
  toggle.$on("toggle", ctx[7]);
  button2 = new Button_svelte_default({
    props: {
      enabledClass: "bg-red-500 text-gray-100",
      class: "md:w-24",
      $$slots: {contents: [create_contents_slot]},
      $$scope: {ctx}
    }
  });
  button2.$on("click", ctx[8]);
  return {
    c() {
      div0 = element("div");
      create_component(button0.$$.fragment);
      t0 = space();
      div1 = element("div");
      create_component(button1.$$.fragment);
      t1 = space();
      div2 = element("div");
      create_component(toggle.$$.fragment);
      t2 = space();
      div3 = element("div");
      create_component(button2.$$.fragment);
    },
    m(target, anchor) {
      insert(target, div0, anchor);
      mount_component(button0, div0, null);
      insert(target, t0, anchor);
      insert(target, div1, anchor);
      mount_component(button1, div1, null);
      insert(target, t1, anchor);
      insert(target, div2, anchor);
      mount_component(toggle, div2, null);
      insert(target, t2, anchor);
      insert(target, div3, anchor);
      mount_component(button2, div3, null);
      current = true;
    },
    p(ctx2, dirty) {
      const button0_changes = {};
      if (dirty & 16)
        button0_changes.enabled = ctx2[4] == "running";
      if (dirty & 134217728) {
        button0_changes.$$scope = {dirty, ctx: ctx2};
      }
      button0.$set(button0_changes);
      const button1_changes = {};
      if (dirty & 20)
        button1_changes.enabled = ctx2[4] == "running" && ctx2[2] >= 1;
      if (dirty & 134217728) {
        button1_changes.$$scope = {dirty, ctx: ctx2};
      }
      button1.$set(button1_changes);
      const toggle_changes = {};
      if (dirty & 16)
        toggle_changes.isActive = ctx2[16];
      if (dirty & 134217728) {
        toggle_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle.$set(toggle_changes);
      const button2_changes = {};
      if (dirty & 134217728) {
        button2_changes.$$scope = {dirty, ctx: ctx2};
      }
      button2.$set(button2_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(toggle.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(toggle.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div0);
      destroy_component(button0);
      if (detaching)
        detach(t0);
      if (detaching)
        detach(div1);
      destroy_component(button1);
      if (detaching)
        detach(t1);
      if (detaching)
        detach(div2);
      destroy_component(toggle);
      if (detaching)
        detach(t2);
      if (detaching)
        detach(div3);
      destroy_component(button2);
    }
  };
}
function create_if_block_3(ctx) {
  let div;
  let input;
  let mounted;
  let dispose;
  return {
    c() {
      div = element("div");
      input = element("input");
      attr(input, "class", "bg-gray-700 text-gray-200  text-sm md:text-md ring px-2 py-1 rounded");
      attr(input, "placeholder", "task name");
      attr(input, "type", "text");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      append(div, input);
      set_input_value(input, ctx[3]);
      if (!mounted) {
        dispose = listen(input, "input", ctx[17]);
        mounted = true;
      }
    },
    p(ctx2, dirty) {
      if (dirty & 8 && input.value !== ctx2[3]) {
        set_input_value(input, ctx2[3]);
      }
    },
    d(detaching) {
      if (detaching)
        detach(div);
      mounted = false;
      dispose();
    }
  };
}
function create_contents_slot_5(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Start";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_if_block_2(ctx) {
  let div0;
  let button0;
  let t;
  let div1;
  let button1;
  let current;
  button0 = new Button_svelte_default({
    props: {
      enabledClass: "bg-red-500 text-gray-100",
      class: "md:w-24",
      $$slots: {contents: [create_contents_slot_4]},
      $$scope: {ctx}
    }
  });
  button0.$on("click", ctx[10]);
  button1 = new Button_svelte_default({
    props: {
      class: "bg-blue-500",
      $$slots: {contents: [create_contents_slot_3]},
      $$scope: {ctx}
    }
  });
  button1.$on("click", ctx[9]);
  return {
    c() {
      div0 = element("div");
      create_component(button0.$$.fragment);
      t = space();
      div1 = element("div");
      create_component(button1.$$.fragment);
    },
    m(target, anchor) {
      insert(target, div0, anchor);
      mount_component(button0, div0, null);
      insert(target, t, anchor);
      insert(target, div1, anchor);
      mount_component(button1, div1, null);
      current = true;
    },
    p(ctx2, dirty) {
      const button0_changes = {};
      if (dirty & 134217728) {
        button0_changes.$$scope = {dirty, ctx: ctx2};
      }
      button0.$set(button0_changes);
      const button1_changes = {};
      if (dirty & 134217728) {
        button1_changes.$$scope = {dirty, ctx: ctx2};
      }
      button1.$set(button1_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div0);
      destroy_component(button0);
      if (detaching)
        detach(t);
      if (detaching)
        detach(div1);
      destroy_component(button1);
    }
  };
}
function create_contents_slot_4(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Reset";
      attr(span, "slot", "contents");
      attr(span, "class", "px-2");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_3(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Download";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_2(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Next";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_1(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Back";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_active_slot(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Pause";
      attr(span, "slot", "active");
      attr(span, "class", "text-gray-200");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Resume";
      attr(span, "slot", "inactive");
      attr(span, "class", "text-gray-200");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Stop";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_if_block4(ctx) {
  let div2;
  let div1;
  let div0;
  let table;
  let thead;
  let t9;
  let tbody;
  let each_value = ctx[1].slice(0, ctx[2]).reverse();
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
  }
  return {
    c() {
      div2 = element("div");
      div1 = element("div");
      div0 = element("div");
      table = element("table");
      thead = element("thead");
      thead.innerHTML = `<tr><th scope="col" class="px-3 md:px-6 py-3 text-xs font-medium uppercase tracking-wider">No</th> 
            <th scope="col" class="px-3 md:px-6 py-3 text-xs font-medium uppercase tracking-wider">Elapsed</th> 
            <th scope="col" class="px-3  md:px-6 py-3 text-xs font-medium uppercase tracking-wider">Start</th> 
            <th scope="col" class="hidden md:table-cell px-3 py-3 text-xs font-medium uppercase tracking-wider">Paused</th> 
            <th scope="col" class="px-3 py-3 text-xs font-medium uppercase tracking-wider">End</th></tr>`;
      t9 = space();
      tbody = element("tbody");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr(thead, "class", "bg-gray-700 text-gray-100");
      attr(tbody, "class", "bg-white divide-y divide-gray-300 ");
      attr(table, "class", "min-w-max divide-y divide-gray-400");
      attr(div0, "class", "shadow overflow-hidden border-b border-gray-200 sm:rounded-lg");
      attr(div1, "class", "py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8");
      attr(div2, "class", "text-xs md:text-md overflow-x-auto sm:-mx-6 lg:-mx-8");
    },
    m(target, anchor) {
      insert(target, div2, anchor);
      append(div2, div1);
      append(div1, div0);
      append(div0, table);
      append(table, thead);
      append(table, t9);
      append(table, tbody);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(tbody, null);
      }
    },
    p(ctx2, dirty) {
      if (dirty & 6) {
        each_value = ctx2[1].slice(0, ctx2[2]).reverse();
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(tbody, null);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value.length;
      }
    },
    d(detaching) {
      if (detaching)
        detach(div2);
      destroy_each(each_blocks, detaching);
    }
  };
}
function create_each_block(ctx) {
  let tr;
  let td0;
  let t0_value = ctx[2] - ctx[26] + "";
  let t0;
  let t1;
  let td1;
  let t2_value = formatHMS(ctx[24].elapsed) + "";
  let t2;
  let t3;
  let td2;
  let t4_value = ctx[24].startedAt.toLocaleTimeString() + "";
  let t4;
  let t5;
  let td3;
  let t6_value = formatHMS(ctx[24].paused) + "";
  let t6;
  let t7;
  let td4;
  let t8_value = ctx[24].endedAt.toLocaleTimeString() + "";
  let t8;
  let t9;
  return {
    c() {
      tr = element("tr");
      td0 = element("td");
      t0 = text(t0_value);
      t1 = space();
      td1 = element("td");
      t2 = text(t2_value);
      t3 = space();
      td2 = element("td");
      t4 = text(t4_value);
      t5 = space();
      td3 = element("td");
      t6 = text(t6_value);
      t7 = space();
      td4 = element("td");
      t8 = text(t8_value);
      t9 = space();
      attr(td0, "class", "px-3 py-2 text-right whitespace-nowrap");
      attr(td1, "class", "px-3 py-2 whitespace-nowrap");
      attr(td2, "class", "px-3 py-2 whitespace-nowrap");
      attr(td3, "class", "hidden md:table-cell px-3 py-2 whitespace-nowrap");
      attr(td4, "class", "px-3 py-2 whitespace-nowrap");
      attr(tr, "class", "hover:bg-blue-300 ease-in transition duration-300");
      toggle_class(tr, "bg-white", ctx[26] != 0);
      toggle_class(tr, "bg-red-300", ctx[26] == 0 && ctx[2] >= 2);
    },
    m(target, anchor) {
      insert(target, tr, anchor);
      append(tr, td0);
      append(td0, t0);
      append(tr, t1);
      append(tr, td1);
      append(td1, t2);
      append(tr, t3);
      append(tr, td2);
      append(td2, t4);
      append(tr, t5);
      append(tr, td3);
      append(td3, t6);
      append(tr, t7);
      append(tr, td4);
      append(td4, t8);
      append(tr, t9);
    },
    p(ctx2, dirty) {
      if (dirty & 4 && t0_value !== (t0_value = ctx2[2] - ctx2[26] + ""))
        set_data(t0, t0_value);
      if (dirty & 6 && t2_value !== (t2_value = formatHMS(ctx2[24].elapsed) + ""))
        set_data(t2, t2_value);
      if (dirty & 6 && t4_value !== (t4_value = ctx2[24].startedAt.toLocaleTimeString() + ""))
        set_data(t4, t4_value);
      if (dirty & 6 && t6_value !== (t6_value = formatHMS(ctx2[24].paused) + ""))
        set_data(t6, t6_value);
      if (dirty & 6 && t8_value !== (t8_value = ctx2[24].endedAt.toLocaleTimeString() + ""))
        set_data(t8, t8_value);
      if (dirty & 4) {
        toggle_class(tr, "bg-red-300", ctx2[26] == 0 && ctx2[2] >= 2);
      }
    },
    d(detaching) {
      if (detaching)
        detach(tr);
    }
  };
}
function create_fragment7(ctx) {
  let div0;
  let counter;
  let t0;
  let stopwatch;
  let t1;
  let div1;
  let current_block_type_index;
  let if_block0;
  let t2;
  let if_block1_anchor;
  let current;
  counter = new Counter_svelte_default({props: {value: ctx[2] + 1}});
  let stopwatch_props = {};
  stopwatch = new StopWatch_svelte_default({props: stopwatch_props});
  ctx[13](stopwatch);
  stopwatch.$on("change", ctx[11]);
  stopwatch.$on("pause", ctx[14]);
  stopwatch.$on("run", ctx[15]);
  const if_block_creators = [create_if_block_13, create_else_block4];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (ctx2[4] != "stopped")
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, -1);
  if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  let if_block1 = ctx[2] > 0 && create_if_block4(ctx);
  return {
    c() {
      div0 = element("div");
      create_component(counter.$$.fragment);
      t0 = space();
      create_component(stopwatch.$$.fragment);
      t1 = space();
      div1 = element("div");
      if_block0.c();
      t2 = space();
      if (if_block1)
        if_block1.c();
      if_block1_anchor = empty();
      attr(div0, "class", "bg-gray-700 md:px-7 px-3 py-2 flex");
      attr(div1, "class", "flex flex-row py-4 justify-center items-center space-x-2 md:space-x-4");
    },
    m(target, anchor) {
      insert(target, div0, anchor);
      mount_component(counter, div0, null);
      append(div0, t0);
      mount_component(stopwatch, div0, null);
      insert(target, t1, anchor);
      insert(target, div1, anchor);
      if_blocks[current_block_type_index].m(div1, null);
      insert(target, t2, anchor);
      if (if_block1)
        if_block1.m(target, anchor);
      insert(target, if_block1_anchor, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      const counter_changes = {};
      if (dirty & 4)
        counter_changes.value = ctx2[2] + 1;
      counter.$set(counter_changes);
      const stopwatch_changes = {};
      stopwatch.$set(stopwatch_changes);
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block0 = if_blocks[current_block_type_index];
        if (!if_block0) {
          if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block0.c();
        } else {
          if_block0.p(ctx2, dirty);
        }
        transition_in(if_block0, 1);
        if_block0.m(div1, null);
      }
      if (ctx2[2] > 0) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
        } else {
          if_block1 = create_if_block4(ctx2);
          if_block1.c();
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(counter.$$.fragment, local);
      transition_in(stopwatch.$$.fragment, local);
      transition_in(if_block0);
      current = true;
    },
    o(local) {
      transition_out(counter.$$.fragment, local);
      transition_out(stopwatch.$$.fragment, local);
      transition_out(if_block0);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div0);
      destroy_component(counter);
      ctx[13](null);
      destroy_component(stopwatch);
      if (detaching)
        detach(t1);
      if (detaching)
        detach(div1);
      if_blocks[current_block_type_index].d();
      if (detaching)
        detach(t2);
      if (if_block1)
        if_block1.d(detaching);
      if (detaching)
        detach(if_block1_anchor);
    }
  };
}
function instance6($$self, $$props, $$invalidate) {
  let stopWatch;
  let elapsedList = [];
  let current = 0;
  let taskName = "";
  const next = () => {
    stopWatch.restart();
  };
  const mergePrevious = () => {
    if (current == 0) {
      return;
    }
    $$invalidate(2, current--, current);
    const {startedAt, elapsed} = elapsedList[current];
    stopWatch.restartAt(startedAt, elapsed);
  };
  const togglePaused = () => {
    stopWatch.toggleRun();
  };
  const stop = () => {
    stopWatch.stop();
    setState("stopped");
  };
  const download = () => {
    const headers = ["NO.", "Time Taken", "Started At", "Paused", "Ended At"].join(",");
    const data = headers + "\n" + elapsedList.slice(0, current).map((x, i) => [
      i + 1,
      formatHMS(x.elapsed),
      x.startedAt.toLocaleTimeString(),
      formatHMS(x.paused),
      x.endedAt.toLocaleTimeString()
    ].join(",")).join("\n");
    exportCSV(taskName || "test-time.csv", data);
  };
  const dispatch = createEventDispatcher();
  const cleanup = () => {
    stopWatch.reset();
    $$invalidate(1, elapsedList = []);
    $$invalidate(2, current = 0);
    $$invalidate(3, taskName = "");
  };
  const reset = () => {
    cleanup();
    const store = window.localStorage;
    store.clear();
  };
  const dispatchDone = () => {
    dispatch("done", {});
  };
  const recordTime = (e) => {
    const {startedAt, endedAt, elapsed, paused} = e.detail;
    console.log("time:", startedAt.toLocaleTimeString(), " -> ", endedAt.toLocaleTimeString(), " elapsed: ", formatTime(elapsed), " paused: ", formatHMS(paused), paused);
    $$invalidate(1, elapsedList[current] = {startedAt, endedAt, elapsed, paused}, elapsedList);
    $$invalidate(2, current++, current);
    save();
  };
  let state = "stopped";
  const setState = (x) => {
    console.log({from: state, to: x});
    $$invalidate(4, state = x);
    save();
  };
  const stateChanged = ({detail}) => {
    console.log("state changed: ", {detail});
    running = detail.state == State.Running;
  };
  const save = () => {
    const store = window.localStorage;
    store.setItem("state", state);
    store.setItem("elapsedList", JSON.stringify(elapsedList));
    store.setItem("current", current);
  };
  const restore = () => {
    const store = window.localStorage;
    const s = store.getItem("state");
    const list = JSON.parse(store.getItem("elapsedList"));
    const c = parseInt(store.getItem("current"));
    console.log({s, list, c});
    if (!s || !list || !c) {
      console.log("no previous session found");
      return;
    }
    $$invalidate(4, state = s);
    $$invalidate(1, elapsedList = list.map((x) => ({
      ...x,
      startedAt: new Date(x.startedAt),
      endedAt: new Date(x.endedAt)
    })));
    $$invalidate(2, current = c);
    console.log({state, elapsedList, current});
  };
  onMount(() => {
    restore();
    if (state == "running") {
      next();
    }
  });
  function stopwatch_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      stopWatch = $$value;
      $$invalidate(0, stopWatch);
    });
  }
  const pause_handler = () => setState("paused");
  const run_handler = () => setState("running");
  const func = () => state == "running";
  function input_input_handler() {
    taskName = this.value;
    $$invalidate(3, taskName);
  }
  return [
    stopWatch,
    elapsedList,
    current,
    taskName,
    state,
    next,
    mergePrevious,
    togglePaused,
    stop,
    download,
    reset,
    recordTime,
    setState,
    stopwatch_binding,
    pause_handler,
    run_handler,
    func,
    input_input_handler
  ];
}
var RunningTimer = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance6, create_fragment7, safe_not_equal, {});
  }
};
var RunningTimer_svelte_default = RunningTimer;

// build/dist/apps/TestTimer.svelte.js
function create_fragment8(ctx) {
  let div;
  let runningtimer;
  let current;
  runningtimer = new RunningTimer_svelte_default({});
  runningtimer.$on("done", ctx[0]);
  return {
    c() {
      div = element("div");
      create_component(runningtimer.$$.fragment);
      attr(div, "class", "flex h-screen-0.80 p-8 white bg-gray-100 shadow-xl items-center flex-col");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      mount_component(runningtimer, div, null);
      current = true;
    },
    p: noop,
    i(local) {
      if (current)
        return;
      transition_in(runningtimer.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(runningtimer.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div);
      destroy_component(runningtimer);
    }
  };
}
function instance7($$self, $$props, $$invalidate) {
  let {location: location2 = ""} = $$props;
  let started = false;
  const start = () => started = true;
  const done = () => started = false;
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(1, location2 = $$props2.location);
  };
  return [done, location2];
}
var TestTimer = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance7, create_fragment8, safe_not_equal, {location: 1});
  }
};
var TestTimer_svelte_default = TestTimer;

// build/_snowpack/pkg/p5.js
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path, base) {
      return commonjsRequire(path, base === void 0 || base === null ? module.path : base);
    }
  }, fn(module, module.exports), module.exports;
}
function commonjsRequire() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var p5_min = createCommonjsModule(function(module, exports) {
  /*! p5.js v1.2.0 December 19, 2020 */
  !function(e) {
    module.exports = e();
  }(function() {
    return function a(o, s, l) {
      function u(t, e2) {
        if (!s[t]) {
          if (!o[t]) {
            var r = typeof commonjsRequire == "function" && commonjsRequire;
            if (!e2 && r)
              return r(t, true);
            if (h)
              return h(t, true);
            var i = new Error("Cannot find module '" + t + "'");
            throw i.code = "MODULE_NOT_FOUND", i;
          }
          var n = s[t] = {exports: {}};
          o[t][0].call(n.exports, function(e3) {
            return u(o[t][1][e3] || e3);
          }, n, n.exports, a, o, s, l);
        }
        return s[t].exports;
      }
      for (var h = typeof commonjsRequire == "function" && commonjsRequire, e = 0; e < l.length; e++)
        u(l[e]);
      return u;
    }({1: [function(e, t, r) {
      r.byteLength = function(e2) {
        var t2 = c(e2), r2 = t2[0], i2 = t2[1];
        return 3 * (r2 + i2) / 4 - i2;
      }, r.toByteArray = function(e2) {
        var t2, r2, i2 = c(e2), n2 = i2[0], a2 = i2[1], o = new h(function(e3, t3) {
          return 3 * (e3 + t3) / 4 - t3;
        }(n2, a2)), s2 = 0, l2 = 0 < a2 ? n2 - 4 : n2;
        for (r2 = 0; r2 < l2; r2 += 4)
          t2 = u[e2.charCodeAt(r2)] << 18 | u[e2.charCodeAt(r2 + 1)] << 12 | u[e2.charCodeAt(r2 + 2)] << 6 | u[e2.charCodeAt(r2 + 3)], o[s2++] = t2 >> 16 & 255, o[s2++] = t2 >> 8 & 255, o[s2++] = 255 & t2;
        a2 === 2 && (t2 = u[e2.charCodeAt(r2)] << 2 | u[e2.charCodeAt(r2 + 1)] >> 4, o[s2++] = 255 & t2);
        a2 === 1 && (t2 = u[e2.charCodeAt(r2)] << 10 | u[e2.charCodeAt(r2 + 1)] << 4 | u[e2.charCodeAt(r2 + 2)] >> 2, o[s2++] = t2 >> 8 & 255, o[s2++] = 255 & t2);
        return o;
      }, r.fromByteArray = function(e2) {
        for (var t2, r2 = e2.length, i2 = r2 % 3, n2 = [], a2 = 0, o = r2 - i2; a2 < o; a2 += 16383)
          n2.push(l(e2, a2, o < a2 + 16383 ? o : a2 + 16383));
        i2 == 1 ? (t2 = e2[r2 - 1], n2.push(s[t2 >> 2] + s[t2 << 4 & 63] + "==")) : i2 == 2 && (t2 = (e2[r2 - 2] << 8) + e2[r2 - 1], n2.push(s[t2 >> 10] + s[t2 >> 4 & 63] + s[t2 << 2 & 63] + "="));
        return n2.join("");
      };
      for (var s = [], u = [], h = typeof Uint8Array != "undefined" ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = 0, a = i.length; n < a; ++n)
        s[n] = i[n], u[i.charCodeAt(n)] = n;
      function c(e2) {
        var t2 = e2.length;
        if (0 < t2 % 4)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var r2 = e2.indexOf("=");
        return r2 === -1 && (r2 = t2), [r2, r2 === t2 ? 0 : 4 - r2 % 4];
      }
      function l(e2, t2, r2) {
        for (var i2, n2, a2 = [], o = t2; o < r2; o += 3)
          i2 = (e2[o] << 16 & 16711680) + (e2[o + 1] << 8 & 65280) + (255 & e2[o + 2]), a2.push(s[(n2 = i2) >> 18 & 63] + s[n2 >> 12 & 63] + s[n2 >> 6 & 63] + s[63 & n2]);
        return a2.join("");
      }
      u["-".charCodeAt(0)] = 62, u["_".charCodeAt(0)] = 63;
    }, {}], 2: [function(e, t, r) {
    }, {}], 3: [function(e, t, r) {
      arguments[4][2][0].apply(r, arguments);
    }, {dup: 2}], 4: [function(N, e, F) {
      (function(c) {
        var i = N("base64-js"), a = N("ieee754"), e2 = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
        F.Buffer = c, F.SlowBuffer = function(e3) {
          +e3 != e3 && (e3 = 0);
          return c.alloc(+e3);
        }, F.INSPECT_MAX_BYTES = 50;
        var r = 2147483647;
        function o(e3) {
          if (r < e3)
            throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
          var t2 = new Uint8Array(e3);
          return Object.setPrototypeOf(t2, c.prototype), t2;
        }
        function c(e3, t2, r2) {
          if (typeof e3 != "number")
            return n(e3, t2, r2);
          if (typeof t2 == "string")
            throw new TypeError('The "string" argument must be of type string. Received type number');
          return l(e3);
        }
        function n(e3, t2, r2) {
          if (typeof e3 == "string")
            return function(e4, t3) {
              typeof t3 == "string" && t3 !== "" || (t3 = "utf8");
              if (!c.isEncoding(t3))
                throw new TypeError("Unknown encoding: " + t3);
              var r3 = 0 | f(e4, t3), i3 = o(r3), n3 = i3.write(e4, t3);
              n3 !== r3 && (i3 = i3.slice(0, n3));
              return i3;
            }(e3, t2);
          if (ArrayBuffer.isView(e3))
            return u(e3);
          if (e3 == null)
            throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
          if (A(e3, ArrayBuffer) || e3 && A(e3.buffer, ArrayBuffer))
            return function(e4, t3, r3) {
              if (t3 < 0 || e4.byteLength < t3)
                throw new RangeError('"offset" is outside of buffer bounds');
              if (e4.byteLength < t3 + (r3 || 0))
                throw new RangeError('"length" is outside of buffer bounds');
              var i3;
              i3 = t3 === void 0 && r3 === void 0 ? new Uint8Array(e4) : r3 === void 0 ? new Uint8Array(e4, t3) : new Uint8Array(e4, t3, r3);
              return Object.setPrototypeOf(i3, c.prototype), i3;
            }(e3, t2, r2);
          if (typeof e3 == "number")
            throw new TypeError('The "value" argument must not be of type number. Received type number');
          var i2 = e3.valueOf && e3.valueOf();
          if (i2 != null && i2 !== e3)
            return c.from(i2, t2, r2);
          var n2 = function(e4) {
            if (c.isBuffer(e4)) {
              var t3 = 0 | h(e4.length), r3 = o(t3);
              return r3.length === 0 || e4.copy(r3, 0, 0, t3), r3;
            }
            if (e4.length !== void 0)
              return typeof e4.length != "number" || I(e4.length) ? o(0) : u(e4);
            if (e4.type === "Buffer" && Array.isArray(e4.data))
              return u(e4.data);
          }(e3);
          if (n2)
            return n2;
          if (typeof Symbol != "undefined" && Symbol.toPrimitive != null && typeof e3[Symbol.toPrimitive] == "function")
            return c.from(e3[Symbol.toPrimitive]("string"), t2, r2);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
        }
        function s(e3) {
          if (typeof e3 != "number")
            throw new TypeError('"size" argument must be of type number');
          if (e3 < 0)
            throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
        }
        function l(e3) {
          return s(e3), o(e3 < 0 ? 0 : 0 | h(e3));
        }
        function u(e3) {
          for (var t2 = e3.length < 0 ? 0 : 0 | h(e3.length), r2 = o(t2), i2 = 0; i2 < t2; i2 += 1)
            r2[i2] = 255 & e3[i2];
          return r2;
        }
        function h(e3) {
          if (r <= e3)
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + r.toString(16) + " bytes");
          return 0 | e3;
        }
        function f(e3, t2) {
          if (c.isBuffer(e3))
            return e3.length;
          if (ArrayBuffer.isView(e3) || A(e3, ArrayBuffer))
            return e3.byteLength;
          if (typeof e3 != "string")
            throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e3);
          var r2 = e3.length, i2 = 2 < arguments.length && arguments[2] === true;
          if (!i2 && r2 === 0)
            return 0;
          for (var n2 = false; ; )
            switch (t2) {
              case "ascii":
              case "latin1":
              case "binary":
                return r2;
              case "utf8":
              case "utf-8":
                return R(e3).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r2;
              case "hex":
                return r2 >>> 1;
              case "base64":
                return D(e3).length;
              default:
                if (n2)
                  return i2 ? -1 : R(e3).length;
                t2 = ("" + t2).toLowerCase(), n2 = true;
            }
        }
        function d(e3, t2, r2) {
          var i2 = e3[t2];
          e3[t2] = e3[r2], e3[r2] = i2;
        }
        function p(e3, t2, r2, i2, n2) {
          if (e3.length === 0)
            return -1;
          if (typeof r2 == "string" ? (i2 = r2, r2 = 0) : 2147483647 < r2 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), I(r2 = +r2) && (r2 = n2 ? 0 : e3.length - 1), r2 < 0 && (r2 = e3.length + r2), r2 >= e3.length) {
            if (n2)
              return -1;
            r2 = e3.length - 1;
          } else if (r2 < 0) {
            if (!n2)
              return -1;
            r2 = 0;
          }
          if (typeof t2 == "string" && (t2 = c.from(t2, i2)), c.isBuffer(t2))
            return t2.length === 0 ? -1 : m(e3, t2, r2, i2, n2);
          if (typeof t2 == "number")
            return t2 &= 255, typeof Uint8Array.prototype.indexOf == "function" ? n2 ? Uint8Array.prototype.indexOf.call(e3, t2, r2) : Uint8Array.prototype.lastIndexOf.call(e3, t2, r2) : m(e3, [t2], r2, i2, n2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function m(e3, t2, r2, i2, n2) {
          var a2, o2 = 1, s2 = e3.length, l2 = t2.length;
          if (i2 !== void 0 && ((i2 = String(i2).toLowerCase()) === "ucs2" || i2 === "ucs-2" || i2 === "utf16le" || i2 === "utf-16le")) {
            if (e3.length < 2 || t2.length < 2)
              return -1;
            s2 /= o2 = 2, l2 /= 2, r2 /= 2;
          }
          function u2(e4, t3) {
            return o2 === 1 ? e4[t3] : e4.readUInt16BE(t3 * o2);
          }
          if (n2) {
            var h2 = -1;
            for (a2 = r2; a2 < s2; a2++)
              if (u2(e3, a2) === u2(t2, h2 === -1 ? 0 : a2 - h2)) {
                if (h2 === -1 && (h2 = a2), a2 - h2 + 1 === l2)
                  return h2 * o2;
              } else
                h2 !== -1 && (a2 -= a2 - h2), h2 = -1;
          } else
            for (s2 < r2 + l2 && (r2 = s2 - l2), a2 = r2; 0 <= a2; a2--) {
              for (var c2 = true, f2 = 0; f2 < l2; f2++)
                if (u2(e3, a2 + f2) !== u2(t2, f2)) {
                  c2 = false;
                  break;
                }
              if (c2)
                return a2;
            }
          return -1;
        }
        function v(e3, t2, r2, i2) {
          r2 = Number(r2) || 0;
          var n2 = e3.length - r2;
          i2 ? n2 < (i2 = Number(i2)) && (i2 = n2) : i2 = n2;
          var a2 = t2.length;
          a2 / 2 < i2 && (i2 = a2 / 2);
          for (var o2 = 0; o2 < i2; ++o2) {
            var s2 = parseInt(t2.substr(2 * o2, 2), 16);
            if (I(s2))
              return o2;
            e3[r2 + o2] = s2;
          }
          return o2;
        }
        function y(e3, t2, r2, i2) {
          return k(function(e4) {
            for (var t3 = [], r3 = 0; r3 < e4.length; ++r3)
              t3.push(255 & e4.charCodeAt(r3));
            return t3;
          }(t2), e3, r2, i2);
        }
        function g(e3, t2, r2, i2) {
          return k(function(e4, t3) {
            for (var r3, i3, n2, a2 = [], o2 = 0; o2 < e4.length && !((t3 -= 2) < 0); ++o2)
              r3 = e4.charCodeAt(o2), i3 = r3 >> 8, n2 = r3 % 256, a2.push(n2), a2.push(i3);
            return a2;
          }(t2, e3.length - r2), e3, r2, i2);
        }
        function b(e3, t2, r2) {
          return t2 === 0 && r2 === e3.length ? i.fromByteArray(e3) : i.fromByteArray(e3.slice(t2, r2));
        }
        function _(e3, t2, r2) {
          r2 = Math.min(e3.length, r2);
          for (var i2 = [], n2 = t2; n2 < r2; ) {
            var a2, o2, s2, l2, u2 = e3[n2], h2 = null, c2 = 239 < u2 ? 4 : 223 < u2 ? 3 : 191 < u2 ? 2 : 1;
            if (n2 + c2 <= r2)
              switch (c2) {
                case 1:
                  u2 < 128 && (h2 = u2);
                  break;
                case 2:
                  (192 & (a2 = e3[n2 + 1])) == 128 && 127 < (l2 = (31 & u2) << 6 | 63 & a2) && (h2 = l2);
                  break;
                case 3:
                  a2 = e3[n2 + 1], o2 = e3[n2 + 2], (192 & a2) == 128 && (192 & o2) == 128 && 2047 < (l2 = (15 & u2) << 12 | (63 & a2) << 6 | 63 & o2) && (l2 < 55296 || 57343 < l2) && (h2 = l2);
                  break;
                case 4:
                  a2 = e3[n2 + 1], o2 = e3[n2 + 2], s2 = e3[n2 + 3], (192 & a2) == 128 && (192 & o2) == 128 && (192 & s2) == 128 && 65535 < (l2 = (15 & u2) << 18 | (63 & a2) << 12 | (63 & o2) << 6 | 63 & s2) && l2 < 1114112 && (h2 = l2);
              }
            h2 === null ? (h2 = 65533, c2 = 1) : 65535 < h2 && (h2 -= 65536, i2.push(h2 >>> 10 & 1023 | 55296), h2 = 56320 | 1023 & h2), i2.push(h2), n2 += c2;
          }
          return function(e4) {
            var t3 = e4.length;
            if (t3 <= x)
              return String.fromCharCode.apply(String, e4);
            var r3 = "", i3 = 0;
            for (; i3 < t3; )
              r3 += String.fromCharCode.apply(String, e4.slice(i3, i3 += x));
            return r3;
          }(i2);
        }
        F.kMaxLength = r, (c.TYPED_ARRAY_SUPPORT = function() {
          try {
            var e3 = new Uint8Array(1), t2 = {foo: function() {
              return 42;
            }};
            return Object.setPrototypeOf(t2, Uint8Array.prototype), Object.setPrototypeOf(e3, t2), e3.foo() === 42;
          } catch (e4) {
            return false;
          }
        }()) || typeof console == "undefined" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(c.prototype, "parent", {enumerable: true, get: function() {
          if (c.isBuffer(this))
            return this.buffer;
        }}), Object.defineProperty(c.prototype, "offset", {enumerable: true, get: function() {
          if (c.isBuffer(this))
            return this.byteOffset;
        }}), typeof Symbol != "undefined" && Symbol.species != null && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, {value: null, configurable: true, enumerable: false, writable: false}), c.poolSize = 8192, c.from = function(e3, t2, r2) {
          return n(e3, t2, r2);
        }, Object.setPrototypeOf(c.prototype, Uint8Array.prototype), Object.setPrototypeOf(c, Uint8Array), c.alloc = function(e3, t2, r2) {
          return n2 = t2, a2 = r2, s(i2 = e3), i2 <= 0 ? o(i2) : n2 !== void 0 ? typeof a2 == "string" ? o(i2).fill(n2, a2) : o(i2).fill(n2) : o(i2);
          var i2, n2, a2;
        }, c.allocUnsafe = function(e3) {
          return l(e3);
        }, c.allocUnsafeSlow = function(e3) {
          return l(e3);
        }, c.isBuffer = function(e3) {
          return e3 != null && e3._isBuffer === true && e3 !== c.prototype;
        }, c.compare = function(e3, t2) {
          if (A(e3, Uint8Array) && (e3 = c.from(e3, e3.offset, e3.byteLength)), A(t2, Uint8Array) && (t2 = c.from(t2, t2.offset, t2.byteLength)), !c.isBuffer(e3) || !c.isBuffer(t2))
            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e3 === t2)
            return 0;
          for (var r2 = e3.length, i2 = t2.length, n2 = 0, a2 = Math.min(r2, i2); n2 < a2; ++n2)
            if (e3[n2] !== t2[n2]) {
              r2 = e3[n2], i2 = t2[n2];
              break;
            }
          return r2 < i2 ? -1 : i2 < r2 ? 1 : 0;
        }, c.isEncoding = function(e3) {
          switch (String(e3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, c.concat = function(e3, t2) {
          if (!Array.isArray(e3))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (e3.length === 0)
            return c.alloc(0);
          var r2;
          if (t2 === void 0)
            for (r2 = t2 = 0; r2 < e3.length; ++r2)
              t2 += e3[r2].length;
          var i2 = c.allocUnsafe(t2), n2 = 0;
          for (r2 = 0; r2 < e3.length; ++r2) {
            var a2 = e3[r2];
            if (A(a2, Uint8Array) && (a2 = c.from(a2)), !c.isBuffer(a2))
              throw new TypeError('"list" argument must be an Array of Buffers');
            a2.copy(i2, n2), n2 += a2.length;
          }
          return i2;
        }, c.byteLength = f, c.prototype._isBuffer = true, c.prototype.swap16 = function() {
          var e3 = this.length;
          if (e3 % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t2 = 0; t2 < e3; t2 += 2)
            d(this, t2, t2 + 1);
          return this;
        }, c.prototype.swap32 = function() {
          var e3 = this.length;
          if (e3 % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t2 = 0; t2 < e3; t2 += 4)
            d(this, t2, t2 + 3), d(this, t2 + 1, t2 + 2);
          return this;
        }, c.prototype.swap64 = function() {
          var e3 = this.length;
          if (e3 % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t2 = 0; t2 < e3; t2 += 8)
            d(this, t2, t2 + 7), d(this, t2 + 1, t2 + 6), d(this, t2 + 2, t2 + 5), d(this, t2 + 3, t2 + 4);
          return this;
        }, c.prototype.toLocaleString = c.prototype.toString = function() {
          var e3 = this.length;
          return e3 === 0 ? "" : arguments.length === 0 ? _(this, 0, e3) : function(e4, t2, r2) {
            var i2 = false;
            if ((t2 === void 0 || t2 < 0) && (t2 = 0), t2 > this.length)
              return "";
            if ((r2 === void 0 || r2 > this.length) && (r2 = this.length), r2 <= 0)
              return "";
            if ((r2 >>>= 0) <= (t2 >>>= 0))
              return "";
            for (e4 = e4 || "utf8"; ; )
              switch (e4) {
                case "hex":
                  return M(this, t2, r2);
                case "utf8":
                case "utf-8":
                  return _(this, t2, r2);
                case "ascii":
                  return w(this, t2, r2);
                case "latin1":
                case "binary":
                  return S(this, t2, r2);
                case "base64":
                  return b(this, t2, r2);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return T(this, t2, r2);
                default:
                  if (i2)
                    throw new TypeError("Unknown encoding: " + e4);
                  e4 = (e4 + "").toLowerCase(), i2 = true;
              }
          }.apply(this, arguments);
        }, c.prototype.equals = function(e3) {
          if (!c.isBuffer(e3))
            throw new TypeError("Argument must be a Buffer");
          return this === e3 || c.compare(this, e3) === 0;
        }, c.prototype.inspect = function() {
          var e3 = "", t2 = F.INSPECT_MAX_BYTES;
          return e3 = this.toString("hex", 0, t2).replace(/(.{2})/g, "$1 ").trim(), this.length > t2 && (e3 += " ... "), "<Buffer " + e3 + ">";
        }, e2 && (c.prototype[e2] = c.prototype.inspect), c.prototype.compare = function(e3, t2, r2, i2, n2) {
          if (A(e3, Uint8Array) && (e3 = c.from(e3, e3.offset, e3.byteLength)), !c.isBuffer(e3))
            throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e3);
          if (t2 === void 0 && (t2 = 0), r2 === void 0 && (r2 = e3 ? e3.length : 0), i2 === void 0 && (i2 = 0), n2 === void 0 && (n2 = this.length), t2 < 0 || r2 > e3.length || i2 < 0 || n2 > this.length)
            throw new RangeError("out of range index");
          if (n2 <= i2 && r2 <= t2)
            return 0;
          if (n2 <= i2)
            return -1;
          if (r2 <= t2)
            return 1;
          if (this === e3)
            return 0;
          for (var a2 = (n2 >>>= 0) - (i2 >>>= 0), o2 = (r2 >>>= 0) - (t2 >>>= 0), s2 = Math.min(a2, o2), l2 = this.slice(i2, n2), u2 = e3.slice(t2, r2), h2 = 0; h2 < s2; ++h2)
            if (l2[h2] !== u2[h2]) {
              a2 = l2[h2], o2 = u2[h2];
              break;
            }
          return a2 < o2 ? -1 : o2 < a2 ? 1 : 0;
        }, c.prototype.includes = function(e3, t2, r2) {
          return this.indexOf(e3, t2, r2) !== -1;
        }, c.prototype.indexOf = function(e3, t2, r2) {
          return p(this, e3, t2, r2, true);
        }, c.prototype.lastIndexOf = function(e3, t2, r2) {
          return p(this, e3, t2, r2, false);
        }, c.prototype.write = function(e3, t2, r2, i2) {
          if (t2 === void 0)
            i2 = "utf8", r2 = this.length, t2 = 0;
          else if (r2 === void 0 && typeof t2 == "string")
            i2 = t2, r2 = this.length, t2 = 0;
          else {
            if (!isFinite(t2))
              throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t2 >>>= 0, isFinite(r2) ? (r2 >>>= 0, i2 === void 0 && (i2 = "utf8")) : (i2 = r2, r2 = void 0);
          }
          var n2 = this.length - t2;
          if ((r2 === void 0 || n2 < r2) && (r2 = n2), 0 < e3.length && (r2 < 0 || t2 < 0) || t2 > this.length)
            throw new RangeError("Attempt to write outside buffer bounds");
          i2 = i2 || "utf8";
          for (var a2, o2, s2, l2, u2, h2, c2 = false; ; )
            switch (i2) {
              case "hex":
                return v(this, e3, t2, r2);
              case "utf8":
              case "utf-8":
                return u2 = t2, h2 = r2, k(R(e3, (l2 = this).length - u2), l2, u2, h2);
              case "ascii":
                return y(this, e3, t2, r2);
              case "latin1":
              case "binary":
                return y(this, e3, t2, r2);
              case "base64":
                return a2 = this, o2 = t2, s2 = r2, k(D(e3), a2, o2, s2);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return g(this, e3, t2, r2);
              default:
                if (c2)
                  throw new TypeError("Unknown encoding: " + i2);
                i2 = ("" + i2).toLowerCase(), c2 = true;
            }
        }, c.prototype.toJSON = function() {
          return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)};
        };
        var x = 4096;
        function w(e3, t2, r2) {
          var i2 = "";
          r2 = Math.min(e3.length, r2);
          for (var n2 = t2; n2 < r2; ++n2)
            i2 += String.fromCharCode(127 & e3[n2]);
          return i2;
        }
        function S(e3, t2, r2) {
          var i2 = "";
          r2 = Math.min(e3.length, r2);
          for (var n2 = t2; n2 < r2; ++n2)
            i2 += String.fromCharCode(e3[n2]);
          return i2;
        }
        function M(e3, t2, r2) {
          var i2 = e3.length;
          (!t2 || t2 < 0) && (t2 = 0), (!r2 || r2 < 0 || i2 < r2) && (r2 = i2);
          for (var n2 = "", a2 = t2; a2 < r2; ++a2)
            n2 += U[e3[a2]];
          return n2;
        }
        function T(e3, t2, r2) {
          for (var i2 = e3.slice(t2, r2), n2 = "", a2 = 0; a2 < i2.length; a2 += 2)
            n2 += String.fromCharCode(i2[a2] + 256 * i2[a2 + 1]);
          return n2;
        }
        function E(e3, t2, r2) {
          if (e3 % 1 != 0 || e3 < 0)
            throw new RangeError("offset is not uint");
          if (r2 < e3 + t2)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function C(e3, t2, r2, i2, n2, a2) {
          if (!c.isBuffer(e3))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (n2 < t2 || t2 < a2)
            throw new RangeError('"value" argument is out of bounds');
          if (r2 + i2 > e3.length)
            throw new RangeError("Index out of range");
        }
        function L(e3, t2, r2, i2) {
          if (r2 + i2 > e3.length)
            throw new RangeError("Index out of range");
          if (r2 < 0)
            throw new RangeError("Index out of range");
        }
        function O(e3, t2, r2, i2, n2) {
          return t2 = +t2, r2 >>>= 0, n2 || L(e3, 0, r2, 4), a.write(e3, t2, r2, i2, 23, 4), r2 + 4;
        }
        function P(e3, t2, r2, i2, n2) {
          return t2 = +t2, r2 >>>= 0, n2 || L(e3, 0, r2, 8), a.write(e3, t2, r2, i2, 52, 8), r2 + 8;
        }
        c.prototype.slice = function(e3, t2) {
          var r2 = this.length;
          (e3 = ~~e3) < 0 ? (e3 += r2) < 0 && (e3 = 0) : r2 < e3 && (e3 = r2), (t2 = t2 === void 0 ? r2 : ~~t2) < 0 ? (t2 += r2) < 0 && (t2 = 0) : r2 < t2 && (t2 = r2), t2 < e3 && (t2 = e3);
          var i2 = this.subarray(e3, t2);
          return Object.setPrototypeOf(i2, c.prototype), i2;
        }, c.prototype.readUIntLE = function(e3, t2, r2) {
          e3 >>>= 0, t2 >>>= 0, r2 || E(e3, t2, this.length);
          for (var i2 = this[e3], n2 = 1, a2 = 0; ++a2 < t2 && (n2 *= 256); )
            i2 += this[e3 + a2] * n2;
          return i2;
        }, c.prototype.readUIntBE = function(e3, t2, r2) {
          e3 >>>= 0, t2 >>>= 0, r2 || E(e3, t2, this.length);
          for (var i2 = this[e3 + --t2], n2 = 1; 0 < t2 && (n2 *= 256); )
            i2 += this[e3 + --t2] * n2;
          return i2;
        }, c.prototype.readUInt8 = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 1, this.length), this[e3];
        }, c.prototype.readUInt16LE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
        }, c.prototype.readUInt16BE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
        }, c.prototype.readUInt32LE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
        }, c.prototype.readUInt32BE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
        }, c.prototype.readIntLE = function(e3, t2, r2) {
          e3 >>>= 0, t2 >>>= 0, r2 || E(e3, t2, this.length);
          for (var i2 = this[e3], n2 = 1, a2 = 0; ++a2 < t2 && (n2 *= 256); )
            i2 += this[e3 + a2] * n2;
          return (n2 *= 128) <= i2 && (i2 -= Math.pow(2, 8 * t2)), i2;
        }, c.prototype.readIntBE = function(e3, t2, r2) {
          e3 >>>= 0, t2 >>>= 0, r2 || E(e3, t2, this.length);
          for (var i2 = t2, n2 = 1, a2 = this[e3 + --i2]; 0 < i2 && (n2 *= 256); )
            a2 += this[e3 + --i2] * n2;
          return (n2 *= 128) <= a2 && (a2 -= Math.pow(2, 8 * t2)), a2;
        }, c.prototype.readInt8 = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
        }, c.prototype.readInt16LE = function(e3, t2) {
          e3 >>>= 0, t2 || E(e3, 2, this.length);
          var r2 = this[e3] | this[e3 + 1] << 8;
          return 32768 & r2 ? 4294901760 | r2 : r2;
        }, c.prototype.readInt16BE = function(e3, t2) {
          e3 >>>= 0, t2 || E(e3, 2, this.length);
          var r2 = this[e3 + 1] | this[e3] << 8;
          return 32768 & r2 ? 4294901760 | r2 : r2;
        }, c.prototype.readInt32LE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
        }, c.prototype.readInt32BE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
        }, c.prototype.readFloatLE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 4, this.length), a.read(this, e3, true, 23, 4);
        }, c.prototype.readFloatBE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 4, this.length), a.read(this, e3, false, 23, 4);
        }, c.prototype.readDoubleLE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 8, this.length), a.read(this, e3, true, 52, 8);
        }, c.prototype.readDoubleBE = function(e3, t2) {
          return e3 >>>= 0, t2 || E(e3, 8, this.length), a.read(this, e3, false, 52, 8);
        }, c.prototype.writeUIntLE = function(e3, t2, r2, i2) {
          e3 = +e3, t2 >>>= 0, r2 >>>= 0, i2 || C(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var n2 = 1, a2 = 0;
          for (this[t2] = 255 & e3; ++a2 < r2 && (n2 *= 256); )
            this[t2 + a2] = e3 / n2 & 255;
          return t2 + r2;
        }, c.prototype.writeUIntBE = function(e3, t2, r2, i2) {
          e3 = +e3, t2 >>>= 0, r2 >>>= 0, i2 || C(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var n2 = r2 - 1, a2 = 1;
          for (this[t2 + n2] = 255 & e3; 0 <= --n2 && (a2 *= 256); )
            this[t2 + n2] = e3 / a2 & 255;
          return t2 + r2;
        }, c.prototype.writeUInt8 = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 1, 255, 0), this[t2] = 255 & e3, t2 + 1;
        }, c.prototype.writeUInt16LE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 2, 65535, 0), this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, t2 + 2;
        }, c.prototype.writeUInt16BE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 2, 65535, 0), this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3, t2 + 2;
        }, c.prototype.writeUInt32LE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 4, 4294967295, 0), this[t2 + 3] = e3 >>> 24, this[t2 + 2] = e3 >>> 16, this[t2 + 1] = e3 >>> 8, this[t2] = 255 & e3, t2 + 4;
        }, c.prototype.writeUInt32BE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 4, 4294967295, 0), this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3, t2 + 4;
        }, c.prototype.writeIntLE = function(e3, t2, r2, i2) {
          if (e3 = +e3, t2 >>>= 0, !i2) {
            var n2 = Math.pow(2, 8 * r2 - 1);
            C(this, e3, t2, r2, n2 - 1, -n2);
          }
          var a2 = 0, o2 = 1, s2 = 0;
          for (this[t2] = 255 & e3; ++a2 < r2 && (o2 *= 256); )
            e3 < 0 && s2 === 0 && this[t2 + a2 - 1] !== 0 && (s2 = 1), this[t2 + a2] = (e3 / o2 >> 0) - s2 & 255;
          return t2 + r2;
        }, c.prototype.writeIntBE = function(e3, t2, r2, i2) {
          if (e3 = +e3, t2 >>>= 0, !i2) {
            var n2 = Math.pow(2, 8 * r2 - 1);
            C(this, e3, t2, r2, n2 - 1, -n2);
          }
          var a2 = r2 - 1, o2 = 1, s2 = 0;
          for (this[t2 + a2] = 255 & e3; 0 <= --a2 && (o2 *= 256); )
            e3 < 0 && s2 === 0 && this[t2 + a2 + 1] !== 0 && (s2 = 1), this[t2 + a2] = (e3 / o2 >> 0) - s2 & 255;
          return t2 + r2;
        }, c.prototype.writeInt8 = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 1, 127, -128), e3 < 0 && (e3 = 255 + e3 + 1), this[t2] = 255 & e3, t2 + 1;
        }, c.prototype.writeInt16LE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 2, 32767, -32768), this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, t2 + 2;
        }, c.prototype.writeInt16BE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 2, 32767, -32768), this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3, t2 + 2;
        }, c.prototype.writeInt32LE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 4, 2147483647, -2147483648), this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, this[t2 + 2] = e3 >>> 16, this[t2 + 3] = e3 >>> 24, t2 + 4;
        }, c.prototype.writeInt32BE = function(e3, t2, r2) {
          return e3 = +e3, t2 >>>= 0, r2 || C(this, e3, t2, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3, t2 + 4;
        }, c.prototype.writeFloatLE = function(e3, t2, r2) {
          return O(this, e3, t2, true, r2);
        }, c.prototype.writeFloatBE = function(e3, t2, r2) {
          return O(this, e3, t2, false, r2);
        }, c.prototype.writeDoubleLE = function(e3, t2, r2) {
          return P(this, e3, t2, true, r2);
        }, c.prototype.writeDoubleBE = function(e3, t2, r2) {
          return P(this, e3, t2, false, r2);
        }, c.prototype.copy = function(e3, t2, r2, i2) {
          if (!c.isBuffer(e3))
            throw new TypeError("argument should be a Buffer");
          if (r2 = r2 || 0, i2 || i2 === 0 || (i2 = this.length), t2 >= e3.length && (t2 = e3.length), t2 = t2 || 0, 0 < i2 && i2 < r2 && (i2 = r2), i2 === r2)
            return 0;
          if (e3.length === 0 || this.length === 0)
            return 0;
          if (t2 < 0)
            throw new RangeError("targetStart out of bounds");
          if (r2 < 0 || r2 >= this.length)
            throw new RangeError("Index out of range");
          if (i2 < 0)
            throw new RangeError("sourceEnd out of bounds");
          i2 > this.length && (i2 = this.length), e3.length - t2 < i2 - r2 && (i2 = e3.length - t2 + r2);
          var n2 = i2 - r2;
          if (this === e3 && typeof Uint8Array.prototype.copyWithin == "function")
            this.copyWithin(t2, r2, i2);
          else if (this === e3 && r2 < t2 && t2 < i2)
            for (var a2 = n2 - 1; 0 <= a2; --a2)
              e3[a2 + t2] = this[a2 + r2];
          else
            Uint8Array.prototype.set.call(e3, this.subarray(r2, i2), t2);
          return n2;
        }, c.prototype.fill = function(e3, t2, r2, i2) {
          if (typeof e3 == "string") {
            if (typeof t2 == "string" ? (i2 = t2, t2 = 0, r2 = this.length) : typeof r2 == "string" && (i2 = r2, r2 = this.length), i2 !== void 0 && typeof i2 != "string")
              throw new TypeError("encoding must be a string");
            if (typeof i2 == "string" && !c.isEncoding(i2))
              throw new TypeError("Unknown encoding: " + i2);
            if (e3.length === 1) {
              var n2 = e3.charCodeAt(0);
              (i2 === "utf8" && n2 < 128 || i2 === "latin1") && (e3 = n2);
            }
          } else
            typeof e3 == "number" ? e3 &= 255 : typeof e3 == "boolean" && (e3 = Number(e3));
          if (t2 < 0 || this.length < t2 || this.length < r2)
            throw new RangeError("Out of range index");
          if (r2 <= t2)
            return this;
          var a2;
          if (t2 >>>= 0, r2 = r2 === void 0 ? this.length : r2 >>> 0, typeof (e3 = e3 || 0) == "number")
            for (a2 = t2; a2 < r2; ++a2)
              this[a2] = e3;
          else {
            var o2 = c.isBuffer(e3) ? e3 : c.from(e3, i2), s2 = o2.length;
            if (s2 === 0)
              throw new TypeError('The value "' + e3 + '" is invalid for argument "value"');
            for (a2 = 0; a2 < r2 - t2; ++a2)
              this[a2 + t2] = o2[a2 % s2];
          }
          return this;
        };
        var t = /[^+/0-9A-Za-z-_]/g;
        function R(e3, t2) {
          var r2;
          t2 = t2 || 1 / 0;
          for (var i2 = e3.length, n2 = null, a2 = [], o2 = 0; o2 < i2; ++o2) {
            if (55295 < (r2 = e3.charCodeAt(o2)) && r2 < 57344) {
              if (!n2) {
                if (56319 < r2) {
                  -1 < (t2 -= 3) && a2.push(239, 191, 189);
                  continue;
                }
                if (o2 + 1 === i2) {
                  -1 < (t2 -= 3) && a2.push(239, 191, 189);
                  continue;
                }
                n2 = r2;
                continue;
              }
              if (r2 < 56320) {
                -1 < (t2 -= 3) && a2.push(239, 191, 189), n2 = r2;
                continue;
              }
              r2 = 65536 + (n2 - 55296 << 10 | r2 - 56320);
            } else
              n2 && -1 < (t2 -= 3) && a2.push(239, 191, 189);
            if (n2 = null, r2 < 128) {
              if (--t2 < 0)
                break;
              a2.push(r2);
            } else if (r2 < 2048) {
              if ((t2 -= 2) < 0)
                break;
              a2.push(r2 >> 6 | 192, 63 & r2 | 128);
            } else if (r2 < 65536) {
              if ((t2 -= 3) < 0)
                break;
              a2.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            } else {
              if (!(r2 < 1114112))
                throw new Error("Invalid code point");
              if ((t2 -= 4) < 0)
                break;
              a2.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            }
          }
          return a2;
        }
        function D(e3) {
          return i.toByteArray(function(e4) {
            if ((e4 = (e4 = e4.split("=")[0]).trim().replace(t, "")).length < 2)
              return "";
            for (; e4.length % 4 != 0; )
              e4 += "=";
            return e4;
          }(e3));
        }
        function k(e3, t2, r2, i2) {
          for (var n2 = 0; n2 < i2 && !(n2 + r2 >= t2.length || n2 >= e3.length); ++n2)
            t2[n2 + r2] = e3[n2];
          return n2;
        }
        function A(e3, t2) {
          return e3 instanceof t2 || e3 != null && e3.constructor != null && e3.constructor.name != null && e3.constructor.name === t2.name;
        }
        function I(e3) {
          return e3 != e3;
        }
        var U = function() {
          for (var e3 = "0123456789abcdef", t2 = new Array(256), r2 = 0; r2 < 16; ++r2)
            for (var i2 = 16 * r2, n2 = 0; n2 < 16; ++n2)
              t2[i2 + n2] = e3[r2] + e3[n2];
          return t2;
        }();
      }).call(this, N("buffer").Buffer);
    }, {"base64-js": 1, buffer: 4, ieee754: 9}], 5: [function(e, t, r) {
      t.exports = e("./").polyfill();
    }, {"./": 6}], 6: [function(z, r, i) {
      (function(j, V) {
        var e, t;
        e = this, t = function() {
          function l(e3) {
            return typeof e3 == "function";
          }
          var r2 = Array.isArray ? Array.isArray : function(e3) {
            return Object.prototype.toString.call(e3) === "[object Array]";
          }, i2 = 0, t2 = void 0, n = void 0, o = function(e3, t3) {
            f[i2] = e3, f[i2 + 1] = t3, (i2 += 2) === 2 && (n ? n(d) : g());
          };
          var e2 = typeof window != "undefined" ? window : void 0, a = e2 || {}, s = a.MutationObserver || a.WebKitMutationObserver, u = typeof self == "undefined" && j !== void 0 && {}.toString.call(j) === "[object process]", h = typeof Uint8ClampedArray != "undefined" && typeof importScripts != "undefined" && typeof MessageChannel != "undefined";
          function c() {
            var e3 = setTimeout;
            return function() {
              return e3(d, 1);
            };
          }
          var f = new Array(1e3);
          function d() {
            for (var e3 = 0; e3 < i2; e3 += 2) {
              (0, f[e3])(f[e3 + 1]), f[e3] = void 0, f[e3 + 1] = void 0;
            }
            i2 = 0;
          }
          var p, m, v, y, g = void 0;
          function b(e3, t3) {
            var r3 = this, i3 = new this.constructor(w);
            i3[x] === void 0 && U(i3);
            var n2 = r3._state;
            if (n2) {
              var a2 = arguments[n2 - 1];
              o(function() {
                return A(n2, i3, a2, r3._result);
              });
            } else
              D(r3, i3, e3, t3);
            return i3;
          }
          function _(e3) {
            if (e3 && typeof e3 == "object" && e3.constructor === this)
              return e3;
            var t3 = new this(w);
            return L(t3, e3), t3;
          }
          g = u ? function() {
            return j.nextTick(d);
          } : s ? (m = 0, v = new s(d), y = document.createTextNode(""), v.observe(y, {characterData: true}), function() {
            y.data = m = ++m % 2;
          }) : h ? ((p = new MessageChannel()).port1.onmessage = d, function() {
            return p.port2.postMessage(0);
          }) : e2 === void 0 && typeof z == "function" ? function() {
            try {
              var e3 = Function("return this")().require("vertx");
              return (t2 = e3.runOnLoop || e3.runOnContext) !== void 0 ? function() {
                t2(d);
              } : c();
            } catch (e4) {
              return c();
            }
          }() : c();
          var x = Math.random().toString(36).substring(2);
          function w() {
          }
          var S = void 0, M = 1, T = 2;
          function E(e3, i3, n2) {
            o(function(t3) {
              var r3 = false, e4 = function(e5, t4, r4, i4) {
                try {
                  e5.call(t4, r4, i4);
                } catch (e6) {
                  return e6;
                }
              }(n2, i3, function(e5) {
                r3 || (r3 = true, i3 !== e5 ? L(t3, e5) : P(t3, e5));
              }, function(e5) {
                r3 || (r3 = true, R(t3, e5));
              }, t3._label);
              !r3 && e4 && (r3 = true, R(t3, e4));
            }, e3);
          }
          function C(e3, t3, r3) {
            var i3, n2;
            t3.constructor === e3.constructor && r3 === b && t3.constructor.resolve === _ ? (i3 = e3, (n2 = t3)._state === M ? P(i3, n2._result) : n2._state === T ? R(i3, n2._result) : D(n2, void 0, function(e4) {
              return L(i3, e4);
            }, function(e4) {
              return R(i3, e4);
            })) : r3 === void 0 ? P(e3, t3) : l(r3) ? E(e3, t3, r3) : P(e3, t3);
          }
          function L(t3, e3) {
            if (t3 === e3)
              R(t3, new TypeError("You cannot resolve a promise with itself"));
            else if (n2 = typeof (i3 = e3), i3 === null || n2 != "object" && n2 != "function")
              P(t3, e3);
            else {
              var r3 = void 0;
              try {
                r3 = e3.then;
              } catch (e4) {
                return void R(t3, e4);
              }
              C(t3, e3, r3);
            }
            var i3, n2;
          }
          function O(e3) {
            e3._onerror && e3._onerror(e3._result), k(e3);
          }
          function P(e3, t3) {
            e3._state === S && (e3._result = t3, e3._state = M, e3._subscribers.length !== 0 && o(k, e3));
          }
          function R(e3, t3) {
            e3._state === S && (e3._state = T, e3._result = t3, o(O, e3));
          }
          function D(e3, t3, r3, i3) {
            var n2 = e3._subscribers, a2 = n2.length;
            e3._onerror = null, n2[a2] = t3, n2[a2 + M] = r3, n2[a2 + T] = i3, a2 === 0 && e3._state && o(k, e3);
          }
          function k(e3) {
            var t3 = e3._subscribers, r3 = e3._state;
            if (t3.length !== 0) {
              for (var i3 = void 0, n2 = void 0, a2 = e3._result, o2 = 0; o2 < t3.length; o2 += 3)
                i3 = t3[o2], n2 = t3[o2 + r3], i3 ? A(r3, i3, n2, a2) : n2(a2);
              e3._subscribers.length = 0;
            }
          }
          function A(e3, t3, r3, i3) {
            var n2 = l(r3), a2 = void 0, o2 = void 0, s2 = true;
            if (n2) {
              try {
                a2 = r3(i3);
              } catch (e4) {
                s2 = false, o2 = e4;
              }
              if (t3 === a2)
                return void R(t3, new TypeError("A promises callback cannot return that same promise."));
            } else
              a2 = i3;
            t3._state !== S || (n2 && s2 ? L(t3, a2) : s2 === false ? R(t3, o2) : e3 === M ? P(t3, a2) : e3 === T && R(t3, a2));
          }
          var I = 0;
          function U(e3) {
            e3[x] = I++, e3._state = void 0, e3._result = void 0, e3._subscribers = [];
          }
          var N = (F.prototype._enumerate = function(e3) {
            for (var t3 = 0; this._state === S && t3 < e3.length; t3++)
              this._eachEntry(e3[t3], t3);
          }, F.prototype._eachEntry = function(t3, e3) {
            var r3 = this._instanceConstructor, i3 = r3.resolve;
            if (i3 === _) {
              var n2 = void 0, a2 = void 0, o2 = false;
              try {
                n2 = t3.then;
              } catch (e4) {
                o2 = true, a2 = e4;
              }
              if (n2 === b && t3._state !== S)
                this._settledAt(t3._state, e3, t3._result);
              else if (typeof n2 != "function")
                this._remaining--, this._result[e3] = t3;
              else if (r3 === B) {
                var s2 = new r3(w);
                o2 ? R(s2, a2) : C(s2, t3, n2), this._willSettleAt(s2, e3);
              } else
                this._willSettleAt(new r3(function(e4) {
                  return e4(t3);
                }), e3);
            } else
              this._willSettleAt(i3(t3), e3);
          }, F.prototype._settledAt = function(e3, t3, r3) {
            var i3 = this.promise;
            i3._state === S && (this._remaining--, e3 === T ? R(i3, r3) : this._result[t3] = r3), this._remaining === 0 && P(i3, this._result);
          }, F.prototype._willSettleAt = function(e3, t3) {
            var r3 = this;
            D(e3, void 0, function(e4) {
              return r3._settledAt(M, t3, e4);
            }, function(e4) {
              return r3._settledAt(T, t3, e4);
            });
          }, F);
          function F(e3, t3) {
            this._instanceConstructor = e3, this.promise = new e3(w), this.promise[x] || U(this.promise), r2(t3) ? (this.length = t3.length, this._remaining = t3.length, this._result = new Array(this.length), this.length === 0 ? P(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(t3), this._remaining === 0 && P(this.promise, this._result))) : R(this.promise, new Error("Array Methods must be provided an Array"));
          }
          var B = (G.prototype.catch = function(e3) {
            return this.then(null, e3);
          }, G.prototype.finally = function(t3) {
            var r3 = this.constructor;
            return l(t3) ? this.then(function(e3) {
              return r3.resolve(t3()).then(function() {
                return e3;
              });
            }, function(e3) {
              return r3.resolve(t3()).then(function() {
                throw e3;
              });
            }) : this.then(t3, t3);
          }, G);
          function G(e3) {
            this[x] = I++, this._result = this._state = void 0, this._subscribers = [], w !== e3 && (typeof e3 != "function" && function() {
              throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
            }(), this instanceof G ? function(t3, e4) {
              try {
                e4(function(e5) {
                  L(t3, e5);
                }, function(e5) {
                  R(t3, e5);
                });
              } catch (e5) {
                R(t3, e5);
              }
            }(this, e3) : function() {
              throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
            }());
          }
          return B.prototype.then = b, B.all = function(e3) {
            return new N(this, e3).promise;
          }, B.race = function(n2) {
            var a2 = this;
            return r2(n2) ? new a2(function(e3, t3) {
              for (var r3 = n2.length, i3 = 0; i3 < r3; i3++)
                a2.resolve(n2[i3]).then(e3, t3);
            }) : new a2(function(e3, t3) {
              return t3(new TypeError("You must pass an array to race."));
            });
          }, B.resolve = _, B.reject = function(e3) {
            var t3 = new this(w);
            return R(t3, e3), t3;
          }, B._setScheduler = function(e3) {
            n = e3;
          }, B._setAsap = function(e3) {
            o = e3;
          }, B._asap = o, B.polyfill = function() {
            var e3 = void 0;
            if (V !== void 0)
              e3 = V;
            else if (typeof self != "undefined")
              e3 = self;
            else
              try {
                e3 = Function("return this")();
              } catch (e4) {
                throw new Error("polyfill failed because global object is unavailable in this environment");
              }
            var t3 = e3.Promise;
            if (t3) {
              var r3 = null;
              try {
                r3 = Object.prototype.toString.call(t3.resolve());
              } catch (e4) {
              }
              if (r3 === "[object Promise]" && !t3.cast)
                return;
            }
            e3.Promise = B;
          }, B.Promise = B;
        }, typeof i == "object" && r !== void 0 ? r.exports = t() : e.ES6Promise = t();
      }).call(this, z("_process"), typeof commonjsGlobal != "undefined" ? commonjsGlobal : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
    }, {_process: 14}], 7: [function(e, i, n) {
      !function(e2, t) {
        if (n !== void 0 && i !== void 0)
          t(n, i);
        else {
          var r = {exports: {}};
          t(r.exports, r), e2.fetchJsonp = r.exports;
        }
      }(this, function(e2, t) {
        var r = 5e3, i2 = "callback";
        function c(t2) {
          try {
            delete window[t2];
          } catch (e3) {
            window[t2] = void 0;
          }
        }
        function f(e3) {
          var t2 = document.getElementById(e3);
          t2 && document.getElementsByTagName("head")[0].removeChild(t2);
        }
        t.exports = function(a) {
          var o = arguments.length <= 1 || arguments[1] === void 0 ? {} : arguments[1], s = a, l = o.timeout || r, u = o.jsonpCallback || i2, h = void 0;
          return new Promise(function(t2, e3) {
            var r2 = o.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()), i3 = u + "_" + r2;
            window[r2] = function(e4) {
              t2({ok: true, json: function() {
                return Promise.resolve(e4);
              }}), h && clearTimeout(h), f(i3), c(r2);
            }, s += s.indexOf("?") === -1 ? "?" : "&";
            var n2 = document.createElement("script");
            n2.setAttribute("src", "" + s + u + "=" + r2), o.charset && n2.setAttribute("charset", o.charset), n2.id = i3, document.getElementsByTagName("head")[0].appendChild(n2), h = setTimeout(function() {
              e3(new Error("JSONP request to " + a + " timed out")), c(r2), f(i3), window[r2] = function() {
                c(r2);
              };
            }, l), n2.onerror = function() {
              e3(new Error("JSONP request to " + a + " failed")), c(r2), f(i3), h && clearTimeout(h);
            };
          });
        };
      });
    }, {}], 8: [function(e, t, r) {
      var i = i || function(s) {
        if (!(s === void 0 || typeof navigator != "undefined" && /MSIE [1-9]\./.test(navigator.userAgent))) {
          var e2 = s.document, l = function() {
            return s.URL || s.webkitURL || s;
          }, u = e2.createElementNS("http://www.w3.org/1999/xhtml", "a"), h = "download" in u, c = /constructor/i.test(s.HTMLElement) || s.safari, f = /CriOS\/[\d]+/.test(navigator.userAgent), d = function(e3) {
            (s.setImmediate || s.setTimeout)(function() {
              throw e3;
            }, 0);
          }, p = function(e3) {
            setTimeout(function() {
              typeof e3 == "string" ? l().revokeObjectURL(e3) : e3.remove();
            }, 4e4);
          }, m = function(e3) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e3.type) ? new Blob([String.fromCharCode(65279), e3], {type: e3.type}) : e3;
          }, i2 = function(e3, r2, t3) {
            t3 || (e3 = m(e3));
            function i3() {
              !function(e4, t4, r3) {
                for (var i4 = (t4 = [].concat(t4)).length; i4--; ) {
                  var n2 = e4["on" + t4[i4]];
                  if (typeof n2 == "function")
                    try {
                      n2.call(e4, r3 || e4);
                    } catch (e5) {
                      d(e5);
                    }
                }
              }(a, "writestart progress write writeend".split(" "));
            }
            var n, a = this, o = e3.type === "application/octet-stream";
            if (a.readyState = a.INIT, h)
              return n = l().createObjectURL(e3), void setTimeout(function() {
                var e4, t4;
                u.href = n, u.download = r2, e4 = u, t4 = new MouseEvent("click"), e4.dispatchEvent(t4), i3(), p(n), a.readyState = a.DONE;
              });
            !function() {
              if ((f || o && c) && s.FileReader) {
                var t4 = new FileReader();
                return t4.onloadend = function() {
                  var e4 = f ? t4.result : t4.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                  s.open(e4, "_blank") || (s.location.href = e4), e4 = void 0, a.readyState = a.DONE, i3();
                }, t4.readAsDataURL(e3), a.readyState = a.INIT;
              }
              (n = n || l().createObjectURL(e3), o) ? s.location.href = n : s.open(n, "_blank") || (s.location.href = n);
              a.readyState = a.DONE, i3(), p(n);
            }();
          }, t2 = i2.prototype;
          return typeof navigator != "undefined" && navigator.msSaveOrOpenBlob ? function(e3, t3, r2) {
            return t3 = t3 || e3.name || "download", r2 || (e3 = m(e3)), navigator.msSaveOrOpenBlob(e3, t3);
          } : (t2.abort = function() {
          }, t2.readyState = t2.INIT = 0, t2.WRITING = 1, t2.DONE = 2, t2.error = t2.onwritestart = t2.onprogress = t2.onwrite = t2.onabort = t2.onerror = t2.onwriteend = null, function(e3, t3, r2) {
            return new i2(e3, t3 || e3.name || "download", r2);
          });
        }
      }(typeof self != "undefined" && self || typeof window != "undefined" && window || this.content);
      t !== void 0 && t.exports && (t.exports.saveAs = i);
    }, {}], 9: [function(e, t, r) {
      r.read = function(e2, t2, r2, i, n) {
        var a, o, s = 8 * n - i - 1, l = (1 << s) - 1, u = l >> 1, h = -7, c = r2 ? n - 1 : 0, f = r2 ? -1 : 1, d = e2[t2 + c];
        for (c += f, a = d & (1 << -h) - 1, d >>= -h, h += s; 0 < h; a = 256 * a + e2[t2 + c], c += f, h -= 8)
          ;
        for (o = a & (1 << -h) - 1, a >>= -h, h += i; 0 < h; o = 256 * o + e2[t2 + c], c += f, h -= 8)
          ;
        if (a === 0)
          a = 1 - u;
        else {
          if (a === l)
            return o ? NaN : 1 / 0 * (d ? -1 : 1);
          o += Math.pow(2, i), a -= u;
        }
        return (d ? -1 : 1) * o * Math.pow(2, a - i);
      }, r.write = function(e2, t2, r2, i, n, a) {
        var o, s, l, u = 8 * a - n - 1, h = (1 << u) - 1, c = h >> 1, f = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = i ? 0 : a - 1, p = i ? 1 : -1, m = t2 < 0 || t2 === 0 && 1 / t2 < 0 ? 1 : 0;
        for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (s = isNaN(t2) ? 1 : 0, o = h) : (o = Math.floor(Math.log(t2) / Math.LN2), t2 * (l = Math.pow(2, -o)) < 1 && (o--, l *= 2), 2 <= (t2 += 1 <= o + c ? f / l : f * Math.pow(2, 1 - c)) * l && (o++, l /= 2), h <= o + c ? (s = 0, o = h) : 1 <= o + c ? (s = (t2 * l - 1) * Math.pow(2, n), o += c) : (s = t2 * Math.pow(2, c - 1) * Math.pow(2, n), o = 0)); 8 <= n; e2[r2 + d] = 255 & s, d += p, s /= 256, n -= 8)
          ;
        for (o = o << n | s, u += n; 0 < u; e2[r2 + d] = 255 & o, d += p, o /= 256, u -= 8)
          ;
        e2[r2 + d - p] |= 128 * m;
      };
    }, {}], 10: [function(e, t, r) {
      var i;
      function v(e2, t2) {
        return e2.b === t2.b && e2.a === t2.a;
      }
      function y(e2, t2) {
        return e2.b < t2.b || e2.b === t2.b && e2.a <= t2.a;
      }
      function g(e2, t2, r2) {
        var i2 = t2.b - e2.b, n2 = r2.b - t2.b;
        return 0 < i2 + n2 ? i2 < n2 ? t2.a - e2.a + i2 / (i2 + n2) * (e2.a - r2.a) : t2.a - r2.a + n2 / (i2 + n2) * (r2.a - e2.a) : 0;
      }
      function b(e2, t2, r2) {
        var i2 = t2.b - e2.b, n2 = r2.b - t2.b;
        return 0 < i2 + n2 ? (t2.a - r2.a) * i2 + (t2.a - e2.a) * n2 : 0;
      }
      function _(e2, t2) {
        return e2.a < t2.a || e2.a === t2.a && e2.b <= t2.b;
      }
      function x(e2, t2, r2) {
        var i2 = t2.a - e2.a, n2 = r2.a - t2.a;
        return 0 < i2 + n2 ? i2 < n2 ? t2.b - e2.b + i2 / (i2 + n2) * (e2.b - r2.b) : t2.b - r2.b + n2 / (i2 + n2) * (r2.b - e2.b) : 0;
      }
      function w(e2, t2, r2) {
        var i2 = t2.a - e2.a, n2 = r2.a - t2.a;
        return 0 < i2 + n2 ? (t2.b - r2.b) * i2 + (t2.b - e2.b) * n2 : 0;
      }
      function S(e2, t2, r2, i2) {
        return (e2 = e2 < 0 ? 0 : e2) <= (r2 = r2 < 0 ? 0 : r2) ? r2 === 0 ? (t2 + i2) / 2 : t2 + e2 / (e2 + r2) * (i2 - t2) : i2 + r2 / (e2 + r2) * (t2 - i2);
      }
      function o(e2) {
        var t2 = a(e2.b);
        return n(t2, e2.c), n(t2.b, e2.c), s(t2, e2.a), t2;
      }
      function M(e2, t2) {
        var r2 = false, i2 = false;
        e2 !== t2 && (t2.a !== e2.a && (i2 = true, m(t2.a, e2.a)), t2.d !== e2.d && (r2 = true, l(t2.d, e2.d)), d(t2, e2), i2 || (n(t2, e2.a), e2.a.c = e2), r2 || (s(t2, e2.d), e2.d.a = e2));
      }
      function c(e2) {
        var t2 = e2.b, r2 = false;
        e2.d !== e2.b.d && (r2 = true, l(e2.d, e2.b.d)), e2.c === e2 ? m(e2.a, null) : (e2.b.d.a = J(e2), e2.a.c = e2.c, d(e2, J(e2)), r2 || s(e2, e2.d)), t2.c === t2 ? (m(t2.a, null), l(t2.d, null)) : (e2.d.a = J(t2), t2.a.c = t2.c, d(t2, J(t2))), p(e2);
      }
      function T(e2) {
        var t2 = a(e2), r2 = t2.b;
        return d(t2, e2.e), t2.a = e2.b.a, n(r2, t2.a), t2.d = r2.d = e2.d, t2 = t2.b, d(e2.b, J(e2.b)), d(e2.b, t2), e2.b.a = t2.a, t2.b.a.c = t2.b, t2.b.d = e2.b.d, t2.f = e2.f, t2.b.f = e2.b.f, t2;
      }
      function f(e2, t2) {
        var r2 = false, i2 = a(e2), n2 = i2.b;
        return t2.d !== e2.d && (r2 = true, l(t2.d, e2.d)), d(i2, e2.e), d(n2, t2), i2.a = e2.b.a, n2.a = t2.a, i2.d = n2.d = e2.d, e2.d.a = n2, r2 || s(i2, e2.d), i2;
      }
      function a(e2) {
        var t2 = new K(), r2 = new K(), i2 = e2.b.h;
        return (((r2.h = i2).b.h = t2).h = e2).b.h = r2, t2.b = r2, ((t2.c = t2).e = r2).b = t2, (r2.c = r2).e = t2;
      }
      function d(e2, t2) {
        var r2 = e2.c, i2 = t2.c;
        r2.b.e = t2, (i2.b.e = e2).c = i2, t2.c = r2;
      }
      function n(e2, t2) {
        var r2 = t2.f, i2 = new ee(t2, r2);
        for (r2.e = i2, r2 = (t2.f = i2).c = e2; r2.a = i2, (r2 = r2.c) !== e2; )
          ;
      }
      function s(e2, t2) {
        var r2 = t2.d, i2 = new Q(t2, r2);
        for (r2.b = i2, (t2.d = i2).a = e2, i2.c = t2.c, r2 = e2; r2.d = i2, (r2 = r2.e) !== e2; )
          ;
      }
      function p(e2) {
        var t2 = e2.h;
        e2 = e2.b.h, (t2.b.h = e2).b.h = t2;
      }
      function m(e2, t2) {
        for (var r2 = e2.c, i2 = r2; i2.a = t2, (i2 = i2.c) !== r2; )
          ;
        r2 = e2.f, ((i2 = e2.e).f = r2).e = i2;
      }
      function l(e2, t2) {
        for (var r2 = e2.a, i2 = r2; i2.d = t2, (i2 = i2.e) !== r2; )
          ;
        r2 = e2.d, ((i2 = e2.b).d = r2).b = i2;
      }
      function E(e2) {
        var t2 = 0;
        return Math.abs(e2[1]) > Math.abs(e2[0]) && (t2 = 1), Math.abs(e2[2]) > Math.abs(e2[t2]) && (t2 = 2), t2;
      }
      var C = 4e150;
      function L(e2, t2) {
        e2.f += t2.f, e2.b.f += t2.b.f;
      }
      function u(e2, t2, r2) {
        return e2 = e2.a, t2 = t2.a, r2 = r2.a, t2.b.a === e2 ? r2.b.a === e2 ? y(t2.a, r2.a) ? b(r2.b.a, t2.a, r2.a) <= 0 : 0 <= b(t2.b.a, r2.a, t2.a) : b(r2.b.a, e2, r2.a) <= 0 : r2.b.a === e2 ? 0 <= b(t2.b.a, e2, t2.a) : (t2 = g(t2.b.a, e2, t2.a), (e2 = g(r2.b.a, e2, r2.a)) <= t2);
      }
      function O(e2) {
        e2.a.i = null;
        var t2 = e2.e;
        t2.a.c = t2.c, t2.c.a = t2.a, e2.e = null;
      }
      function h(e2, t2) {
        c(e2.a), e2.c = false, (e2.a = t2).i = e2;
      }
      function P(e2) {
        for (var t2 = e2.a.a; (e2 = fe(e2)).a.a === t2; )
          ;
        return e2.c && (h(e2, t2 = f(ce(e2).a.b, e2.a.e)), e2 = fe(e2)), e2;
      }
      function R(e2, t2, r2) {
        var i2 = new he();
        return i2.a = r2, i2.e = W(e2.f, t2.e, i2), r2.i = i2;
      }
      function D(e2, t2) {
        switch (e2.s) {
          case 100130:
            return (1 & t2) != 0;
          case 100131:
            return t2 !== 0;
          case 100132:
            return 0 < t2;
          case 100133:
            return t2 < 0;
          case 100134:
            return 2 <= t2 || t2 <= -2;
        }
        return false;
      }
      function k(e2) {
        var t2 = e2.a, r2 = t2.d;
        r2.c = e2.d, r2.a = t2, O(e2);
      }
      function A(e2, t2, r2) {
        for (t2 = (e2 = t2).a; e2 !== r2; ) {
          e2.c = false;
          var i2 = ce(e2), n2 = i2.a;
          if (n2.a !== t2.a) {
            if (!i2.c) {
              k(e2);
              break;
            }
            h(i2, n2 = f(t2.c.b, n2.b));
          }
          t2.c !== n2 && (M(J(n2), n2), M(t2, n2)), k(e2), t2 = i2.a, e2 = i2;
        }
        return t2;
      }
      function I(e2, t2, r2, i2, n2, a2) {
        for (var o2 = true; R(e2, t2, r2.b), (r2 = r2.c) !== i2; )
          ;
        for (n2 === null && (n2 = ce(t2).a.b.c); (r2 = (i2 = ce(t2)).a.b).a === n2.a; )
          r2.c !== n2 && (M(J(r2), r2), M(J(n2), r2)), i2.f = t2.f - r2.f, i2.d = D(e2, i2.f), t2.b = true, !o2 && B(e2, t2) && (L(r2, n2), O(t2), c(n2)), o2 = false, t2 = i2, n2 = r2;
        t2.b = true, a2 && j(e2, t2);
      }
      function U(e2, t2, r2, i2, n2) {
        var a2 = [t2.g[0], t2.g[1], t2.g[2]];
        t2.d = null, t2.d = e2.o && e2.o(a2, r2, i2, e2.c) || null, t2.d === null && (n2 ? e2.n || (Z(e2, 100156), e2.n = true) : t2.d = r2[0]);
      }
      function N(e2, t2, r2) {
        var i2 = [null, null, null, null];
        i2[0] = t2.a.d, i2[1] = r2.a.d, U(e2, t2.a, i2, [0.5, 0.5, 0, 0], false), M(t2, r2);
      }
      function F(e2, t2, r2, i2, n2) {
        var a2 = Math.abs(t2.b - e2.b) + Math.abs(t2.a - e2.a), o2 = Math.abs(r2.b - e2.b) + Math.abs(r2.a - e2.a), s2 = n2 + 1;
        i2[n2] = 0.5 * o2 / (a2 + o2), i2[s2] = 0.5 * a2 / (a2 + o2), e2.g[0] += i2[n2] * t2.g[0] + i2[s2] * r2.g[0], e2.g[1] += i2[n2] * t2.g[1] + i2[s2] * r2.g[1], e2.g[2] += i2[n2] * t2.g[2] + i2[s2] * r2.g[2];
      }
      function B(e2, t2) {
        var r2 = ce(t2), i2 = t2.a, n2 = r2.a;
        if (y(i2.a, n2.a)) {
          if (0 < b(n2.b.a, i2.a, n2.a))
            return false;
          if (v(i2.a, n2.a)) {
            if (i2.a !== n2.a) {
              r2 = e2.e;
              var a2 = i2.a.h;
              if (0 <= a2) {
                var o2 = (r2 = r2.b).d, s2 = r2.e, l2 = r2.c, u2 = l2[a2];
                o2[u2] = o2[r2.a], (l2[o2[u2]] = u2) <= --r2.a && (u2 <= 1 ? le(r2, u2) : y(s2[o2[u2 >> 1]], s2[o2[u2]]) ? le(r2, u2) : ue(r2, u2)), s2[a2] = null, l2[a2] = r2.b, r2.b = a2;
              } else
                for (r2.c[-(a2 + 1)] = null; 0 < r2.a && r2.c[r2.d[r2.a - 1]] === null; )
                  --r2.a;
              N(e2, J(n2), i2);
            }
          } else
            T(n2.b), M(i2, J(n2)), t2.b = r2.b = true;
        } else {
          if (b(i2.b.a, n2.a, i2.a) < 0)
            return false;
          fe(t2).b = t2.b = true, T(i2.b), M(J(n2), i2);
        }
        return true;
      }
      function G(e2, t2) {
        var r2 = ce(t2), i2 = t2.a, n2 = r2.a, a2 = i2.a, o2 = n2.a, s2 = i2.b.a, l2 = n2.b.a, u2 = new ee();
        if (b(s2, e2.a, a2), b(l2, e2.a, o2), a2 === o2 || Math.min(a2.a, s2.a) > Math.max(o2.a, l2.a))
          return false;
        if (y(a2, o2)) {
          if (0 < b(l2, a2, o2))
            return false;
        } else if (b(s2, o2, a2) < 0)
          return false;
        var h2, c2, f2 = s2, d2 = a2, p2 = l2, m2 = o2;
        if (y(f2, d2) || (h2 = f2, f2 = d2, d2 = h2), y(p2, m2) || (h2 = p2, p2 = m2, m2 = h2), y(f2, p2) || (h2 = f2, f2 = p2, p2 = h2, h2 = d2, d2 = m2, m2 = h2), y(p2, d2) ? y(d2, m2) ? ((h2 = g(f2, p2, d2)) + (c2 = g(p2, d2, m2)) < 0 && (h2 = -h2, c2 = -c2), u2.b = S(h2, p2.b, c2, d2.b)) : ((h2 = b(f2, p2, d2)) + (c2 = -b(f2, m2, d2)) < 0 && (h2 = -h2, c2 = -c2), u2.b = S(h2, p2.b, c2, m2.b)) : u2.b = (p2.b + d2.b) / 2, _(f2, d2) || (h2 = f2, f2 = d2, d2 = h2), _(p2, m2) || (h2 = p2, p2 = m2, m2 = h2), _(f2, p2) || (h2 = f2, f2 = p2, p2 = h2, h2 = d2, d2 = m2, m2 = h2), _(p2, d2) ? _(d2, m2) ? ((h2 = x(f2, p2, d2)) + (c2 = x(p2, d2, m2)) < 0 && (h2 = -h2, c2 = -c2), u2.a = S(h2, p2.a, c2, d2.a)) : ((h2 = w(f2, p2, d2)) + (c2 = -w(f2, m2, d2)) < 0 && (h2 = -h2, c2 = -c2), u2.a = S(h2, p2.a, c2, m2.a)) : u2.a = (p2.a + d2.a) / 2, y(u2, e2.a) && (u2.b = e2.a.b, u2.a = e2.a.a), f2 = y(a2, o2) ? a2 : o2, y(f2, u2) && (u2.b = f2.b, u2.a = f2.a), v(u2, a2) || v(u2, o2))
          return B(e2, t2), false;
        if (!v(s2, e2.a) && 0 <= b(s2, e2.a, u2) || !v(l2, e2.a) && b(l2, e2.a, u2) <= 0) {
          if (l2 === e2.a)
            return T(i2.b), M(n2.b, i2), i2 = ce(t2 = P(t2)).a, A(e2, ce(t2), r2), I(e2, t2, J(i2), i2, i2, true), true;
          if (s2 !== e2.a)
            return 0 <= b(s2, e2.a, u2) && (fe(t2).b = t2.b = true, T(i2.b), i2.a.b = e2.a.b, i2.a.a = e2.a.a), b(l2, e2.a, u2) <= 0 && (t2.b = r2.b = true, T(n2.b), n2.a.b = e2.a.b, n2.a.a = e2.a.a), false;
          for (T(n2.b), M(i2.e, J(n2)), o2 = (a2 = r2 = t2).a.b.a; (a2 = fe(a2)).a.b.a === o2; )
            ;
          return a2 = ce(t2 = a2).a.b.c, r2.a = J(n2), I(e2, t2, (n2 = A(e2, r2, null)).c, i2.b.c, a2, true), true;
        }
        return T(i2.b), T(n2.b), M(J(n2), i2), i2.a.b = u2.b, i2.a.a = u2.a, i2.a.h = re(e2.e, i2.a), i2 = i2.a, n2 = [0, 0, 0, 0], u2 = [a2.d, s2.d, o2.d, l2.d], i2.g[0] = i2.g[1] = i2.g[2] = 0, F(i2, a2, s2, n2, 0), F(i2, o2, l2, n2, 2), U(e2, i2, u2, n2, true), fe(t2).b = t2.b = r2.b = true, false;
      }
      function j(e2, t2) {
        for (var r2 = ce(t2); ; ) {
          for (; r2.b; )
            r2 = ce(t2 = r2);
          if (!t2.b && ((t2 = fe(r2 = t2)) === null || !t2.b))
            break;
          t2.b = false;
          var i2, n2 = t2.a, a2 = r2.a;
          if (i2 = n2.b.a !== a2.b.a)
            e: {
              var o2 = ce(i2 = t2), s2 = i2.a, l2 = o2.a, u2 = void 0;
              if (y(s2.b.a, l2.b.a)) {
                if (b(s2.b.a, l2.b.a, s2.a) < 0) {
                  i2 = false;
                  break e;
                }
                fe(i2).b = i2.b = true, u2 = T(s2), M(l2.b, u2), u2.d.c = i2.d;
              } else {
                if (0 < b(l2.b.a, s2.b.a, l2.a)) {
                  i2 = false;
                  break e;
                }
                i2.b = o2.b = true, u2 = T(l2), M(s2.e, l2.b), u2.b.d.c = i2.d;
              }
              i2 = true;
            }
          if (i2 && (r2.c ? (O(r2), c(a2), a2 = (r2 = ce(t2)).a) : t2.c && (O(t2), c(n2), n2 = (t2 = fe(r2)).a)), n2.a !== a2.a) {
            if (n2.b.a === a2.b.a || t2.c || r2.c || n2.b.a !== e2.a && a2.b.a !== e2.a)
              B(e2, t2);
            else if (G(e2, t2))
              break;
          }
          n2.a === a2.a && n2.b.a === a2.b.a && (L(a2, n2), O(t2), c(n2), t2 = fe(r2));
        }
      }
      function V(e2, t2) {
        for (var r2 = (e2.a = t2).c; r2.i === null; )
          if ((r2 = r2.c) === t2.c) {
            r2 = e2;
            var i2 = t2;
            (o2 = new he()).a = i2.c.b;
            for (var n2 = (l2 = r2.f).a; (n2 = n2.a).b !== null && !l2.c(l2.b, o2, n2.b); )
              ;
            var a2 = ce(l2 = n2.b), o2 = l2.a;
            n2 = a2.a;
            if (b(o2.b.a, i2, o2.a) === 0)
              v((o2 = l2.a).a, i2) || v(o2.b.a, i2) || (T(o2.b), l2.c && (c(o2.c), l2.c = false), M(i2.c, o2), V(r2, i2));
            else {
              var s2 = y(n2.b.a, o2.b.a) ? l2 : a2;
              a2 = void 0;
              l2.d || s2.c ? (a2 = s2 === l2 ? f(i2.c.b, o2.e) : f(n2.b.c.b, i2.c).b, s2.c ? h(s2, a2) : ((l2 = R(o2 = r2, l2, a2)).f = fe(l2).f + l2.a.f, l2.d = D(o2, l2.f)), V(r2, i2)) : I(r2, l2, i2.c, i2.c, null, true);
            }
            return;
          }
        if (l2 = (o2 = ce(r2 = P(r2.i))).a, (o2 = A(e2, o2, null)).c === l2) {
          o2 = (l2 = o2).c, n2 = ce(r2), a2 = r2.a, s2 = n2.a;
          var l2, u2 = false;
          a2.b.a !== s2.b.a && G(e2, r2), v(a2.a, e2.a) && (M(J(o2), a2), o2 = ce(r2 = P(r2)).a, A(e2, ce(r2), n2), u2 = true), v(s2.a, e2.a) && (M(l2, J(s2)), l2 = A(e2, n2, null), u2 = true), u2 ? I(e2, r2, l2.c, o2, o2, true) : (i2 = y(s2.a, a2.a) ? J(s2) : a2, I(e2, r2, i2 = f(l2.c.b, i2), i2.c, i2.c, false), i2.b.i.c = true, j(e2, r2));
        } else
          I(e2, r2, o2.c, l2, l2, true);
      }
      function z(e2, t2) {
        var r2 = new he(), i2 = o(e2.b);
        i2.a.b = C, i2.a.a = t2, i2.b.a.b = -C, i2.b.a.a = t2, e2.a = i2.b.a, r2.a = i2, r2.f = 0, r2.d = false, r2.c = false, r2.h = true, r2.b = false, i2 = W(i2 = e2.f, i2.a, r2), r2.e = i2;
      }
      function H(e2) {
        this.a = new q(), this.b = e2, this.c = u;
      }
      function W(e2, t2, r2) {
        for (; (t2 = t2.c).b !== null && !e2.c(e2.b, t2.b, r2); )
          ;
        return e2 = new q(r2, t2.a, t2), t2.a.c = e2, t2.a = e2;
      }
      function q(e2, t2, r2) {
        this.b = e2 || null, this.a = t2 || this, this.c = r2 || this;
      }
      function X() {
        this.d = 0, this.p = this.b = this.q = null, this.j = [0, 0, 0], this.s = 100130, this.n = false, this.o = this.a = this.e = this.f = null, this.m = false, this.c = this.r = this.i = this.k = this.l = this.h = null;
      }
      function Y(e2, t2) {
        if (e2.d !== t2)
          for (; e2.d !== t2; )
            if (e2.d < t2)
              switch (e2.d) {
                case 0:
                  Z(e2, 100151), e2.u(null);
                  break;
                case 1:
                  Z(e2, 100152), e2.t();
              }
            else
              switch (e2.d) {
                case 2:
                  Z(e2, 100154), e2.v();
                  break;
                case 1:
                  Z(e2, 100153), e2.w();
              }
      }
      function Z(e2, t2) {
        e2.p && e2.p(t2, e2.c);
      }
      function Q(e2, t2) {
        this.b = e2 || this, this.d = t2 || this, this.a = null, this.c = false;
      }
      function K() {
        (this.h = this).i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
      }
      function J(e2) {
        return e2.b.e;
      }
      function $() {
        this.c = new ee(), this.a = new Q(), this.b = new K(), this.d = new K(), this.b.b = this.d, this.d.b = this.b;
      }
      function ee(e2, t2) {
        this.e = e2 || this, this.f = t2 || this, this.d = this.c = null, this.g = [0, 0, 0], this.h = this.a = this.b = 0;
      }
      function te() {
        this.c = [], this.d = null, this.a = 0, this.e = false, this.b = new ne();
      }
      function re(e2, t2) {
        if (e2.e) {
          var r2, i2 = e2.b, n2 = ++i2.a;
          return 2 * n2 > i2.f && (i2.f *= 2, i2.c = ae(i2.c, i2.f + 1)), i2.b === 0 ? r2 = n2 : (r2 = i2.b, i2.b = i2.c[i2.b]), i2.e[r2] = t2, i2.c[r2] = n2, i2.d[n2] = r2, i2.h && ue(i2, n2), r2;
        }
        return i2 = e2.a++, e2.c[i2] = t2, -(i2 + 1);
      }
      function ie(e2) {
        if (e2.a === 0)
          return se(e2.b);
        var t2 = e2.c[e2.d[e2.a - 1]];
        if (e2.b.a !== 0 && y(oe(e2.b), t2))
          return se(e2.b);
        for (; --e2.a, 0 < e2.a && e2.c[e2.d[e2.a - 1]] === null; )
          ;
        return t2;
      }
      function ne() {
        this.d = ae([0], 33), this.e = [null, null], this.c = [0, 0], this.a = 0, this.f = 32, this.b = 0, this.h = false, this.d[1] = 1;
      }
      function ae(e2, t2) {
        for (var r2 = Array(t2), i2 = 0; i2 < e2.length; i2++)
          r2[i2] = e2[i2];
        for (; i2 < t2; i2++)
          r2[i2] = 0;
        return r2;
      }
      function oe(e2) {
        return e2.e[e2.d[1]];
      }
      function se(e2) {
        var t2 = e2.d, r2 = e2.e, i2 = e2.c, n2 = t2[1], a2 = r2[n2];
        return 0 < e2.a && (t2[1] = t2[e2.a], i2[t2[1]] = 1, r2[n2] = null, i2[n2] = e2.b, e2.b = n2, 0 < --e2.a && le(e2, 1)), a2;
      }
      function le(e2, t2) {
        for (var r2 = e2.d, i2 = e2.e, n2 = e2.c, a2 = t2, o2 = r2[a2]; ; ) {
          var s2 = a2 << 1;
          s2 < e2.a && y(i2[r2[s2 + 1]], i2[r2[s2]]) && (s2 += 1);
          var l2 = r2[s2];
          if (s2 > e2.a || y(i2[o2], i2[l2])) {
            n2[r2[a2] = o2] = a2;
            break;
          }
          n2[r2[a2] = l2] = a2, a2 = s2;
        }
      }
      function ue(e2, t2) {
        for (var r2 = e2.d, i2 = e2.e, n2 = e2.c, a2 = t2, o2 = r2[a2]; ; ) {
          var s2 = a2 >> 1, l2 = r2[s2];
          if (s2 == 0 || y(i2[l2], i2[o2])) {
            n2[r2[a2] = o2] = a2;
            break;
          }
          n2[r2[a2] = l2] = a2, a2 = s2;
        }
      }
      function he() {
        this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = false;
      }
      function ce(e2) {
        return e2.e.c.b;
      }
      function fe(e2) {
        return e2.e.a.b;
      }
      (i = X.prototype).x = function() {
        Y(this, 0);
      }, i.B = function(e2, t2) {
        switch (e2) {
          case 100142:
            return;
          case 100140:
            switch (t2) {
              case 100130:
              case 100131:
              case 100132:
              case 100133:
              case 100134:
                return void (this.s = t2);
            }
            break;
          case 100141:
            return void (this.m = !!t2);
          default:
            return void Z(this, 100900);
        }
        Z(this, 100901);
      }, i.y = function(e2) {
        switch (e2) {
          case 100142:
            return 0;
          case 100140:
            return this.s;
          case 100141:
            return this.m;
          default:
            Z(this, 100900);
        }
        return false;
      }, i.A = function(e2, t2, r2) {
        this.j[0] = e2, this.j[1] = t2, this.j[2] = r2;
      }, i.z = function(e2, t2) {
        var r2 = t2 || null;
        switch (e2) {
          case 100100:
          case 100106:
            this.h = r2;
            break;
          case 100104:
          case 100110:
            this.l = r2;
            break;
          case 100101:
          case 100107:
            this.k = r2;
            break;
          case 100102:
          case 100108:
            this.i = r2;
            break;
          case 100103:
          case 100109:
            this.p = r2;
            break;
          case 100105:
          case 100111:
            this.o = r2;
            break;
          case 100112:
            this.r = r2;
            break;
          default:
            Z(this, 100900);
        }
      }, i.C = function(e2, t2) {
        var r2 = false, i2 = [0, 0, 0];
        Y(this, 2);
        for (var n2 = 0; n2 < 3; ++n2) {
          var a2 = e2[n2];
          a2 < -1e150 && (a2 = -1e150, r2 = true), 1e150 < a2 && (a2 = 1e150, r2 = true), i2[n2] = a2;
        }
        r2 && Z(this, 100155), (r2 = this.q) === null ? M(r2 = o(this.b), r2.b) : (T(r2), r2 = r2.e), r2.a.d = t2, r2.a.g[0] = i2[0], r2.a.g[1] = i2[1], r2.a.g[2] = i2[2], r2.f = 1, r2.b.f = -1, this.q = r2;
      }, i.u = function(e2) {
        Y(this, 0), this.d = 1, this.b = new $(), this.c = e2;
      }, i.t = function() {
        Y(this, 1), this.d = 2, this.q = null;
      }, i.v = function() {
        Y(this, 2), this.d = 1;
      }, i.w = function() {
        Y(this, 1), this.d = 0;
        var e2, t2, r2 = false, i2 = [l2 = this.j[0], n2 = this.j[1], o2 = this.j[2]];
        if (l2 === 0 && n2 === 0 && o2 === 0) {
          for (var n2 = [-2e150, -2e150, -2e150], a2 = [2e150, 2e150, 2e150], o2 = [], s2 = [], l2 = (r2 = this.b.c).e; l2 !== r2; l2 = l2.e)
            for (var u2 = 0; u2 < 3; ++u2) {
              var h2 = l2.g[u2];
              h2 < a2[u2] && (a2[u2] = h2, s2[u2] = l2), h2 > n2[u2] && (n2[u2] = h2, o2[u2] = l2);
            }
          if (l2 = 0, n2[1] - a2[1] > n2[0] - a2[0] && (l2 = 1), n2[2] - a2[2] > n2[l2] - a2[l2] && (l2 = 2), a2[l2] >= n2[l2])
            i2[0] = 0, i2[1] = 0, i2[2] = 1;
          else {
            for (n2 = 0, a2 = s2[l2], o2 = o2[l2], s2 = [0, 0, 0], a2 = [a2.g[0] - o2.g[0], a2.g[1] - o2.g[1], a2.g[2] - o2.g[2]], u2 = [0, 0, 0], l2 = r2.e; l2 !== r2; l2 = l2.e)
              u2[0] = l2.g[0] - o2.g[0], u2[1] = l2.g[1] - o2.g[1], u2[2] = l2.g[2] - o2.g[2], s2[0] = a2[1] * u2[2] - a2[2] * u2[1], s2[1] = a2[2] * u2[0] - a2[0] * u2[2], s2[2] = a2[0] * u2[1] - a2[1] * u2[0], n2 < (h2 = s2[0] * s2[0] + s2[1] * s2[1] + s2[2] * s2[2]) && (n2 = h2, i2[0] = s2[0], i2[1] = s2[1], i2[2] = s2[2]);
            n2 <= 0 && (i2[0] = i2[1] = i2[2] = 0, i2[E(a2)] = 1);
          }
          r2 = true;
        }
        for (s2 = E(i2), l2 = this.b.c, n2 = (s2 + 1) % 3, o2 = (s2 + 2) % 3, s2 = 0 < i2[s2] ? 1 : -1, i2 = l2.e; i2 !== l2; i2 = i2.e)
          i2.b = i2.g[n2], i2.a = s2 * i2.g[o2];
        if (r2) {
          for (i2 = 0, l2 = (r2 = this.b.a).b; l2 !== r2; l2 = l2.b)
            if (!((n2 = l2.a).f <= 0))
              for (; i2 += (n2.a.b - n2.b.a.b) * (n2.a.a + n2.b.a.a), (n2 = n2.e) !== l2.a; )
                ;
          if (i2 < 0)
            for (r2 = (i2 = this.b.c).e; r2 !== i2; r2 = r2.e)
              r2.a = -r2.a;
        }
        for (this.n = false, l2 = (i2 = this.b.b).h; l2 !== i2; l2 = r2)
          r2 = l2.h, n2 = l2.e, v(l2.a, l2.b.a) && l2.e.e !== l2 && (N(this, n2, l2), c(l2), n2 = (l2 = n2).e), n2.e === l2 && (n2 !== l2 && (n2 !== r2 && n2 !== r2.b || (r2 = r2.h), c(n2)), l2 !== r2 && l2 !== r2.b || (r2 = r2.h), c(l2));
        for (this.e = i2 = new te(), l2 = (r2 = this.b.c).e; l2 !== r2; l2 = l2.e)
          l2.h = re(i2, l2);
        for (!function(e3) {
          e3.d = [];
          for (var t3 = 0; t3 < e3.a; t3++)
            e3.d[t3] = t3;
          e3.d.sort(function(r3) {
            return function(e4, t4) {
              return y(r3[e4], r3[t4]) ? 1 : -1;
            };
          }(e3.c)), e3.e = true, function(e4) {
            for (var t4 = e4.a; 1 <= t4; --t4)
              le(e4, t4);
            e4.h = true;
          }(e3.b);
        }(i2), this.f = new H(this), z(this, -C), z(this, C); (i2 = ie(this.e)) !== null; ) {
          for (; ; ) {
            e:
              if (l2 = this.e, l2.a === 0)
                r2 = oe(l2.b);
              else if (r2 = l2.c[l2.d[l2.a - 1]], l2.b.a !== 0 && (l2 = oe(l2.b), y(l2, r2))) {
                r2 = l2;
                break e;
              }
            if (r2 === null || !v(r2, i2))
              break;
            r2 = ie(this.e), N(this, i2.c, r2.c);
          }
          V(this, i2);
        }
        for (this.a = this.f.a.a.b.a.a, i2 = 0; (r2 = this.f.a.a.b) !== null; )
          r2.h || ++i2, O(r2);
        for (this.f = null, (i2 = this.e).b = null, i2.d = null, this.e = i2.c = null, l2 = (i2 = this.b).a.b; l2 !== i2.a; l2 = r2)
          r2 = l2.b, (l2 = l2.a).e.e === l2 && (L(l2.c, l2), c(l2));
        if (!this.n) {
          if (i2 = this.b, this.m)
            for (l2 = i2.b.h; l2 !== i2.b; l2 = r2)
              r2 = l2.h, l2.b.d.c !== l2.d.c ? l2.f = l2.d.c ? 1 : -1 : c(l2);
          else
            for (l2 = i2.a.b; l2 !== i2.a; l2 = r2)
              if (r2 = l2.b, l2.c) {
                for (l2 = l2.a; y(l2.b.a, l2.a); l2 = l2.c.b)
                  ;
                for (; y(l2.a, l2.b.a); l2 = l2.e)
                  ;
                for (n2 = l2.c.b, o2 = void 0; l2.e !== n2; )
                  if (y(l2.b.a, n2.a)) {
                    for (; n2.e !== l2 && (y((t2 = n2.e).b.a, t2.a) || b(n2.a, n2.b.a, n2.e.b.a) <= 0); )
                      n2 = (o2 = f(n2.e, n2)).b;
                    n2 = n2.c.b;
                  } else {
                    for (; n2.e !== l2 && (y((e2 = l2.c.b).a, e2.b.a) || 0 <= b(l2.b.a, l2.a, l2.c.b.a)); )
                      l2 = (o2 = f(l2, l2.c.b)).b;
                    l2 = l2.e;
                  }
                for (; n2.e.e !== l2; )
                  n2 = (o2 = f(n2.e, n2)).b;
              }
          if (this.h || this.i || this.k || this.l)
            if (this.m) {
              for (r2 = (i2 = this.b).a.b; r2 !== i2.a; r2 = r2.b)
                if (r2.c) {
                  for (this.h && this.h(2, this.c), l2 = r2.a; this.k && this.k(l2.a.d, this.c), (l2 = l2.e) !== r2.a; )
                    ;
                  this.i && this.i(this.c);
                }
            } else {
              for (i2 = this.b, r2 = !!this.l, l2 = false, n2 = -1, o2 = i2.a.d; o2 !== i2.a; o2 = o2.d)
                if (o2.c)
                  for (l2 || (this.h && this.h(4, this.c), l2 = true), s2 = o2.a; r2 && (n2 !== (a2 = s2.b.d.c ? 0 : 1) && (n2 = a2, this.l && this.l(!!n2, this.c))), this.k && this.k(s2.a.d, this.c), (s2 = s2.e) !== o2.a; )
                    ;
              l2 && this.i && this.i(this.c);
            }
          if (this.r) {
            for (l2 = (i2 = this.b).a.b; l2 !== i2.a; l2 = r2)
              if (r2 = l2.b, !l2.c) {
                for (o2 = (n2 = l2.a).e, s2 = void 0; o2 = (s2 = o2).e, (s2.d = null) === s2.b.d && (s2.c === s2 ? m(s2.a, null) : (s2.a.c = s2.c, d(s2, J(s2))), (a2 = s2.b).c === a2 ? m(a2.a, null) : (a2.a.c = a2.c, d(a2, J(a2))), p(s2)), s2 !== n2; )
                  ;
                n2 = l2.d, ((l2 = l2.b).d = n2).b = l2;
              }
            return this.r(this.b), void (this.c = this.b = null);
          }
        }
        this.b = this.c = null;
      }, this.libtess = {GluTesselator: X, windingRule: {GLU_TESS_WINDING_ODD: 100130, GLU_TESS_WINDING_NONZERO: 100131, GLU_TESS_WINDING_POSITIVE: 100132, GLU_TESS_WINDING_NEGATIVE: 100133, GLU_TESS_WINDING_ABS_GEQ_TWO: 100134}, primitiveType: {GL_LINE_LOOP: 2, GL_TRIANGLES: 4, GL_TRIANGLE_STRIP: 5, GL_TRIANGLE_FAN: 6}, errorType: {GLU_TESS_MISSING_BEGIN_POLYGON: 100151, GLU_TESS_MISSING_END_POLYGON: 100153, GLU_TESS_MISSING_BEGIN_CONTOUR: 100152, GLU_TESS_MISSING_END_CONTOUR: 100154, GLU_TESS_COORD_TOO_LARGE: 100155, GLU_TESS_NEED_COMBINE_CALLBACK: 100156}, gluEnum: {GLU_TESS_MESH: 100112, GLU_TESS_TOLERANCE: 100142, GLU_TESS_WINDING_RULE: 100140, GLU_TESS_BOUNDARY_ONLY: 100141, GLU_INVALID_ENUM: 100900, GLU_INVALID_VALUE: 100901, GLU_TESS_BEGIN: 100100, GLU_TESS_VERTEX: 100101, GLU_TESS_END: 100102, GLU_TESS_ERROR: 100103, GLU_TESS_EDGE_FLAG: 100104, GLU_TESS_COMBINE: 100105, GLU_TESS_BEGIN_DATA: 100106, GLU_TESS_VERTEX_DATA: 100107, GLU_TESS_END_DATA: 100108, GLU_TESS_ERROR_DATA: 100109, GLU_TESS_EDGE_FLAG_DATA: 100110, GLU_TESS_COMBINE_DATA: 100111}}, X.prototype.gluDeleteTess = X.prototype.x, X.prototype.gluTessProperty = X.prototype.B, X.prototype.gluGetTessProperty = X.prototype.y, X.prototype.gluTessNormal = X.prototype.A, X.prototype.gluTessCallback = X.prototype.z, X.prototype.gluTessVertex = X.prototype.C, X.prototype.gluTessBeginPolygon = X.prototype.u, X.prototype.gluTessBeginContour = X.prototype.t, X.prototype.gluTessEndContour = X.prototype.v, X.prototype.gluTessEndPolygon = X.prototype.w, t !== void 0 && (t.exports = this.libtess);
    }, {}], 11: [function(e, t, r) {
      function L(e2, t2, r2, i) {
        for (var n = e2[t2++], a = 1 << n, o = 1 + a, s = 1 + o, l = n + 1, u = (1 << l) - 1, h = 0, c = 0, f = 0, d = e2[t2++], p = new Int32Array(4096), m = null; ; ) {
          for (; h < 16 && d !== 0; )
            c |= e2[t2++] << h, h += 8, d === 1 ? d = e2[t2++] : --d;
          if (h < l)
            break;
          var v = c & u;
          if (c >>= l, h -= l, v != a) {
            if (v == o)
              break;
            for (var y = v < s ? v : m, g = 0, b = y; a < b; )
              b = p[b] >> 8, ++g;
            var _ = b;
            if (i < f + g + (y !== v ? 1 : 0))
              return void console.log("Warning, gif stream longer than expected.");
            r2[f++] = _;
            var x = f += g;
            for (y !== v && (r2[f++] = _), b = y; g--; )
              b = p[b], r2[--x] = 255 & b, b >>= 8;
            m !== null && s < 4096 && (p[s++] = m << 8 | _, u + 1 <= s && l < 12 && (++l, u = u << 1 | 1)), m = v;
          } else
            s = 1 + o, u = (1 << (l = n + 1)) - 1, m = null;
        }
        return f !== i && console.log("Warning, gif stream shorter than expected."), r2;
      }
      try {
        r.GifWriter = function(y, e2, t2, r2) {
          var g = 0, i = (r2 = r2 === void 0 ? {} : r2).loop === void 0 ? null : r2.loop, b = r2.palette === void 0 ? null : r2.palette;
          if (e2 <= 0 || t2 <= 0 || 65535 < e2 || 65535 < t2)
            throw new Error("Width/Height invalid.");
          function _(e3) {
            var t3 = e3.length;
            if (t3 < 2 || 256 < t3 || t3 & t3 - 1)
              throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");
            return t3;
          }
          y[g++] = 71, y[g++] = 73, y[g++] = 70, y[g++] = 56, y[g++] = 57, y[g++] = 97;
          var n = 0, a = 0;
          if (b !== null) {
            for (var o = _(b); o >>= 1; )
              ++n;
            if (o = 1 << n, --n, r2.background !== void 0) {
              if (o <= (a = r2.background))
                throw new Error("Background index out of range.");
              if (a === 0)
                throw new Error("Background index explicitly passed as 0.");
            }
          }
          if (y[g++] = 255 & e2, y[g++] = e2 >> 8 & 255, y[g++] = 255 & t2, y[g++] = t2 >> 8 & 255, y[g++] = (b !== null ? 128 : 0) | n, y[g++] = a, y[g++] = 0, b !== null)
            for (var s = 0, l = b.length; s < l; ++s) {
              var u = b[s];
              y[g++] = u >> 16 & 255, y[g++] = u >> 8 & 255, y[g++] = 255 & u;
            }
          if (i !== null) {
            if (i < 0 || 65535 < i)
              throw new Error("Loop count invalid.");
            y[g++] = 33, y[g++] = 255, y[g++] = 11, y[g++] = 78, y[g++] = 69, y[g++] = 84, y[g++] = 83, y[g++] = 67, y[g++] = 65, y[g++] = 80, y[g++] = 69, y[g++] = 50, y[g++] = 46, y[g++] = 48, y[g++] = 3, y[g++] = 1, y[g++] = 255 & i, y[g++] = i >> 8 & 255, y[g++] = 0;
          }
          var x = false;
          this.addFrame = function(e3, t3, r3, i2, n2, a2) {
            if (x === true && (--g, x = false), a2 = a2 === void 0 ? {} : a2, e3 < 0 || t3 < 0 || 65535 < e3 || 65535 < t3)
              throw new Error("x/y invalid.");
            if (r3 <= 0 || i2 <= 0 || 65535 < r3 || 65535 < i2)
              throw new Error("Width/Height invalid.");
            if (n2.length < r3 * i2)
              throw new Error("Not enough pixels for the frame size.");
            var o2 = true, s2 = a2.palette;
            if (s2 == null && (o2 = false, s2 = b), s2 == null)
              throw new Error("Must supply either a local or global palette.");
            for (var l2 = _(s2), u2 = 0; l2 >>= 1; )
              ++u2;
            l2 = 1 << u2;
            var h = a2.delay === void 0 ? 0 : a2.delay, c = a2.disposal === void 0 ? 0 : a2.disposal;
            if (c < 0 || 3 < c)
              throw new Error("Disposal out of range.");
            var f = false, d = 0;
            if (a2.transparent !== void 0 && a2.transparent !== null && (f = true, (d = a2.transparent) < 0 || l2 <= d))
              throw new Error("Transparent color index.");
            if (c === 0 && !f && h === 0 || (y[g++] = 33, y[g++] = 249, y[g++] = 4, y[g++] = c << 2 | (f === true ? 1 : 0), y[g++] = 255 & h, y[g++] = h >> 8 & 255, y[g++] = d, y[g++] = 0), y[g++] = 44, y[g++] = 255 & e3, y[g++] = e3 >> 8 & 255, y[g++] = 255 & t3, y[g++] = t3 >> 8 & 255, y[g++] = 255 & r3, y[g++] = r3 >> 8 & 255, y[g++] = 255 & i2, y[g++] = i2 >> 8 & 255, y[g++] = o2 === true ? 128 | u2 - 1 : 0, o2 === true)
              for (var p = 0, m = s2.length; p < m; ++p) {
                var v = s2[p];
                y[g++] = v >> 16 & 255, y[g++] = v >> 8 & 255, y[g++] = 255 & v;
              }
            return g = function(t4, r4, e4, i3) {
              t4[r4++] = e4;
              var n3 = r4++, a3 = 1 << e4, o3 = a3 - 1, s3 = 1 + a3, l3 = 1 + s3, u3 = e4 + 1, h2 = 0, c2 = 0;
              function f2(e5) {
                for (; e5 <= h2; )
                  t4[r4++] = 255 & c2, c2 >>= 8, h2 -= 8, r4 === n3 + 256 && (t4[n3] = 255, n3 = r4++);
              }
              function d2(e5) {
                c2 |= e5 << h2, h2 += u3, f2(8);
              }
              var p2 = i3[0] & o3, m2 = {};
              d2(a3);
              for (var v2 = 1, y2 = i3.length; v2 < y2; ++v2) {
                var g2 = i3[v2] & o3, b2 = p2 << 8 | g2, _2 = m2[b2];
                if (_2 === void 0) {
                  for (c2 |= p2 << h2, h2 += u3; 8 <= h2; )
                    t4[r4++] = 255 & c2, c2 >>= 8, h2 -= 8, r4 === n3 + 256 && (t4[n3] = 255, n3 = r4++);
                  l3 === 4096 ? (d2(a3), l3 = 1 + s3, u3 = e4 + 1, m2 = {}) : (1 << u3 <= l3 && ++u3, m2[b2] = l3++), p2 = g2;
                } else
                  p2 = _2;
              }
              d2(p2), d2(s3), f2(1), n3 + 1 === r4 ? t4[n3] = 0 : (t4[n3] = r4 - n3 - 1, t4[r4++] = 0);
              return r4;
            }(y, g, u2 < 2 ? 2 : u2, n2);
          }, this.end = function() {
            return x === false && (y[g++] = 59, x = true), g;
          }, this.getOutputBuffer = function() {
            return y;
          }, this.setOutputBuffer = function(e3) {
            y = e3;
          }, this.getOutputBufferPosition = function() {
            return g;
          }, this.setOutputBufferPosition = function(e3) {
            g = e3;
          };
        }, r.GifReader = function(x) {
          var e2 = 0;
          if (x[e2++] !== 71 || x[e2++] !== 73 || x[e2++] !== 70 || x[e2++] !== 56 || (x[e2++] + 1 & 253) != 56 || x[e2++] !== 97)
            throw new Error("Invalid GIF 87a/89a header.");
          var w = x[e2++] | x[e2++] << 8, t2 = x[e2++] | x[e2++] << 8, r2 = x[e2++], i = r2 >> 7, n = 1 << 1 + (7 & r2);
          x[e2++], x[e2++];
          var a = null, o = null;
          i && (a = e2, e2 += 3 * (o = n));
          var s = true, l = [], u = 0, h = null, c = 0, f = null;
          for (this.width = w, this.height = t2; s && e2 < x.length; )
            switch (x[e2++]) {
              case 33:
                switch (x[e2++]) {
                  case 255:
                    if (x[e2] !== 11 || x[e2 + 1] == 78 && x[e2 + 2] == 69 && x[e2 + 3] == 84 && x[e2 + 4] == 83 && x[e2 + 5] == 67 && x[e2 + 6] == 65 && x[e2 + 7] == 80 && x[e2 + 8] == 69 && x[e2 + 9] == 50 && x[e2 + 10] == 46 && x[e2 + 11] == 48 && x[e2 + 12] == 3 && x[e2 + 13] == 1 && x[e2 + 16] == 0)
                      e2 += 14, f = x[e2++] | x[e2++] << 8, e2++;
                    else
                      for (e2 += 12; ; ) {
                        if (!(0 <= (C = x[e2++])))
                          throw Error("Invalid block size");
                        if (C === 0)
                          break;
                        e2 += C;
                      }
                    break;
                  case 249:
                    if (x[e2++] !== 4 || x[e2 + 4] !== 0)
                      throw new Error("Invalid graphics extension block.");
                    var d = x[e2++];
                    u = x[e2++] | x[e2++] << 8, h = x[e2++], (1 & d) == 0 && (h = null), c = d >> 2 & 7, e2++;
                    break;
                  case 254:
                    for (; ; ) {
                      if (!(0 <= (C = x[e2++])))
                        throw Error("Invalid block size");
                      if (C === 0)
                        break;
                      e2 += C;
                    }
                    break;
                  default:
                    throw new Error("Unknown graphic control label: 0x" + x[e2 - 1].toString(16));
                }
                break;
              case 44:
                var p = x[e2++] | x[e2++] << 8, m = x[e2++] | x[e2++] << 8, v = x[e2++] | x[e2++] << 8, y = x[e2++] | x[e2++] << 8, g = x[e2++], b = g >> 6 & 1, _ = 1 << 1 + (7 & g), S = a, M = o, T = false;
                if (g >> 7) {
                  T = true;
                  S = e2, e2 += 3 * (M = _);
                }
                var E = e2;
                for (e2++; ; ) {
                  var C;
                  if (!(0 <= (C = x[e2++])))
                    throw Error("Invalid block size");
                  if (C === 0)
                    break;
                  e2 += C;
                }
                l.push({x: p, y: m, width: v, height: y, has_local_palette: T, palette_offset: S, palette_size: M, data_offset: E, data_length: e2 - E, transparent_index: h, interlaced: !!b, delay: u, disposal: c});
                break;
              case 59:
                s = false;
                break;
              default:
                throw new Error("Unknown gif block: 0x" + x[e2 - 1].toString(16));
            }
          this.numFrames = function() {
            return l.length;
          }, this.loopCount = function() {
            return f;
          }, this.frameInfo = function(e3) {
            if (e3 < 0 || e3 >= l.length)
              throw new Error("Frame index out of range.");
            return l[e3];
          }, this.decodeAndBlitFrameBGRA = function(e3, t3) {
            var r3 = this.frameInfo(e3), i2 = r3.width * r3.height, n2 = new Uint8Array(i2);
            L(x, r3.data_offset, n2, i2);
            var a2 = r3.palette_offset, o2 = r3.transparent_index;
            o2 === null && (o2 = 256);
            var s2 = r3.width, l2 = w - s2, u2 = s2, h2 = 4 * (r3.y * w + r3.x), c2 = 4 * ((r3.y + r3.height) * w + r3.x), f2 = h2, d2 = 4 * l2;
            r3.interlaced === true && (d2 += 4 * w * 7);
            for (var p2 = 8, m2 = 0, v2 = n2.length; m2 < v2; ++m2) {
              var y2 = n2[m2];
              if (u2 === 0 && (u2 = s2, c2 <= (f2 += d2) && (d2 = 4 * l2 + 4 * w * (p2 - 1), f2 = h2 + (s2 + l2) * (p2 << 1), p2 >>= 1)), y2 === o2)
                f2 += 4;
              else {
                var g2 = x[a2 + 3 * y2], b2 = x[a2 + 3 * y2 + 1], _2 = x[a2 + 3 * y2 + 2];
                t3[f2++] = _2, t3[f2++] = b2, t3[f2++] = g2, t3[f2++] = 255;
              }
              --u2;
            }
          }, this.decodeAndBlitFrameRGBA = function(e3, t3) {
            var r3 = this.frameInfo(e3), i2 = r3.width * r3.height, n2 = new Uint8Array(i2);
            L(x, r3.data_offset, n2, i2);
            var a2 = r3.palette_offset, o2 = r3.transparent_index;
            o2 === null && (o2 = 256);
            var s2 = r3.width, l2 = w - s2, u2 = s2, h2 = 4 * (r3.y * w + r3.x), c2 = 4 * ((r3.y + r3.height) * w + r3.x), f2 = h2, d2 = 4 * l2;
            r3.interlaced === true && (d2 += 4 * w * 7);
            for (var p2 = 8, m2 = 0, v2 = n2.length; m2 < v2; ++m2) {
              var y2 = n2[m2];
              if (u2 === 0 && (u2 = s2, c2 <= (f2 += d2) && (d2 = 4 * l2 + 4 * w * (p2 - 1), f2 = h2 + (s2 + l2) * (p2 << 1), p2 >>= 1)), y2 === o2)
                f2 += 4;
              else {
                var g2 = x[a2 + 3 * y2], b2 = x[a2 + 3 * y2 + 1], _2 = x[a2 + 3 * y2 + 2];
                t3[f2++] = g2, t3[f2++] = b2, t3[f2++] = _2, t3[f2++] = 255;
              }
              --u2;
            }
          };
        };
      } catch (e2) {
      }
    }, {}], 12: [function(jr, t, r) {
      (function(Gr) {
        var e;
        e = this, function(T) {
          function e2(e3) {
            if (this == null)
              throw TypeError();
            var t3 = String(this), r3 = t3.length, i2 = e3 ? Number(e3) : 0;
            if (i2 != i2 && (i2 = 0), !(i2 < 0 || r3 <= i2)) {
              var n2, a2 = t3.charCodeAt(i2);
              return 55296 <= a2 && a2 <= 56319 && i2 + 1 < r3 && 56320 <= (n2 = t3.charCodeAt(i2 + 1)) && n2 <= 57343 ? 1024 * (a2 - 55296) + n2 - 56320 + 65536 : a2;
            }
          }
          var t2;
          String.prototype.codePointAt || ((t2 = function() {
            try {
              var e3 = {}, t3 = Object.defineProperty, r3 = t3(e3, e3, e3) && t3;
            } catch (e4) {
            }
            return r3;
          }()) ? t2(String.prototype, "codePointAt", {value: e2, configurable: true, writable: true}) : String.prototype.codePointAt = e2);
          var l = 0, a = -3;
          function r2() {
            this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
          }
          function o(e3, t3) {
            this.source = e3, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t3, this.destLen = 0, this.ltree = new r2(), this.dtree = new r2();
          }
          var s = new r2(), u = new r2(), h = new Uint8Array(30), c = new Uint16Array(30), f = new Uint8Array(30), d = new Uint16Array(30), p = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), m = new r2(), v = new Uint8Array(320);
          function i(e3, t3, r3, i2) {
            var n2, a2;
            for (n2 = 0; n2 < r3; ++n2)
              e3[n2] = 0;
            for (n2 = 0; n2 < 30 - r3; ++n2)
              e3[n2 + r3] = n2 / r3 | 0;
            for (a2 = i2, n2 = 0; n2 < 30; ++n2)
              t3[n2] = a2, a2 += 1 << e3[n2];
          }
          var y = new Uint16Array(16);
          function g(e3, t3, r3, i2) {
            var n2, a2;
            for (n2 = 0; n2 < 16; ++n2)
              e3.table[n2] = 0;
            for (n2 = 0; n2 < i2; ++n2)
              e3.table[t3[r3 + n2]]++;
            for (n2 = a2 = e3.table[0] = 0; n2 < 16; ++n2)
              y[n2] = a2, a2 += e3.table[n2];
            for (n2 = 0; n2 < i2; ++n2)
              t3[r3 + n2] && (e3.trans[y[t3[r3 + n2]]++] = n2);
          }
          function b(e3) {
            e3.bitcount-- || (e3.tag = e3.source[e3.sourceIndex++], e3.bitcount = 7);
            var t3 = 1 & e3.tag;
            return e3.tag >>>= 1, t3;
          }
          function _(e3, t3, r3) {
            if (!t3)
              return r3;
            for (; e3.bitcount < 24; )
              e3.tag |= e3.source[e3.sourceIndex++] << e3.bitcount, e3.bitcount += 8;
            var i2 = e3.tag & 65535 >>> 16 - t3;
            return e3.tag >>>= t3, e3.bitcount -= t3, i2 + r3;
          }
          function x(e3, t3) {
            for (; e3.bitcount < 24; )
              e3.tag |= e3.source[e3.sourceIndex++] << e3.bitcount, e3.bitcount += 8;
            for (var r3 = 0, i2 = 0, n2 = 0, a2 = e3.tag; i2 = 2 * i2 + (1 & a2), a2 >>>= 1, ++n2, r3 += t3.table[n2], 0 <= (i2 -= t3.table[n2]); )
              ;
            return e3.tag = a2, e3.bitcount -= n2, t3.trans[r3 + i2];
          }
          function w(e3, t3, r3) {
            var i2, n2, a2, o2, s2, l2;
            for (i2 = _(e3, 5, 257), n2 = _(e3, 5, 1), a2 = _(e3, 4, 4), o2 = 0; o2 < 19; ++o2)
              v[o2] = 0;
            for (o2 = 0; o2 < a2; ++o2) {
              var u2 = _(e3, 3, 0);
              v[p[o2]] = u2;
            }
            for (g(m, v, 0, 19), s2 = 0; s2 < i2 + n2; ) {
              var h2 = x(e3, m);
              switch (h2) {
                case 16:
                  var c2 = v[s2 - 1];
                  for (l2 = _(e3, 2, 3); l2; --l2)
                    v[s2++] = c2;
                  break;
                case 17:
                  for (l2 = _(e3, 3, 3); l2; --l2)
                    v[s2++] = 0;
                  break;
                case 18:
                  for (l2 = _(e3, 7, 11); l2; --l2)
                    v[s2++] = 0;
                  break;
                default:
                  v[s2++] = h2;
              }
            }
            g(t3, v, 0, i2), g(r3, v, i2, n2);
          }
          function S(e3, t3, r3) {
            for (; ; ) {
              var i2, n2, a2, o2, s2 = x(e3, t3);
              if (s2 === 256)
                return l;
              if (s2 < 256)
                e3.dest[e3.destLen++] = s2;
              else
                for (i2 = _(e3, h[s2 -= 257], c[s2]), n2 = x(e3, r3), o2 = a2 = e3.destLen - _(e3, f[n2], d[n2]); o2 < a2 + i2; ++o2)
                  e3.dest[e3.destLen++] = e3.dest[o2];
            }
          }
          function M(e3) {
            for (var t3, r3; 8 < e3.bitcount; )
              e3.sourceIndex--, e3.bitcount -= 8;
            if ((t3 = 256 * (t3 = e3.source[e3.sourceIndex + 1]) + e3.source[e3.sourceIndex]) !== (65535 & ~(256 * e3.source[e3.sourceIndex + 3] + e3.source[e3.sourceIndex + 2])))
              return a;
            for (e3.sourceIndex += 4, r3 = t3; r3; --r3)
              e3.dest[e3.destLen++] = e3.source[e3.sourceIndex++];
            return e3.bitcount = 0, l;
          }
          !function(e3, t3) {
            var r3;
            for (r3 = 0; r3 < 7; ++r3)
              e3.table[r3] = 0;
            for (e3.table[7] = 24, e3.table[8] = 152, e3.table[9] = 112, r3 = 0; r3 < 24; ++r3)
              e3.trans[r3] = 256 + r3;
            for (r3 = 0; r3 < 144; ++r3)
              e3.trans[24 + r3] = r3;
            for (r3 = 0; r3 < 8; ++r3)
              e3.trans[168 + r3] = 280 + r3;
            for (r3 = 0; r3 < 112; ++r3)
              e3.trans[176 + r3] = 144 + r3;
            for (r3 = 0; r3 < 5; ++r3)
              t3.table[r3] = 0;
            for (t3.table[5] = 32, r3 = 0; r3 < 32; ++r3)
              t3.trans[r3] = r3;
          }(s, u), i(h, c, 4, 3), i(f, d, 2, 1), h[28] = 0, c[28] = 258;
          var n = function(e3, t3) {
            var r3, i2, n2 = new o(e3, t3);
            do {
              switch (r3 = b(n2), _(n2, 2, 0)) {
                case 0:
                  i2 = M(n2);
                  break;
                case 1:
                  i2 = S(n2, s, u);
                  break;
                case 2:
                  w(n2, n2.ltree, n2.dtree), i2 = S(n2, n2.ltree, n2.dtree);
                  break;
                default:
                  i2 = a;
              }
              if (i2 !== l)
                throw new Error("Data error");
            } while (!r3);
            return n2.destLen < n2.dest.length ? typeof n2.dest.slice == "function" ? n2.dest.slice(0, n2.destLen) : n2.dest.subarray(0, n2.destLen) : n2.dest;
          };
          function E(e3, t3, r3, i2, n2) {
            return Math.pow(1 - n2, 3) * e3 + 3 * Math.pow(1 - n2, 2) * n2 * t3 + 3 * (1 - n2) * Math.pow(n2, 2) * r3 + Math.pow(n2, 3) * i2;
          }
          function C() {
            this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
          }
          function I() {
            this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
          }
          function L(e3) {
            throw new Error(e3);
          }
          function O(e3, t3) {
            e3 || L(t3);
          }
          C.prototype.isEmpty = function() {
            return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
          }, C.prototype.addPoint = function(e3, t3) {
            typeof e3 == "number" && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e3, this.x2 = e3), e3 < this.x1 && (this.x1 = e3), e3 > this.x2 && (this.x2 = e3)), typeof t3 == "number" && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t3, this.y2 = t3), t3 < this.y1 && (this.y1 = t3), t3 > this.y2 && (this.y2 = t3));
          }, C.prototype.addX = function(e3) {
            this.addPoint(e3, null);
          }, C.prototype.addY = function(e3) {
            this.addPoint(null, e3);
          }, C.prototype.addBezier = function(e3, t3, r3, i2, n2, a2, o2, s2) {
            var l2 = this, u2 = [e3, t3], h2 = [r3, i2], c2 = [n2, a2], f2 = [o2, s2];
            this.addPoint(e3, t3), this.addPoint(o2, s2);
            for (var d2 = 0; d2 <= 1; d2++) {
              var p2 = 6 * u2[d2] - 12 * h2[d2] + 6 * c2[d2], m2 = -3 * u2[d2] + 9 * h2[d2] - 9 * c2[d2] + 3 * f2[d2], v2 = 3 * h2[d2] - 3 * u2[d2];
              if (m2 != 0) {
                var y2 = Math.pow(p2, 2) - 4 * v2 * m2;
                if (!(y2 < 0)) {
                  var g2 = (-p2 + Math.sqrt(y2)) / (2 * m2);
                  0 < g2 && g2 < 1 && (d2 === 0 && l2.addX(E(u2[d2], h2[d2], c2[d2], f2[d2], g2)), d2 === 1 && l2.addY(E(u2[d2], h2[d2], c2[d2], f2[d2], g2)));
                  var b2 = (-p2 - Math.sqrt(y2)) / (2 * m2);
                  0 < b2 && b2 < 1 && (d2 === 0 && l2.addX(E(u2[d2], h2[d2], c2[d2], f2[d2], b2)), d2 === 1 && l2.addY(E(u2[d2], h2[d2], c2[d2], f2[d2], b2)));
                }
              } else {
                if (p2 == 0)
                  continue;
                var _2 = -v2 / p2;
                0 < _2 && _2 < 1 && (d2 === 0 && l2.addX(E(u2[d2], h2[d2], c2[d2], f2[d2], _2)), d2 === 1 && l2.addY(E(u2[d2], h2[d2], c2[d2], f2[d2], _2)));
              }
            }
          }, C.prototype.addQuad = function(e3, t3, r3, i2, n2, a2) {
            var o2 = e3 + 2 / 3 * (r3 - e3), s2 = t3 + 2 / 3 * (i2 - t3), l2 = o2 + 1 / 3 * (n2 - e3), u2 = s2 + 1 / 3 * (a2 - t3);
            this.addBezier(e3, t3, o2, s2, l2, u2, n2, a2);
          }, I.prototype.moveTo = function(e3, t3) {
            this.commands.push({type: "M", x: e3, y: t3});
          }, I.prototype.lineTo = function(e3, t3) {
            this.commands.push({type: "L", x: e3, y: t3});
          }, I.prototype.curveTo = I.prototype.bezierCurveTo = function(e3, t3, r3, i2, n2, a2) {
            this.commands.push({type: "C", x1: e3, y1: t3, x2: r3, y2: i2, x: n2, y: a2});
          }, I.prototype.quadTo = I.prototype.quadraticCurveTo = function(e3, t3, r3, i2) {
            this.commands.push({type: "Q", x1: e3, y1: t3, x: r3, y: i2});
          }, I.prototype.close = I.prototype.closePath = function() {
            this.commands.push({type: "Z"});
          }, I.prototype.extend = function(e3) {
            if (e3.commands)
              e3 = e3.commands;
            else if (e3 instanceof C) {
              var t3 = e3;
              return this.moveTo(t3.x1, t3.y1), this.lineTo(t3.x2, t3.y1), this.lineTo(t3.x2, t3.y2), this.lineTo(t3.x1, t3.y2), void this.close();
            }
            Array.prototype.push.apply(this.commands, e3);
          }, I.prototype.getBoundingBox = function() {
            for (var e3 = new C(), t3 = 0, r3 = 0, i2 = 0, n2 = 0, a2 = 0; a2 < this.commands.length; a2++) {
              var o2 = this.commands[a2];
              switch (o2.type) {
                case "M":
                  e3.addPoint(o2.x, o2.y), t3 = i2 = o2.x, r3 = n2 = o2.y;
                  break;
                case "L":
                  e3.addPoint(o2.x, o2.y), i2 = o2.x, n2 = o2.y;
                  break;
                case "Q":
                  e3.addQuad(i2, n2, o2.x1, o2.y1, o2.x, o2.y), i2 = o2.x, n2 = o2.y;
                  break;
                case "C":
                  e3.addBezier(i2, n2, o2.x1, o2.y1, o2.x2, o2.y2, o2.x, o2.y), i2 = o2.x, n2 = o2.y;
                  break;
                case "Z":
                  i2 = t3, n2 = r3;
                  break;
                default:
                  throw new Error("Unexpected path command " + o2.type);
              }
            }
            return e3.isEmpty() && e3.addPoint(0, 0), e3;
          }, I.prototype.draw = function(e3) {
            e3.beginPath();
            for (var t3 = 0; t3 < this.commands.length; t3 += 1) {
              var r3 = this.commands[t3];
              r3.type === "M" ? e3.moveTo(r3.x, r3.y) : r3.type === "L" ? e3.lineTo(r3.x, r3.y) : r3.type === "C" ? e3.bezierCurveTo(r3.x1, r3.y1, r3.x2, r3.y2, r3.x, r3.y) : r3.type === "Q" ? e3.quadraticCurveTo(r3.x1, r3.y1, r3.x, r3.y) : r3.type === "Z" && e3.closePath();
            }
            this.fill && (e3.fillStyle = this.fill, e3.fill()), this.stroke && (e3.strokeStyle = this.stroke, e3.lineWidth = this.strokeWidth, e3.stroke());
          }, I.prototype.toPathData = function(a2) {
            function e3() {
              for (var e4, t4 = arguments, r4 = "", i3 = 0; i3 < arguments.length; i3 += 1) {
                var n2 = t4[i3];
                0 <= n2 && 0 < i3 && (r4 += " "), r4 += (e4 = n2, Math.round(e4) === e4 ? "" + Math.round(e4) : e4.toFixed(a2));
              }
              return r4;
            }
            a2 = a2 !== void 0 ? a2 : 2;
            for (var t3 = "", r3 = 0; r3 < this.commands.length; r3 += 1) {
              var i2 = this.commands[r3];
              i2.type === "M" ? t3 += "M" + e3(i2.x, i2.y) : i2.type === "L" ? t3 += "L" + e3(i2.x, i2.y) : i2.type === "C" ? t3 += "C" + e3(i2.x1, i2.y1, i2.x2, i2.y2, i2.x, i2.y) : i2.type === "Q" ? t3 += "Q" + e3(i2.x1, i2.y1, i2.x, i2.y) : i2.type === "Z" && (t3 += "Z");
            }
            return t3;
          }, I.prototype.toSVG = function(e3) {
            var t3 = '<path d="';
            return t3 += this.toPathData(e3), t3 += '"', this.fill && this.fill !== "black" && (this.fill === null ? t3 += ' fill="none"' : t3 += ' fill="' + this.fill + '"'), this.stroke && (t3 += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t3 += "/>";
          }, I.prototype.toDOMElement = function(e3) {
            var t3 = this.toPathData(e3), r3 = document.createElementNS("http://www.w3.org/2000/svg", "path");
            return r3.setAttribute("d", t3), r3;
          };
          var P = {fail: L, argument: O, assert: O}, R = 2147483648, D = {}, k = {}, A = {};
          function U(e3) {
            return function() {
              return e3;
            };
          }
          k.BYTE = function(e3) {
            return P.argument(0 <= e3 && e3 <= 255, "Byte value should be between 0 and 255."), [e3];
          }, A.BYTE = U(1), k.CHAR = function(e3) {
            return [e3.charCodeAt(0)];
          }, A.CHAR = U(1), k.CHARARRAY = function(e3) {
            for (var t3 = [], r3 = 0; r3 < e3.length; r3 += 1)
              t3[r3] = e3.charCodeAt(r3);
            return t3;
          }, A.CHARARRAY = function(e3) {
            return e3.length;
          }, k.USHORT = function(e3) {
            return [e3 >> 8 & 255, 255 & e3];
          }, A.USHORT = U(2), k.SHORT = function(e3) {
            return 32768 <= e3 && (e3 = -(65536 - e3)), [e3 >> 8 & 255, 255 & e3];
          }, A.SHORT = U(2), k.UINT24 = function(e3) {
            return [e3 >> 16 & 255, e3 >> 8 & 255, 255 & e3];
          }, A.UINT24 = U(3), k.ULONG = function(e3) {
            return [e3 >> 24 & 255, e3 >> 16 & 255, e3 >> 8 & 255, 255 & e3];
          }, A.ULONG = U(4), k.LONG = function(e3) {
            return R <= e3 && (e3 = -(2 * R - e3)), [e3 >> 24 & 255, e3 >> 16 & 255, e3 >> 8 & 255, 255 & e3];
          }, A.LONG = U(4), k.FIXED = k.ULONG, A.FIXED = A.ULONG, k.FWORD = k.SHORT, A.FWORD = A.SHORT, k.UFWORD = k.USHORT, A.UFWORD = A.USHORT, k.LONGDATETIME = function(e3) {
            return [0, 0, 0, 0, e3 >> 24 & 255, e3 >> 16 & 255, e3 >> 8 & 255, 255 & e3];
          }, A.LONGDATETIME = U(8), k.TAG = function(e3) {
            return P.argument(e3.length === 4, "Tag should be exactly 4 ASCII characters."), [e3.charCodeAt(0), e3.charCodeAt(1), e3.charCodeAt(2), e3.charCodeAt(3)];
          }, A.TAG = U(4), k.Card8 = k.BYTE, A.Card8 = A.BYTE, k.Card16 = k.USHORT, A.Card16 = A.USHORT, k.OffSize = k.BYTE, A.OffSize = A.BYTE, k.SID = k.USHORT, A.SID = A.USHORT, k.NUMBER = function(e3) {
            return -107 <= e3 && e3 <= 107 ? [e3 + 139] : 108 <= e3 && e3 <= 1131 ? [247 + ((e3 -= 108) >> 8), 255 & e3] : -1131 <= e3 && e3 <= -108 ? [251 + ((e3 = -e3 - 108) >> 8), 255 & e3] : -32768 <= e3 && e3 <= 32767 ? k.NUMBER16(e3) : k.NUMBER32(e3);
          }, A.NUMBER = function(e3) {
            return k.NUMBER(e3).length;
          }, k.NUMBER16 = function(e3) {
            return [28, e3 >> 8 & 255, 255 & e3];
          }, A.NUMBER16 = U(3), k.NUMBER32 = function(e3) {
            return [29, e3 >> 24 & 255, e3 >> 16 & 255, e3 >> 8 & 255, 255 & e3];
          }, A.NUMBER32 = U(5), k.REAL = function(e3) {
            var t3 = e3.toString(), r3 = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t3);
            if (r3) {
              var i2 = parseFloat("1e" + ((r3[2] ? +r3[2] : 0) + r3[1].length));
              t3 = (Math.round(e3 * i2) / i2).toString();
            }
            for (var n2 = "", a2 = 0, o2 = t3.length; a2 < o2; a2 += 1) {
              var s2 = t3[a2];
              n2 += s2 === "e" ? t3[++a2] === "-" ? "c" : "b" : s2 === "." ? "a" : s2 === "-" ? "e" : s2;
            }
            for (var l2 = [30], u2 = 0, h2 = (n2 += 1 & n2.length ? "f" : "ff").length; u2 < h2; u2 += 2)
              l2.push(parseInt(n2.substr(u2, 2), 16));
            return l2;
          }, A.REAL = function(e3) {
            return k.REAL(e3).length;
          }, k.NAME = k.CHARARRAY, A.NAME = A.CHARARRAY, k.STRING = k.CHARARRAY, A.STRING = A.CHARARRAY, D.UTF8 = function(e3, t3, r3) {
            for (var i2 = [], n2 = r3, a2 = 0; a2 < n2; a2++, t3 += 1)
              i2[a2] = e3.getUint8(t3);
            return String.fromCharCode.apply(null, i2);
          }, D.UTF16 = function(e3, t3, r3) {
            for (var i2 = [], n2 = r3 / 2, a2 = 0; a2 < n2; a2++, t3 += 2)
              i2[a2] = e3.getUint16(t3);
            return String.fromCharCode.apply(null, i2);
          }, k.UTF16 = function(e3) {
            for (var t3 = [], r3 = 0; r3 < e3.length; r3 += 1) {
              var i2 = e3.charCodeAt(r3);
              t3[t3.length] = i2 >> 8 & 255, t3[t3.length] = 255 & i2;
            }
            return t3;
          }, A.UTF16 = function(e3) {
            return 2 * e3.length;
          };
          var N = {"x-mac-croatian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ", "x-mac-cyrillic": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю", "x-mac-gaelic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ", "x-mac-greek": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­", "x-mac-icelandic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-inuit": "ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł", "x-mac-ce": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ", macintosh: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-romanian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-turkish": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};
          D.MACSTRING = function(e3, t3, r3, i2) {
            var n2 = N[i2];
            if (n2 !== void 0) {
              for (var a2 = "", o2 = 0; o2 < r3; o2++) {
                var s2 = e3.getUint8(t3 + o2);
                a2 += s2 <= 127 ? String.fromCharCode(s2) : n2[127 & s2];
              }
              return a2;
            }
          };
          var F, B = typeof WeakMap == "function" && new WeakMap();
          function G(e3) {
            return -128 <= e3 && e3 <= 127;
          }
          function j(e3, t3, r3) {
            for (var i2 = 0, n2 = e3.length; t3 < n2 && i2 < 64 && e3[t3] === 0; )
              ++t3, ++i2;
            return r3.push(128 | i2 - 1), t3;
          }
          function V(e3, t3, r3) {
            for (var i2 = 0, n2 = e3.length, a2 = t3; a2 < n2 && i2 < 64; ) {
              var o2 = e3[a2];
              if (!G(o2))
                break;
              if (o2 === 0 && a2 + 1 < n2 && e3[a2 + 1] === 0)
                break;
              ++a2, ++i2;
            }
            r3.push(i2 - 1);
            for (var s2 = t3; s2 < a2; ++s2)
              r3.push(e3[s2] + 256 & 255);
            return a2;
          }
          function z(e3, t3, r3) {
            for (var i2 = 0, n2 = e3.length, a2 = t3; a2 < n2 && i2 < 64; ) {
              var o2 = e3[a2];
              if (o2 === 0)
                break;
              if (G(o2) && a2 + 1 < n2 && G(e3[a2 + 1]))
                break;
              ++a2, ++i2;
            }
            r3.push(64 | i2 - 1);
            for (var s2 = t3; s2 < a2; ++s2) {
              var l2 = e3[s2];
              r3.push(l2 + 65536 >> 8 & 255, l2 + 256 & 255);
            }
            return a2;
          }
          k.MACSTRING = function(e3, t3) {
            var r3 = function(e4) {
              if (!F)
                for (var t4 in F = {}, N)
                  F[t4] = new String(t4);
              var r4 = F[e4];
              if (r4 !== void 0) {
                if (B) {
                  var i3 = B.get(r4);
                  if (i3 !== void 0)
                    return i3;
                }
                var n3 = N[e4];
                if (n3 !== void 0) {
                  for (var a3 = {}, o2 = 0; o2 < n3.length; o2++)
                    a3[n3.charCodeAt(o2)] = o2 + 128;
                  return B && B.set(r4, a3), a3;
                }
              }
            }(t3);
            if (r3 !== void 0) {
              for (var i2 = [], n2 = 0; n2 < e3.length; n2++) {
                var a2 = e3.charCodeAt(n2);
                if (128 <= a2 && (a2 = r3[a2]) === void 0)
                  return;
                i2[n2] = a2;
              }
              return i2;
            }
          }, A.MACSTRING = function(e3, t3) {
            var r3 = k.MACSTRING(e3, t3);
            return r3 !== void 0 ? r3.length : 0;
          }, k.VARDELTAS = function(e3) {
            for (var t3 = 0, r3 = []; t3 < e3.length; ) {
              var i2 = e3[t3];
              t3 = i2 === 0 ? j(e3, t3, r3) : -128 <= i2 && i2 <= 127 ? V(e3, t3, r3) : z(e3, t3, r3);
            }
            return r3;
          }, k.INDEX = function(e3) {
            for (var t3 = 1, r3 = [t3], i2 = [], n2 = 0; n2 < e3.length; n2 += 1) {
              var a2 = k.OBJECT(e3[n2]);
              Array.prototype.push.apply(i2, a2), t3 += a2.length, r3.push(t3);
            }
            if (i2.length === 0)
              return [0, 0];
            for (var o2 = [], s2 = 1 + Math.floor(Math.log(t3) / Math.log(2)) / 8 | 0, l2 = [void 0, k.BYTE, k.USHORT, k.UINT24, k.ULONG][s2], u2 = 0; u2 < r3.length; u2 += 1) {
              var h2 = l2(r3[u2]);
              Array.prototype.push.apply(o2, h2);
            }
            return Array.prototype.concat(k.Card16(e3.length), k.OffSize(s2), o2, i2);
          }, A.INDEX = function(e3) {
            return k.INDEX(e3).length;
          }, k.DICT = function(e3) {
            for (var t3 = [], r3 = Object.keys(e3), i2 = r3.length, n2 = 0; n2 < i2; n2 += 1) {
              var a2 = parseInt(r3[n2], 0), o2 = e3[a2];
              t3 = (t3 = t3.concat(k.OPERAND(o2.value, o2.type))).concat(k.OPERATOR(a2));
            }
            return t3;
          }, A.DICT = function(e3) {
            return k.DICT(e3).length;
          }, k.OPERATOR = function(e3) {
            return e3 < 1200 ? [e3] : [12, e3 - 1200];
          }, k.OPERAND = function(e3, t3) {
            var r3 = [];
            if (Array.isArray(t3))
              for (var i2 = 0; i2 < t3.length; i2 += 1)
                P.argument(e3.length === t3.length, "Not enough arguments given for type" + t3), r3 = r3.concat(k.OPERAND(e3[i2], t3[i2]));
            else if (t3 === "SID")
              r3 = r3.concat(k.NUMBER(e3));
            else if (t3 === "offset")
              r3 = r3.concat(k.NUMBER32(e3));
            else if (t3 === "number")
              r3 = r3.concat(k.NUMBER(e3));
            else {
              if (t3 !== "real")
                throw new Error("Unknown operand type " + t3);
              r3 = r3.concat(k.REAL(e3));
            }
            return r3;
          }, k.OP = k.BYTE, A.OP = A.BYTE;
          var H = typeof WeakMap == "function" && new WeakMap();
          function W(e3, t3, r3) {
            for (var i2 = 0; i2 < t3.length; i2 += 1) {
              var n2 = t3[i2];
              this[n2.name] = n2.value;
            }
            if (this.tableName = e3, this.fields = t3, r3)
              for (var a2 = Object.keys(r3), o2 = 0; o2 < a2.length; o2 += 1) {
                var s2 = a2[o2], l2 = r3[s2];
                this[s2] !== void 0 && (this[s2] = l2);
              }
          }
          function q(e3, t3, r3) {
            r3 === void 0 && (r3 = t3.length);
            var i2 = new Array(t3.length + 1);
            i2[0] = {name: e3 + "Count", type: "USHORT", value: r3};
            for (var n2 = 0; n2 < t3.length; n2++)
              i2[n2 + 1] = {name: e3 + n2, type: "USHORT", value: t3[n2]};
            return i2;
          }
          function X(e3, t3, r3) {
            var i2 = t3.length, n2 = new Array(i2 + 1);
            n2[0] = {name: e3 + "Count", type: "USHORT", value: i2};
            for (var a2 = 0; a2 < i2; a2++)
              n2[a2 + 1] = {name: e3 + a2, type: "TABLE", value: r3(t3[a2], a2)};
            return n2;
          }
          function Y(e3, t3, r3) {
            var i2 = t3.length, n2 = [];
            n2[0] = {name: e3 + "Count", type: "USHORT", value: i2};
            for (var a2 = 0; a2 < i2; a2++)
              n2 = n2.concat(r3(t3[a2], a2));
            return n2;
          }
          function Z(e3) {
            e3.format === 1 ? W.call(this, "coverageTable", [{name: "coverageFormat", type: "USHORT", value: 1}].concat(q("glyph", e3.glyphs))) : P.assert(false, "Can't create coverage table format 2 yet.");
          }
          function Q(e3) {
            W.call(this, "scriptListTable", Y("scriptRecord", e3, function(e4, t3) {
              var r3 = e4.script, i2 = r3.defaultLangSys;
              return P.assert(!!i2, "Unable to write GSUB: script " + e4.tag + " has no default language system."), [{name: "scriptTag" + t3, type: "TAG", value: e4.tag}, {name: "script" + t3, type: "TABLE", value: new W("scriptTable", [{name: "defaultLangSys", type: "TABLE", value: new W("defaultLangSys", [{name: "lookupOrder", type: "USHORT", value: 0}, {name: "reqFeatureIndex", type: "USHORT", value: i2.reqFeatureIndex}].concat(q("featureIndex", i2.featureIndexes)))}].concat(Y("langSys", r3.langSysRecords, function(e5, t4) {
                var r4 = e5.langSys;
                return [{name: "langSysTag" + t4, type: "TAG", value: e5.tag}, {name: "langSys" + t4, type: "TABLE", value: new W("langSys", [{name: "lookupOrder", type: "USHORT", value: 0}, {name: "reqFeatureIndex", type: "USHORT", value: r4.reqFeatureIndex}].concat(q("featureIndex", r4.featureIndexes)))}];
              })))}];
            }));
          }
          function K(e3) {
            W.call(this, "featureListTable", Y("featureRecord", e3, function(e4, t3) {
              var r3 = e4.feature;
              return [{name: "featureTag" + t3, type: "TAG", value: e4.tag}, {name: "feature" + t3, type: "TABLE", value: new W("featureTable", [{name: "featureParams", type: "USHORT", value: r3.featureParams}].concat(q("lookupListIndex", r3.lookupListIndexes)))}];
            }));
          }
          function J(e3, r3) {
            W.call(this, "lookupListTable", X("lookup", e3, function(e4) {
              var t3 = r3[e4.lookupType];
              return P.assert(!!t3, "Unable to write GSUB lookup type " + e4.lookupType + " tables."), new W("lookupTable", [{name: "lookupType", type: "USHORT", value: e4.lookupType}, {name: "lookupFlag", type: "USHORT", value: e4.lookupFlag}].concat(X("subtable", e4.subtables, t3)));
            }));
          }
          k.CHARSTRING = function(e3) {
            if (H) {
              var t3 = H.get(e3);
              if (t3 !== void 0)
                return t3;
            }
            for (var r3 = [], i2 = e3.length, n2 = 0; n2 < i2; n2 += 1) {
              var a2 = e3[n2];
              r3 = r3.concat(k[a2.type](a2.value));
            }
            return H && H.set(e3, r3), r3;
          }, A.CHARSTRING = function(e3) {
            return k.CHARSTRING(e3).length;
          }, k.OBJECT = function(e3) {
            var t3 = k[e3.type];
            return P.argument(t3 !== void 0, "No encoding function for type " + e3.type), t3(e3.value);
          }, A.OBJECT = function(e3) {
            var t3 = A[e3.type];
            return P.argument(t3 !== void 0, "No sizeOf function for type " + e3.type), t3(e3.value);
          }, k.TABLE = function(e3) {
            for (var t3 = [], r3 = e3.fields.length, i2 = [], n2 = [], a2 = 0; a2 < r3; a2 += 1) {
              var o2 = e3.fields[a2], s2 = k[o2.type];
              P.argument(s2 !== void 0, "No encoding function for field type " + o2.type + " (" + o2.name + ")");
              var l2 = e3[o2.name];
              l2 === void 0 && (l2 = o2.value);
              var u2 = s2(l2);
              o2.type === "TABLE" ? (n2.push(t3.length), t3 = t3.concat([0, 0]), i2.push(u2)) : t3 = t3.concat(u2);
            }
            for (var h2 = 0; h2 < i2.length; h2 += 1) {
              var c2 = n2[h2], f2 = t3.length;
              P.argument(f2 < 65536, "Table " + e3.tableName + " too big."), t3[c2] = f2 >> 8, t3[c2 + 1] = 255 & f2, t3 = t3.concat(i2[h2]);
            }
            return t3;
          }, A.TABLE = function(e3) {
            for (var t3 = 0, r3 = e3.fields.length, i2 = 0; i2 < r3; i2 += 1) {
              var n2 = e3.fields[i2], a2 = A[n2.type];
              P.argument(a2 !== void 0, "No sizeOf function for field type " + n2.type + " (" + n2.name + ")");
              var o2 = e3[n2.name];
              o2 === void 0 && (o2 = n2.value), t3 += a2(o2), n2.type === "TABLE" && (t3 += 2);
            }
            return t3;
          }, k.RECORD = k.TABLE, A.RECORD = A.TABLE, k.LITERAL = function(e3) {
            return e3;
          }, A.LITERAL = function(e3) {
            return e3.length;
          }, W.prototype.encode = function() {
            return k.TABLE(this);
          }, W.prototype.sizeOf = function() {
            return A.TABLE(this);
          };
          var $ = {Table: W, Record: W, Coverage: (Z.prototype = Object.create(W.prototype)).constructor = Z, ScriptList: (Q.prototype = Object.create(W.prototype)).constructor = Q, FeatureList: (K.prototype = Object.create(W.prototype)).constructor = K, LookupList: (J.prototype = Object.create(W.prototype)).constructor = J, ushortList: q, tableList: X, recordList: Y};
          function ee(e3, t3) {
            return e3.getUint8(t3);
          }
          function te(e3, t3) {
            return e3.getUint16(t3, false);
          }
          function re(e3, t3) {
            return e3.getUint32(t3, false);
          }
          function ie(e3, t3) {
            return e3.getInt16(t3, false) + e3.getUint16(t3 + 2, false) / 65535;
          }
          var ne = {byte: 1, uShort: 2, short: 2, uLong: 4, fixed: 4, longDateTime: 8, tag: 4};
          function ae(e3, t3) {
            this.data = e3, this.offset = t3, this.relativeOffset = 0;
          }
          ae.prototype.parseByte = function() {
            var e3 = this.data.getUint8(this.offset + this.relativeOffset);
            return this.relativeOffset += 1, e3;
          }, ae.prototype.parseChar = function() {
            var e3 = this.data.getInt8(this.offset + this.relativeOffset);
            return this.relativeOffset += 1, e3;
          }, ae.prototype.parseCard8 = ae.prototype.parseByte, ae.prototype.parseCard16 = ae.prototype.parseUShort = function() {
            var e3 = this.data.getUint16(this.offset + this.relativeOffset);
            return this.relativeOffset += 2, e3;
          }, ae.prototype.parseSID = ae.prototype.parseUShort, ae.prototype.parseOffset16 = ae.prototype.parseUShort, ae.prototype.parseShort = function() {
            var e3 = this.data.getInt16(this.offset + this.relativeOffset);
            return this.relativeOffset += 2, e3;
          }, ae.prototype.parseF2Dot14 = function() {
            var e3 = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
            return this.relativeOffset += 2, e3;
          }, ae.prototype.parseOffset32 = ae.prototype.parseULong = function() {
            var e3 = re(this.data, this.offset + this.relativeOffset);
            return this.relativeOffset += 4, e3;
          }, ae.prototype.parseFixed = function() {
            var e3 = ie(this.data, this.offset + this.relativeOffset);
            return this.relativeOffset += 4, e3;
          }, ae.prototype.parseString = function(e3) {
            var t3 = this.data, r3 = this.offset + this.relativeOffset, i2 = "";
            this.relativeOffset += e3;
            for (var n2 = 0; n2 < e3; n2++)
              i2 += String.fromCharCode(t3.getUint8(r3 + n2));
            return i2;
          }, ae.prototype.parseTag = function() {
            return this.parseString(4);
          }, ae.prototype.parseLongDateTime = function() {
            var e3 = re(this.data, this.offset + this.relativeOffset + 4);
            return e3 -= 2082844800, this.relativeOffset += 8, e3;
          }, ae.prototype.parseVersion = function(e3) {
            var t3 = te(this.data, this.offset + this.relativeOffset), r3 = te(this.data, this.offset + this.relativeOffset + 2);
            return this.relativeOffset += 4, e3 === void 0 && (e3 = 4096), t3 + r3 / e3 / 10;
          }, ae.prototype.skip = function(e3, t3) {
            t3 === void 0 && (t3 = 1), this.relativeOffset += ne[e3] * t3;
          }, ae.prototype.parseULongList = function(e3) {
            e3 === void 0 && (e3 = this.parseULong());
            for (var t3 = new Array(e3), r3 = this.data, i2 = this.offset + this.relativeOffset, n2 = 0; n2 < e3; n2++)
              t3[n2] = r3.getUint32(i2), i2 += 4;
            return this.relativeOffset += 4 * e3, t3;
          }, ae.prototype.parseOffset16List = ae.prototype.parseUShortList = function(e3) {
            e3 === void 0 && (e3 = this.parseUShort());
            for (var t3 = new Array(e3), r3 = this.data, i2 = this.offset + this.relativeOffset, n2 = 0; n2 < e3; n2++)
              t3[n2] = r3.getUint16(i2), i2 += 2;
            return this.relativeOffset += 2 * e3, t3;
          }, ae.prototype.parseShortList = function(e3) {
            for (var t3 = new Array(e3), r3 = this.data, i2 = this.offset + this.relativeOffset, n2 = 0; n2 < e3; n2++)
              t3[n2] = r3.getInt16(i2), i2 += 2;
            return this.relativeOffset += 2 * e3, t3;
          }, ae.prototype.parseByteList = function(e3) {
            for (var t3 = new Array(e3), r3 = this.data, i2 = this.offset + this.relativeOffset, n2 = 0; n2 < e3; n2++)
              t3[n2] = r3.getUint8(i2++);
            return this.relativeOffset += e3, t3;
          }, ae.prototype.parseList = function(e3, t3) {
            t3 || (t3 = e3, e3 = this.parseUShort());
            for (var r3 = new Array(e3), i2 = 0; i2 < e3; i2++)
              r3[i2] = t3.call(this);
            return r3;
          }, ae.prototype.parseList32 = function(e3, t3) {
            t3 || (t3 = e3, e3 = this.parseULong());
            for (var r3 = new Array(e3), i2 = 0; i2 < e3; i2++)
              r3[i2] = t3.call(this);
            return r3;
          }, ae.prototype.parseRecordList = function(e3, t3) {
            t3 || (t3 = e3, e3 = this.parseUShort());
            for (var r3 = new Array(e3), i2 = Object.keys(t3), n2 = 0; n2 < e3; n2++) {
              for (var a2 = {}, o2 = 0; o2 < i2.length; o2++) {
                var s2 = i2[o2], l2 = t3[s2];
                a2[s2] = l2.call(this);
              }
              r3[n2] = a2;
            }
            return r3;
          }, ae.prototype.parseRecordList32 = function(e3, t3) {
            t3 || (t3 = e3, e3 = this.parseULong());
            for (var r3 = new Array(e3), i2 = Object.keys(t3), n2 = 0; n2 < e3; n2++) {
              for (var a2 = {}, o2 = 0; o2 < i2.length; o2++) {
                var s2 = i2[o2], l2 = t3[s2];
                a2[s2] = l2.call(this);
              }
              r3[n2] = a2;
            }
            return r3;
          }, ae.prototype.parseStruct = function(e3) {
            if (typeof e3 == "function")
              return e3.call(this);
            for (var t3 = Object.keys(e3), r3 = {}, i2 = 0; i2 < t3.length; i2++) {
              var n2 = t3[i2], a2 = e3[n2];
              r3[n2] = a2.call(this);
            }
            return r3;
          }, ae.prototype.parseValueRecord = function(e3) {
            if (e3 === void 0 && (e3 = this.parseUShort()), e3 !== 0) {
              var t3 = {};
              return 1 & e3 && (t3.xPlacement = this.parseShort()), 2 & e3 && (t3.yPlacement = this.parseShort()), 4 & e3 && (t3.xAdvance = this.parseShort()), 8 & e3 && (t3.yAdvance = this.parseShort()), 16 & e3 && (t3.xPlaDevice = void 0, this.parseShort()), 32 & e3 && (t3.yPlaDevice = void 0, this.parseShort()), 64 & e3 && (t3.xAdvDevice = void 0, this.parseShort()), 128 & e3 && (t3.yAdvDevice = void 0, this.parseShort()), t3;
            }
          }, ae.prototype.parseValueRecordList = function() {
            for (var e3 = this.parseUShort(), t3 = this.parseUShort(), r3 = new Array(t3), i2 = 0; i2 < t3; i2++)
              r3[i2] = this.parseValueRecord(e3);
            return r3;
          }, ae.prototype.parsePointer = function(e3) {
            var t3 = this.parseOffset16();
            if (0 < t3)
              return new ae(this.data, this.offset + t3).parseStruct(e3);
          }, ae.prototype.parsePointer32 = function(e3) {
            var t3 = this.parseOffset32();
            if (0 < t3)
              return new ae(this.data, this.offset + t3).parseStruct(e3);
          }, ae.prototype.parseListOfLists = function(e3) {
            for (var t3 = this, r3 = this.parseOffset16List(), i2 = r3.length, n2 = this.relativeOffset, a2 = new Array(i2), o2 = 0; o2 < i2; o2++) {
              var s2 = r3[o2];
              if (s2 !== 0)
                if (t3.relativeOffset = s2, e3) {
                  for (var l2 = t3.parseOffset16List(), u2 = new Array(l2.length), h2 = 0; h2 < l2.length; h2++)
                    t3.relativeOffset = s2 + l2[h2], u2[h2] = e3.call(t3);
                  a2[o2] = u2;
                } else
                  a2[o2] = t3.parseUShortList();
              else
                a2[o2] = void 0;
            }
            return this.relativeOffset = n2, a2;
          }, ae.prototype.parseCoverage = function() {
            var e3 = this.offset + this.relativeOffset, t3 = this.parseUShort(), r3 = this.parseUShort();
            if (t3 === 1)
              return {format: 1, glyphs: this.parseUShortList(r3)};
            if (t3 !== 2)
              throw new Error("0x" + e3.toString(16) + ": Coverage format must be 1 or 2.");
            for (var i2 = new Array(r3), n2 = 0; n2 < r3; n2++)
              i2[n2] = {start: this.parseUShort(), end: this.parseUShort(), index: this.parseUShort()};
            return {format: 2, ranges: i2};
          }, ae.prototype.parseClassDef = function() {
            var e3 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            if (t3 === 1)
              return {format: 1, startGlyph: this.parseUShort(), classes: this.parseUShortList()};
            if (t3 === 2)
              return {format: 2, ranges: this.parseRecordList({start: ae.uShort, end: ae.uShort, classId: ae.uShort})};
            throw new Error("0x" + e3.toString(16) + ": ClassDef format must be 1 or 2.");
          }, ae.list = function(e3, t3) {
            return function() {
              return this.parseList(e3, t3);
            };
          }, ae.list32 = function(e3, t3) {
            return function() {
              return this.parseList32(e3, t3);
            };
          }, ae.recordList = function(e3, t3) {
            return function() {
              return this.parseRecordList(e3, t3);
            };
          }, ae.recordList32 = function(e3, t3) {
            return function() {
              return this.parseRecordList32(e3, t3);
            };
          }, ae.pointer = function(e3) {
            return function() {
              return this.parsePointer(e3);
            };
          }, ae.pointer32 = function(e3) {
            return function() {
              return this.parsePointer32(e3);
            };
          }, ae.tag = ae.prototype.parseTag, ae.byte = ae.prototype.parseByte, ae.uShort = ae.offset16 = ae.prototype.parseUShort, ae.uShortList = ae.prototype.parseUShortList, ae.uLong = ae.offset32 = ae.prototype.parseULong, ae.uLongList = ae.prototype.parseULongList, ae.struct = ae.prototype.parseStruct, ae.coverage = ae.prototype.parseCoverage, ae.classDef = ae.prototype.parseClassDef;
          var oe = {reserved: ae.uShort, reqFeatureIndex: ae.uShort, featureIndexes: ae.uShortList};
          ae.prototype.parseScriptList = function() {
            return this.parsePointer(ae.recordList({tag: ae.tag, script: ae.pointer({defaultLangSys: ae.pointer(oe), langSysRecords: ae.recordList({tag: ae.tag, langSys: ae.pointer(oe)})})})) || [];
          }, ae.prototype.parseFeatureList = function() {
            return this.parsePointer(ae.recordList({tag: ae.tag, feature: ae.pointer({featureParams: ae.offset16, lookupListIndexes: ae.uShortList})})) || [];
          }, ae.prototype.parseLookupList = function(i2) {
            return this.parsePointer(ae.list(ae.pointer(function() {
              var e3 = this.parseUShort();
              P.argument(1 <= e3 && e3 <= 9, "GPOS/GSUB lookup type " + e3 + " unknown.");
              var t3 = this.parseUShort(), r3 = 16 & t3;
              return {lookupType: e3, lookupFlag: t3, subtables: this.parseList(ae.pointer(i2[e3])), markFilteringSet: r3 ? this.parseUShort() : void 0};
            }))) || [];
          }, ae.prototype.parseFeatureVariationsList = function() {
            return this.parsePointer32(function() {
              var e3 = this.parseUShort(), t3 = this.parseUShort();
              return P.argument(e3 === 1 && t3 < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({conditionSetOffset: ae.offset32, featureTableSubstitutionOffset: ae.offset32});
            }) || [];
          };
          var se = {getByte: ee, getCard8: ee, getUShort: te, getCard16: te, getShort: function(e3, t3) {
            return e3.getInt16(t3, false);
          }, getULong: re, getFixed: ie, getTag: function(e3, t3) {
            for (var r3 = "", i2 = t3; i2 < t3 + 4; i2 += 1)
              r3 += String.fromCharCode(e3.getInt8(i2));
            return r3;
          }, getOffset: function(e3, t3, r3) {
            for (var i2 = 0, n2 = 0; n2 < r3; n2 += 1)
              i2 <<= 8, i2 += e3.getUint8(t3 + n2);
            return i2;
          }, getBytes: function(e3, t3, r3) {
            for (var i2 = [], n2 = t3; n2 < r3; n2 += 1)
              i2.push(e3.getUint8(n2));
            return i2;
          }, bytesToString: function(e3) {
            for (var t3 = "", r3 = 0; r3 < e3.length; r3 += 1)
              t3 += String.fromCharCode(e3[r3]);
            return t3;
          }, Parser: ae};
          var le = {parse: function(e3, t3) {
            var r3 = {};
            r3.version = se.getUShort(e3, t3), P.argument(r3.version === 0, "cmap table version should be 0."), r3.numTables = se.getUShort(e3, t3 + 2);
            for (var i2 = -1, n2 = r3.numTables - 1; 0 <= n2; --n2) {
              var a2 = se.getUShort(e3, t3 + 4 + 8 * n2), o2 = se.getUShort(e3, t3 + 4 + 8 * n2 + 2);
              if (a2 === 3 && (o2 === 0 || o2 === 1 || o2 === 10) || a2 === 0 && (o2 === 0 || o2 === 1 || o2 === 2 || o2 === 3 || o2 === 4)) {
                i2 = se.getULong(e3, t3 + 4 + 8 * n2 + 4);
                break;
              }
            }
            if (i2 === -1)
              throw new Error("No valid cmap sub-tables found.");
            var s2 = new se.Parser(e3, t3 + i2);
            if (r3.format = s2.parseUShort(), r3.format === 12)
              !function(e4, t4) {
                var r4;
                t4.parseUShort(), e4.length = t4.parseULong(), e4.language = t4.parseULong(), e4.groupCount = r4 = t4.parseULong(), e4.glyphIndexMap = {};
                for (var i3 = 0; i3 < r4; i3 += 1)
                  for (var n3 = t4.parseULong(), a3 = t4.parseULong(), o3 = t4.parseULong(), s3 = n3; s3 <= a3; s3 += 1)
                    e4.glyphIndexMap[s3] = o3, o3++;
              }(r3, s2);
            else {
              if (r3.format !== 4)
                throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r3.format + ").");
              !function(e4, t4, r4, i3, n3) {
                var a3;
                e4.length = t4.parseUShort(), e4.language = t4.parseUShort(), e4.segCount = a3 = t4.parseUShort() >> 1, t4.skip("uShort", 3), e4.glyphIndexMap = {};
                for (var o3 = new se.Parser(r4, i3 + n3 + 14), s3 = new se.Parser(r4, i3 + n3 + 16 + 2 * a3), l2 = new se.Parser(r4, i3 + n3 + 16 + 4 * a3), u2 = new se.Parser(r4, i3 + n3 + 16 + 6 * a3), h2 = i3 + n3 + 16 + 8 * a3, c2 = 0; c2 < a3 - 1; c2 += 1)
                  for (var f2 = void 0, d2 = o3.parseUShort(), p2 = s3.parseUShort(), m2 = l2.parseShort(), v2 = u2.parseUShort(), y2 = p2; y2 <= d2; y2 += 1)
                    v2 !== 0 ? (h2 = u2.offset + u2.relativeOffset - 2, h2 += v2, h2 += 2 * (y2 - p2), (f2 = se.getUShort(r4, h2)) !== 0 && (f2 = f2 + m2 & 65535)) : f2 = y2 + m2 & 65535, e4.glyphIndexMap[y2] = f2;
              }(r3, s2, e3, t3, i2);
            }
            return r3;
          }, make: function(e3) {
            var t3, r3 = true;
            for (t3 = e3.length - 1; 0 < t3; --t3) {
              if (65535 < e3.get(t3).unicode) {
                console.log("Adding CMAP format 12 (needed!)"), r3 = false;
                break;
              }
            }
            var i2 = [{name: "version", type: "USHORT", value: 0}, {name: "numTables", type: "USHORT", value: r3 ? 1 : 2}, {name: "platformID", type: "USHORT", value: 3}, {name: "encodingID", type: "USHORT", value: 1}, {name: "offset", type: "ULONG", value: r3 ? 12 : 20}];
            r3 || (i2 = i2.concat([{name: "cmap12PlatformID", type: "USHORT", value: 3}, {name: "cmap12EncodingID", type: "USHORT", value: 10}, {name: "cmap12Offset", type: "ULONG", value: 0}])), i2 = i2.concat([{name: "format", type: "USHORT", value: 4}, {name: "cmap4Length", type: "USHORT", value: 0}, {name: "language", type: "USHORT", value: 0}, {name: "segCountX2", type: "USHORT", value: 0}, {name: "searchRange", type: "USHORT", value: 0}, {name: "entrySelector", type: "USHORT", value: 0}, {name: "rangeShift", type: "USHORT", value: 0}]);
            var n2, a2, o2, s2 = new $.Table("cmap", i2);
            for (s2.segments = [], t3 = 0; t3 < e3.length; t3 += 1) {
              for (var l2 = e3.get(t3), u2 = 0; u2 < l2.unicodes.length; u2 += 1)
                n2 = s2, a2 = l2.unicodes[u2], o2 = t3, n2.segments.push({end: a2, start: a2, delta: -(a2 - o2), offset: 0, glyphIndex: o2});
              s2.segments = s2.segments.sort(function(e4, t4) {
                return e4.start - t4.start;
              });
            }
            s2.segments.push({end: 65535, start: 65535, delta: 1, offset: 0});
            var h2 = s2.segments.length, c2 = 0, f2 = [], d2 = [], p2 = [], m2 = [], v2 = [], y2 = [];
            for (t3 = 0; t3 < h2; t3 += 1) {
              var g2 = s2.segments[t3];
              g2.end <= 65535 && g2.start <= 65535 ? (f2 = f2.concat({name: "end_" + t3, type: "USHORT", value: g2.end}), d2 = d2.concat({name: "start_" + t3, type: "USHORT", value: g2.start}), p2 = p2.concat({name: "idDelta_" + t3, type: "SHORT", value: g2.delta}), m2 = m2.concat({name: "idRangeOffset_" + t3, type: "USHORT", value: g2.offset}), g2.glyphId !== void 0 && (v2 = v2.concat({name: "glyph_" + t3, type: "USHORT", value: g2.glyphId}))) : c2 += 1, r3 || g2.glyphIndex === void 0 || (y2 = (y2 = (y2 = y2.concat({name: "cmap12Start_" + t3, type: "ULONG", value: g2.start})).concat({name: "cmap12End_" + t3, type: "ULONG", value: g2.end})).concat({name: "cmap12Glyph_" + t3, type: "ULONG", value: g2.glyphIndex}));
            }
            if (s2.segCountX2 = 2 * (h2 - c2), s2.searchRange = 2 * Math.pow(2, Math.floor(Math.log(h2 - c2) / Math.log(2))), s2.entrySelector = Math.log(s2.searchRange / 2) / Math.log(2), s2.rangeShift = s2.segCountX2 - s2.searchRange, s2.fields = s2.fields.concat(f2), s2.fields.push({name: "reservedPad", type: "USHORT", value: 0}), s2.fields = s2.fields.concat(d2), s2.fields = s2.fields.concat(p2), s2.fields = s2.fields.concat(m2), s2.fields = s2.fields.concat(v2), s2.cmap4Length = 14 + 2 * f2.length + 2 + 2 * d2.length + 2 * p2.length + 2 * m2.length + 2 * v2.length, !r3) {
              var b2 = 16 + 4 * y2.length;
              s2.cmap12Offset = 20 + s2.cmap4Length, s2.fields = s2.fields.concat([{name: "cmap12Format", type: "USHORT", value: 12}, {name: "cmap12Reserved", type: "USHORT", value: 0}, {name: "cmap12Length", type: "ULONG", value: b2}, {name: "cmap12Language", type: "ULONG", value: 0}, {name: "cmap12nGroups", type: "ULONG", value: y2.length / 3}]), s2.fields = s2.fields.concat(y2);
            }
            return s2;
          }}, ue = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], he = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], ce = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], fe = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
          function de(e3) {
            this.font = e3;
          }
          function pe(e3) {
            this.cmap = e3;
          }
          function me(e3, t3) {
            this.encoding = e3, this.charset = t3;
          }
          function ve(e3) {
            switch (e3.version) {
              case 1:
                this.names = fe.slice();
                break;
              case 2:
                this.names = new Array(e3.numberOfGlyphs);
                for (var t3 = 0; t3 < e3.numberOfGlyphs; t3++)
                  e3.glyphNameIndex[t3] < fe.length ? this.names[t3] = fe[e3.glyphNameIndex[t3]] : this.names[t3] = e3.names[e3.glyphNameIndex[t3] - fe.length];
                break;
              case 2.5:
                this.names = new Array(e3.numberOfGlyphs);
                for (var r3 = 0; r3 < e3.numberOfGlyphs; r3++)
                  this.names[r3] = fe[r3 + e3.glyphNameIndex[r3]];
                break;
              case 3:
              default:
                this.names = [];
            }
          }
          de.prototype.charToGlyphIndex = function(e3) {
            var t3 = e3.codePointAt(0), r3 = this.font.glyphs;
            if (r3) {
              for (var i2 = 0; i2 < r3.length; i2 += 1)
                for (var n2 = r3.get(i2), a2 = 0; a2 < n2.unicodes.length; a2 += 1)
                  if (n2.unicodes[a2] === t3)
                    return i2;
            }
            return null;
          }, pe.prototype.charToGlyphIndex = function(e3) {
            return this.cmap.glyphIndexMap[e3.codePointAt(0)] || 0;
          }, me.prototype.charToGlyphIndex = function(e3) {
            var t3 = e3.codePointAt(0), r3 = this.encoding[t3];
            return this.charset.indexOf(r3);
          }, ve.prototype.nameToGlyphIndex = function(e3) {
            return this.names.indexOf(e3);
          }, ve.prototype.glyphIndexToName = function(e3) {
            return this.names[e3];
          };
          var ye = {line: function(e3, t3, r3, i2, n2) {
            e3.beginPath(), e3.moveTo(t3, r3), e3.lineTo(i2, n2), e3.stroke();
          }};
          function ge(e3) {
            this.bindConstructorValues(e3);
          }
          function be(t3, e3, r3) {
            Object.defineProperty(t3, e3, {get: function() {
              return t3.path, t3[r3];
            }, set: function(e4) {
              t3[r3] = e4;
            }, enumerable: true, configurable: true});
          }
          function _e(e3, t3) {
            if (this.font = e3, this.glyphs = {}, Array.isArray(t3))
              for (var r3 = 0; r3 < t3.length; r3++)
                this.glyphs[r3] = t3[r3];
            this.length = t3 && t3.length || 0;
          }
          ge.prototype.bindConstructorValues = function(e3) {
            var t3, r3;
            this.index = e3.index || 0, this.name = e3.name || null, this.unicode = e3.unicode || void 0, this.unicodes = e3.unicodes || e3.unicode !== void 0 ? [e3.unicode] : [], e3.xMin && (this.xMin = e3.xMin), e3.yMin && (this.yMin = e3.yMin), e3.xMax && (this.xMax = e3.xMax), e3.yMax && (this.yMax = e3.yMax), e3.advanceWidth && (this.advanceWidth = e3.advanceWidth), Object.defineProperty(this, "path", (t3 = e3.path, r3 = t3 || new I(), {configurable: true, get: function() {
              return typeof r3 == "function" && (r3 = r3()), r3;
            }, set: function(e4) {
              r3 = e4;
            }}));
          }, ge.prototype.addUnicode = function(e3) {
            this.unicodes.length === 0 && (this.unicode = e3), this.unicodes.push(e3);
          }, ge.prototype.getBoundingBox = function() {
            return this.path.getBoundingBox();
          }, ge.prototype.getPath = function(e3, t3, r3, i2, n2) {
            var a2, o2;
            e3 = e3 !== void 0 ? e3 : 0, t3 = t3 !== void 0 ? t3 : 0, r3 = r3 !== void 0 ? r3 : 72;
            var s2 = (i2 = i2 || {}).xScale, l2 = i2.yScale;
            if (i2.hinting && n2 && n2.hinting && (o2 = this.path && n2.hinting.exec(this, r3)), o2)
              a2 = n2.hinting.getCommands(o2), e3 = Math.round(e3), t3 = Math.round(t3), s2 = l2 = 1;
            else {
              a2 = this.path.commands;
              var u2 = 1 / this.path.unitsPerEm * r3;
              s2 === void 0 && (s2 = u2), l2 === void 0 && (l2 = u2);
            }
            for (var h2 = new I(), c2 = 0; c2 < a2.length; c2 += 1) {
              var f2 = a2[c2];
              f2.type === "M" ? h2.moveTo(e3 + f2.x * s2, t3 + -f2.y * l2) : f2.type === "L" ? h2.lineTo(e3 + f2.x * s2, t3 + -f2.y * l2) : f2.type === "Q" ? h2.quadraticCurveTo(e3 + f2.x1 * s2, t3 + -f2.y1 * l2, e3 + f2.x * s2, t3 + -f2.y * l2) : f2.type === "C" ? h2.curveTo(e3 + f2.x1 * s2, t3 + -f2.y1 * l2, e3 + f2.x2 * s2, t3 + -f2.y2 * l2, e3 + f2.x * s2, t3 + -f2.y * l2) : f2.type === "Z" && h2.closePath();
            }
            return h2;
          }, ge.prototype.getContours = function() {
            if (this.points === void 0)
              return [];
            for (var e3 = [], t3 = [], r3 = 0; r3 < this.points.length; r3 += 1) {
              var i2 = this.points[r3];
              t3.push(i2), i2.lastPointOfContour && (e3.push(t3), t3 = []);
            }
            return P.argument(t3.length === 0, "There are still points left in the current contour."), e3;
          }, ge.prototype.getMetrics = function() {
            for (var e3 = this.path.commands, t3 = [], r3 = [], i2 = 0; i2 < e3.length; i2 += 1) {
              var n2 = e3[i2];
              n2.type !== "Z" && (t3.push(n2.x), r3.push(n2.y)), n2.type !== "Q" && n2.type !== "C" || (t3.push(n2.x1), r3.push(n2.y1)), n2.type === "C" && (t3.push(n2.x2), r3.push(n2.y2));
            }
            var a2 = {xMin: Math.min.apply(null, t3), yMin: Math.min.apply(null, r3), xMax: Math.max.apply(null, t3), yMax: Math.max.apply(null, r3), leftSideBearing: this.leftSideBearing};
            return isFinite(a2.xMin) || (a2.xMin = 0), isFinite(a2.xMax) || (a2.xMax = this.advanceWidth), isFinite(a2.yMin) || (a2.yMin = 0), isFinite(a2.yMax) || (a2.yMax = 0), a2.rightSideBearing = this.advanceWidth - a2.leftSideBearing - (a2.xMax - a2.xMin), a2;
          }, ge.prototype.draw = function(e3, t3, r3, i2, n2) {
            this.getPath(t3, r3, i2, n2).draw(e3);
          }, ge.prototype.drawPoints = function(o2, e3, t3, r3) {
            function i2(e4, t4, r4, i3) {
              var n3 = 2 * Math.PI;
              o2.beginPath();
              for (var a3 = 0; a3 < e4.length; a3 += 1)
                o2.moveTo(t4 + e4[a3].x * i3, r4 + e4[a3].y * i3), o2.arc(t4 + e4[a3].x * i3, r4 + e4[a3].y * i3, 2, 0, n3, false);
              o2.closePath(), o2.fill();
            }
            e3 = e3 !== void 0 ? e3 : 0, t3 = t3 !== void 0 ? t3 : 0, r3 = r3 !== void 0 ? r3 : 24;
            for (var n2 = 1 / this.path.unitsPerEm * r3, a2 = [], s2 = [], l2 = this.path, u2 = 0; u2 < l2.commands.length; u2 += 1) {
              var h2 = l2.commands[u2];
              h2.x !== void 0 && a2.push({x: h2.x, y: -h2.y}), h2.x1 !== void 0 && s2.push({x: h2.x1, y: -h2.y1}), h2.x2 !== void 0 && s2.push({x: h2.x2, y: -h2.y2});
            }
            o2.fillStyle = "blue", i2(a2, e3, t3, n2), o2.fillStyle = "red", i2(s2, e3, t3, n2);
          }, ge.prototype.drawMetrics = function(e3, t3, r3, i2) {
            var n2;
            t3 = t3 !== void 0 ? t3 : 0, r3 = r3 !== void 0 ? r3 : 0, i2 = i2 !== void 0 ? i2 : 24, n2 = 1 / this.path.unitsPerEm * i2, e3.lineWidth = 1, e3.strokeStyle = "black", ye.line(e3, t3, -1e4, t3, 1e4), ye.line(e3, -1e4, r3, 1e4, r3);
            var a2 = this.xMin || 0, o2 = this.yMin || 0, s2 = this.xMax || 0, l2 = this.yMax || 0, u2 = this.advanceWidth || 0;
            e3.strokeStyle = "blue", ye.line(e3, t3 + a2 * n2, -1e4, t3 + a2 * n2, 1e4), ye.line(e3, t3 + s2 * n2, -1e4, t3 + s2 * n2, 1e4), ye.line(e3, -1e4, r3 + -o2 * n2, 1e4, r3 + -o2 * n2), ye.line(e3, -1e4, r3 + -l2 * n2, 1e4, r3 + -l2 * n2), e3.strokeStyle = "green", ye.line(e3, t3 + u2 * n2, -1e4, t3 + u2 * n2, 1e4);
          }, _e.prototype.get = function(e3) {
            return typeof this.glyphs[e3] == "function" && (this.glyphs[e3] = this.glyphs[e3]()), this.glyphs[e3];
          }, _e.prototype.push = function(e3, t3) {
            this.glyphs[e3] = t3, this.length++;
          };
          var xe = {GlyphSet: _e, glyphLoader: function(e3, t3) {
            return new ge({index: t3, font: e3});
          }, ttfGlyphLoader: function(r3, e3, i2, n2, a2, o2) {
            return function() {
              var t3 = new ge({index: e3, font: r3});
              return t3.path = function() {
                i2(t3, n2, a2);
                var e4 = o2(r3.glyphs, t3);
                return e4.unitsPerEm = r3.unitsPerEm, e4;
              }, be(t3, "xMin", "_xMin"), be(t3, "xMax", "_xMax"), be(t3, "yMin", "_yMin"), be(t3, "yMax", "_yMax"), t3;
            };
          }, cffGlyphLoader: function(r3, e3, i2, n2) {
            return function() {
              var t3 = new ge({index: e3, font: r3});
              return t3.path = function() {
                var e4 = i2(r3, t3, n2);
                return e4.unitsPerEm = r3.unitsPerEm, e4;
              }, t3;
            };
          }};
          function we(e3, t3) {
            if (e3 === t3)
              return true;
            if (Array.isArray(e3) && Array.isArray(t3)) {
              if (e3.length !== t3.length)
                return false;
              for (var r3 = 0; r3 < e3.length; r3 += 1)
                if (!we(e3[r3], t3[r3]))
                  return false;
              return true;
            }
            return false;
          }
          function Se(e3) {
            return e3.length < 1240 ? 107 : e3.length < 33900 ? 1131 : 32768;
          }
          function Me(e3, t3, r3) {
            var i2, n2, a2 = [], o2 = [], s2 = se.getCard16(e3, t3);
            if (s2 !== 0) {
              var l2 = se.getByte(e3, t3 + 2);
              i2 = t3 + (s2 + 1) * l2 + 2;
              for (var u2 = t3 + 3, h2 = 0; h2 < s2 + 1; h2 += 1)
                a2.push(se.getOffset(e3, u2, l2)), u2 += l2;
              n2 = i2 + a2[s2];
            } else
              n2 = t3 + 2;
            for (var c2 = 0; c2 < a2.length - 1; c2 += 1) {
              var f2 = se.getBytes(e3, i2 + a2[c2], i2 + a2[c2 + 1]);
              r3 && (f2 = r3(f2)), o2.push(f2);
            }
            return {objects: o2, startOffset: t3, endOffset: n2};
          }
          function Te(e3, t3) {
            if (t3 === 28)
              return e3.parseByte() << 8 | e3.parseByte();
            if (t3 === 29)
              return e3.parseByte() << 24 | e3.parseByte() << 16 | e3.parseByte() << 8 | e3.parseByte();
            if (t3 === 30)
              return function(e4) {
                for (var t4 = "", r3 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"]; ; ) {
                  var i2 = e4.parseByte(), n2 = i2 >> 4, a2 = 15 & i2;
                  if (n2 == 15)
                    break;
                  if (t4 += r3[n2], a2 == 15)
                    break;
                  t4 += r3[a2];
                }
                return parseFloat(t4);
              }(e3);
            if (32 <= t3 && t3 <= 246)
              return t3 - 139;
            if (247 <= t3 && t3 <= 250)
              return 256 * (t3 - 247) + e3.parseByte() + 108;
            if (251 <= t3 && t3 <= 254)
              return 256 * -(t3 - 251) - e3.parseByte() - 108;
            throw new Error("Invalid b0 " + t3);
          }
          function Ee(e3, t3, r3) {
            t3 = t3 !== void 0 ? t3 : 0;
            var i2 = new se.Parser(e3, t3), n2 = [], a2 = [];
            for (r3 = r3 !== void 0 ? r3 : e3.length; i2.relativeOffset < r3; ) {
              var o2 = i2.parseByte();
              o2 <= 21 ? (o2 === 12 && (o2 = 1200 + i2.parseByte()), n2.push([o2, a2]), a2 = []) : a2.push(Te(i2, o2));
            }
            return function(e4) {
              for (var t4 = {}, r4 = 0; r4 < e4.length; r4 += 1) {
                var i3 = e4[r4][0], n3 = e4[r4][1], a3 = void 0;
                if (a3 = n3.length === 1 ? n3[0] : n3, t4.hasOwnProperty(i3) && !isNaN(t4[i3]))
                  throw new Error("Object " + t4 + " already has key " + i3);
                t4[i3] = a3;
              }
              return t4;
            }(n2);
          }
          function Ce(e3, t3) {
            return t3 = t3 <= 390 ? ue[t3] : e3[t3 - 391];
          }
          function Le(e3, t3, r3) {
            for (var i2, n2 = {}, a2 = 0; a2 < t3.length; a2 += 1) {
              var o2 = t3[a2];
              if (Array.isArray(o2.type)) {
                var s2 = [];
                s2.length = o2.type.length;
                for (var l2 = 0; l2 < o2.type.length; l2++)
                  (i2 = e3[o2.op] !== void 0 ? e3[o2.op][l2] : void 0) === void 0 && (i2 = o2.value !== void 0 && o2.value[l2] !== void 0 ? o2.value[l2] : null), o2.type[l2] === "SID" && (i2 = Ce(r3, i2)), s2[l2] = i2;
                n2[o2.name] = s2;
              } else
                (i2 = e3[o2.op]) === void 0 && (i2 = o2.value !== void 0 ? o2.value : null), o2.type === "SID" && (i2 = Ce(r3, i2)), n2[o2.name] = i2;
            }
            return n2;
          }
          var Oe = [{name: "version", op: 0, type: "SID"}, {name: "notice", op: 1, type: "SID"}, {name: "copyright", op: 1200, type: "SID"}, {name: "fullName", op: 2, type: "SID"}, {name: "familyName", op: 3, type: "SID"}, {name: "weight", op: 4, type: "SID"}, {name: "isFixedPitch", op: 1201, type: "number", value: 0}, {name: "italicAngle", op: 1202, type: "number", value: 0}, {name: "underlinePosition", op: 1203, type: "number", value: -100}, {name: "underlineThickness", op: 1204, type: "number", value: 50}, {name: "paintType", op: 1205, type: "number", value: 0}, {name: "charstringType", op: 1206, type: "number", value: 2}, {name: "fontMatrix", op: 1207, type: ["real", "real", "real", "real", "real", "real"], value: [1e-3, 0, 0, 1e-3, 0, 0]}, {name: "uniqueId", op: 13, type: "number"}, {name: "fontBBox", op: 5, type: ["number", "number", "number", "number"], value: [0, 0, 0, 0]}, {name: "strokeWidth", op: 1208, type: "number", value: 0}, {name: "xuid", op: 14, type: [], value: null}, {name: "charset", op: 15, type: "offset", value: 0}, {name: "encoding", op: 16, type: "offset", value: 0}, {name: "charStrings", op: 17, type: "offset", value: 0}, {name: "private", op: 18, type: ["number", "offset"], value: [0, 0]}, {name: "ros", op: 1230, type: ["SID", "SID", "number"]}, {name: "cidFontVersion", op: 1231, type: "number", value: 0}, {name: "cidFontRevision", op: 1232, type: "number", value: 0}, {name: "cidFontType", op: 1233, type: "number", value: 0}, {name: "cidCount", op: 1234, type: "number", value: 8720}, {name: "uidBase", op: 1235, type: "number"}, {name: "fdArray", op: 1236, type: "offset"}, {name: "fdSelect", op: 1237, type: "offset"}, {name: "fontName", op: 1238, type: "SID"}], Pe = [{name: "subrs", op: 19, type: "offset", value: 0}, {name: "defaultWidthX", op: 20, type: "number", value: 0}, {name: "nominalWidthX", op: 21, type: "number", value: 0}];
          function Re(e3, t3, r3, i2) {
            return Le(Ee(e3, t3, r3), Pe, i2);
          }
          function De(e3, t3, r3, i2) {
            for (var n2, a2, o2 = [], s2 = 0; s2 < r3.length; s2 += 1) {
              var l2 = new DataView(new Uint8Array(r3[s2]).buffer), u2 = (a2 = i2, Le(Ee(n2 = l2, 0, n2.byteLength), Oe, a2));
              u2._subrs = [], u2._subrsBias = 0;
              var h2 = u2.private[0], c2 = u2.private[1];
              if (h2 !== 0 && c2 !== 0) {
                var f2 = Re(e3, c2 + t3, h2, i2);
                if (u2._defaultWidthX = f2.defaultWidthX, u2._nominalWidthX = f2.nominalWidthX, f2.subrs !== 0) {
                  var d2 = Me(e3, c2 + f2.subrs + t3);
                  u2._subrs = d2.objects, u2._subrsBias = Se(u2._subrs);
                }
                u2._privateDict = f2;
              }
              o2.push(u2);
            }
            return o2;
          }
          function ke(v2, y2, e3) {
            var g2, b2, _2, x2, w2, S2, t3, M2, T2 = new I(), E2 = [], C2 = 0, L2 = false, O2 = false, P2 = 0, R2 = 0;
            if (v2.isCIDFont) {
              var r3 = v2.tables.cff.topDict._fdSelect[y2.index], i2 = v2.tables.cff.topDict._fdArray[r3];
              w2 = i2._subrs, S2 = i2._subrsBias, t3 = i2._defaultWidthX, M2 = i2._nominalWidthX;
            } else
              w2 = v2.tables.cff.topDict._subrs, S2 = v2.tables.cff.topDict._subrsBias, t3 = v2.tables.cff.topDict._defaultWidthX, M2 = v2.tables.cff.topDict._nominalWidthX;
            var D2 = t3;
            function k2(e4, t4) {
              O2 && T2.closePath(), T2.moveTo(e4, t4), O2 = true;
            }
            function A2() {
              E2.length % 2 == 0 || L2 || (D2 = E2.shift() + M2), C2 += E2.length >> 1, E2.length = 0, L2 = true;
            }
            return function e4(t4) {
              for (var r4, i3, n2, a2, o2, s2, l2, u2, h2, c2, f2, d2, p2 = 0; p2 < t4.length; ) {
                var m2 = t4[p2];
                switch (p2 += 1, m2) {
                  case 1:
                  case 3:
                    A2();
                    break;
                  case 4:
                    1 < E2.length && !L2 && (D2 = E2.shift() + M2, L2 = true), R2 += E2.pop(), k2(P2, R2);
                    break;
                  case 5:
                    for (; 0 < E2.length; )
                      P2 += E2.shift(), R2 += E2.shift(), T2.lineTo(P2, R2);
                    break;
                  case 6:
                    for (; 0 < E2.length && (P2 += E2.shift(), T2.lineTo(P2, R2), E2.length !== 0); )
                      R2 += E2.shift(), T2.lineTo(P2, R2);
                    break;
                  case 7:
                    for (; 0 < E2.length && (R2 += E2.shift(), T2.lineTo(P2, R2), E2.length !== 0); )
                      P2 += E2.shift(), T2.lineTo(P2, R2);
                    break;
                  case 8:
                    for (; 0 < E2.length; )
                      g2 = P2 + E2.shift(), b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), P2 = _2 + E2.shift(), R2 = x2 + E2.shift(), T2.curveTo(g2, b2, _2, x2, P2, R2);
                    break;
                  case 10:
                    o2 = E2.pop() + S2, (s2 = w2[o2]) && e4(s2);
                    break;
                  case 11:
                    return;
                  case 12:
                    switch (m2 = t4[p2], p2 += 1, m2) {
                      case 35:
                        g2 = P2 + E2.shift(), b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = x2 + E2.shift(), h2 = l2 + E2.shift(), c2 = u2 + E2.shift(), f2 = h2 + E2.shift(), d2 = c2 + E2.shift(), P2 = f2 + E2.shift(), R2 = d2 + E2.shift(), E2.shift(), T2.curveTo(g2, b2, _2, x2, l2, u2), T2.curveTo(h2, c2, f2, d2, P2, R2);
                        break;
                      case 34:
                        g2 = P2 + E2.shift(), b2 = R2, _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = x2, h2 = l2 + E2.shift(), c2 = x2, f2 = h2 + E2.shift(), d2 = R2, P2 = f2 + E2.shift(), T2.curveTo(g2, b2, _2, x2, l2, u2), T2.curveTo(h2, c2, f2, d2, P2, R2);
                        break;
                      case 36:
                        g2 = P2 + E2.shift(), b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = x2, h2 = l2 + E2.shift(), c2 = x2, f2 = h2 + E2.shift(), d2 = c2 + E2.shift(), P2 = f2 + E2.shift(), T2.curveTo(g2, b2, _2, x2, l2, u2), T2.curveTo(h2, c2, f2, d2, P2, R2);
                        break;
                      case 37:
                        g2 = P2 + E2.shift(), b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = x2 + E2.shift(), h2 = l2 + E2.shift(), c2 = u2 + E2.shift(), f2 = h2 + E2.shift(), d2 = c2 + E2.shift(), Math.abs(f2 - P2) > Math.abs(d2 - R2) ? P2 = f2 + E2.shift() : R2 = d2 + E2.shift(), T2.curveTo(g2, b2, _2, x2, l2, u2), T2.curveTo(h2, c2, f2, d2, P2, R2);
                        break;
                      default:
                        console.log("Glyph " + y2.index + ": unknown operator 1200" + m2), E2.length = 0;
                    }
                    break;
                  case 14:
                    0 < E2.length && !L2 && (D2 = E2.shift() + M2, L2 = true), O2 && (T2.closePath(), O2 = false);
                    break;
                  case 18:
                    A2();
                    break;
                  case 19:
                  case 20:
                    A2(), p2 += C2 + 7 >> 3;
                    break;
                  case 21:
                    2 < E2.length && !L2 && (D2 = E2.shift() + M2, L2 = true), R2 += E2.pop(), k2(P2 += E2.pop(), R2);
                    break;
                  case 22:
                    1 < E2.length && !L2 && (D2 = E2.shift() + M2, L2 = true), k2(P2 += E2.pop(), R2);
                    break;
                  case 23:
                    A2();
                    break;
                  case 24:
                    for (; 2 < E2.length; )
                      g2 = P2 + E2.shift(), b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), P2 = _2 + E2.shift(), R2 = x2 + E2.shift(), T2.curveTo(g2, b2, _2, x2, P2, R2);
                    P2 += E2.shift(), R2 += E2.shift(), T2.lineTo(P2, R2);
                    break;
                  case 25:
                    for (; 6 < E2.length; )
                      P2 += E2.shift(), R2 += E2.shift(), T2.lineTo(P2, R2);
                    g2 = P2 + E2.shift(), b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), P2 = _2 + E2.shift(), R2 = x2 + E2.shift(), T2.curveTo(g2, b2, _2, x2, P2, R2);
                    break;
                  case 26:
                    for (E2.length % 2 && (P2 += E2.shift()); 0 < E2.length; )
                      g2 = P2, b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), P2 = _2, R2 = x2 + E2.shift(), T2.curveTo(g2, b2, _2, x2, P2, R2);
                    break;
                  case 27:
                    for (E2.length % 2 && (R2 += E2.shift()); 0 < E2.length; )
                      g2 = P2 + E2.shift(), b2 = R2, _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), P2 = _2 + E2.shift(), R2 = x2, T2.curveTo(g2, b2, _2, x2, P2, R2);
                    break;
                  case 28:
                    r4 = t4[p2], i3 = t4[p2 + 1], E2.push((r4 << 24 | i3 << 16) >> 16), p2 += 2;
                    break;
                  case 29:
                    o2 = E2.pop() + v2.gsubrsBias, (s2 = v2.gsubrs[o2]) && e4(s2);
                    break;
                  case 30:
                    for (; 0 < E2.length && (g2 = P2, b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), P2 = _2 + E2.shift(), R2 = x2 + (E2.length === 1 ? E2.shift() : 0), T2.curveTo(g2, b2, _2, x2, P2, R2), E2.length !== 0); )
                      g2 = P2 + E2.shift(), b2 = R2, _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), R2 = x2 + E2.shift(), P2 = _2 + (E2.length === 1 ? E2.shift() : 0), T2.curveTo(g2, b2, _2, x2, P2, R2);
                    break;
                  case 31:
                    for (; 0 < E2.length && (g2 = P2 + E2.shift(), b2 = R2, _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), R2 = x2 + E2.shift(), P2 = _2 + (E2.length === 1 ? E2.shift() : 0), T2.curveTo(g2, b2, _2, x2, P2, R2), E2.length !== 0); )
                      g2 = P2, b2 = R2 + E2.shift(), _2 = g2 + E2.shift(), x2 = b2 + E2.shift(), P2 = _2 + E2.shift(), R2 = x2 + (E2.length === 1 ? E2.shift() : 0), T2.curveTo(g2, b2, _2, x2, P2, R2);
                    break;
                  default:
                    m2 < 32 ? console.log("Glyph " + y2.index + ": unknown operator " + m2) : m2 < 247 ? E2.push(m2 - 139) : m2 < 251 ? (r4 = t4[p2], p2 += 1, E2.push(256 * (m2 - 247) + r4 + 108)) : m2 < 255 ? (r4 = t4[p2], p2 += 1, E2.push(256 * -(m2 - 251) - r4 - 108)) : (r4 = t4[p2], i3 = t4[p2 + 1], n2 = t4[p2 + 2], a2 = t4[p2 + 3], p2 += 4, E2.push((r4 << 24 | i3 << 16 | n2 << 8 | a2) / 65536));
                }
              }
            }(e3), y2.advanceWidth = D2, T2;
          }
          function Ae(e3, t3) {
            var r3, i2 = ue.indexOf(e3);
            return 0 <= i2 && (r3 = i2), 0 <= (i2 = t3.indexOf(e3)) ? r3 = i2 + ue.length : (r3 = ue.length + t3.length, t3.push(e3)), r3;
          }
          function Ie(e3, t3, r3) {
            for (var i2 = {}, n2 = 0; n2 < e3.length; n2 += 1) {
              var a2 = e3[n2], o2 = t3[a2.name];
              o2 === void 0 || we(o2, a2.value) || (a2.type === "SID" && (o2 = Ae(o2, r3)), i2[a2.op] = {name: a2.name, type: a2.type, value: o2});
            }
            return i2;
          }
          function Ue(e3, t3) {
            var r3 = new $.Record("Top DICT", [{name: "dict", type: "DICT", value: {}}]);
            return r3.dict = Ie(Oe, e3, t3), r3;
          }
          function Ne(e3) {
            var t3 = new $.Record("Top DICT INDEX", [{name: "topDicts", type: "INDEX", value: []}]);
            return t3.topDicts = [{name: "topDict_0", type: "TABLE", value: e3}], t3;
          }
          function Fe(e3) {
            var t3 = [], r3 = e3.path;
            t3.push({name: "width", type: "NUMBER", value: e3.advanceWidth});
            for (var i2 = 0, n2 = 0, a2 = 0; a2 < r3.commands.length; a2 += 1) {
              var o2 = void 0, s2 = void 0, l2 = r3.commands[a2];
              if (l2.type === "Q") {
                l2 = {type: "C", x: l2.x, y: l2.y, x1: 1 / 3 * i2 + 2 / 3 * l2.x1, y1: 1 / 3 * n2 + 2 / 3 * l2.y1, x2: 1 / 3 * l2.x + 2 / 3 * l2.x1, y2: 1 / 3 * l2.y + 2 / 3 * l2.y1};
              }
              if (l2.type === "M")
                o2 = Math.round(l2.x - i2), s2 = Math.round(l2.y - n2), t3.push({name: "dx", type: "NUMBER", value: o2}), t3.push({name: "dy", type: "NUMBER", value: s2}), t3.push({name: "rmoveto", type: "OP", value: 21}), i2 = Math.round(l2.x), n2 = Math.round(l2.y);
              else if (l2.type === "L")
                o2 = Math.round(l2.x - i2), s2 = Math.round(l2.y - n2), t3.push({name: "dx", type: "NUMBER", value: o2}), t3.push({name: "dy", type: "NUMBER", value: s2}), t3.push({name: "rlineto", type: "OP", value: 5}), i2 = Math.round(l2.x), n2 = Math.round(l2.y);
              else if (l2.type === "C") {
                var u2 = Math.round(l2.x1 - i2), h2 = Math.round(l2.y1 - n2), c2 = Math.round(l2.x2 - l2.x1), f2 = Math.round(l2.y2 - l2.y1);
                o2 = Math.round(l2.x - l2.x2), s2 = Math.round(l2.y - l2.y2), t3.push({name: "dx1", type: "NUMBER", value: u2}), t3.push({name: "dy1", type: "NUMBER", value: h2}), t3.push({name: "dx2", type: "NUMBER", value: c2}), t3.push({name: "dy2", type: "NUMBER", value: f2}), t3.push({name: "dx", type: "NUMBER", value: o2}), t3.push({name: "dy", type: "NUMBER", value: s2}), t3.push({name: "rrcurveto", type: "OP", value: 8}), i2 = Math.round(l2.x), n2 = Math.round(l2.y);
              }
            }
            return t3.push({name: "endchar", type: "OP", value: 14}), t3;
          }
          var Be = {parse: function(e3, t3, r3) {
            r3.tables.cff = {};
            var i2, n2, a2, o2 = Me(e3, (i2 = e3, n2 = t3, (a2 = {}).formatMajor = se.getCard8(i2, n2), a2.formatMinor = se.getCard8(i2, n2 + 1), a2.size = se.getCard8(i2, n2 + 2), a2.offsetSize = se.getCard8(i2, n2 + 3), a2.startOffset = n2, a2.endOffset = n2 + 4, a2).endOffset, se.bytesToString), s2 = Me(e3, o2.endOffset), l2 = Me(e3, s2.endOffset, se.bytesToString), u2 = Me(e3, l2.endOffset);
            r3.gsubrs = u2.objects, r3.gsubrsBias = Se(r3.gsubrs);
            var h2 = De(e3, t3, s2.objects, l2.objects);
            if (h2.length !== 1)
              throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + h2.length);
            var c2 = h2[0];
            if ((r3.tables.cff.topDict = c2)._privateDict && (r3.defaultWidthX = c2._privateDict.defaultWidthX, r3.nominalWidthX = c2._privateDict.nominalWidthX), c2.ros[0] !== void 0 && c2.ros[1] !== void 0 && (r3.isCIDFont = true), r3.isCIDFont) {
              var f2 = c2.fdArray, d2 = c2.fdSelect;
              if (f2 === 0 || d2 === 0)
                throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
              var p2 = De(e3, t3, Me(e3, f2 += t3).objects, l2.objects);
              c2._fdArray = p2, d2 += t3, c2._fdSelect = function(e4, t4, r4, i3) {
                var n3, a3 = [], o3 = new se.Parser(e4, t4), s3 = o3.parseCard8();
                if (s3 === 0)
                  for (var l3 = 0; l3 < r4; l3++) {
                    if (i3 <= (n3 = o3.parseCard8()))
                      throw new Error("CFF table CID Font FDSelect has bad FD index value " + n3 + " (FD count " + i3 + ")");
                    a3.push(n3);
                  }
                else {
                  if (s3 !== 3)
                    throw new Error("CFF Table CID Font FDSelect table has unsupported format " + s3);
                  var u3, h3 = o3.parseCard16(), c3 = o3.parseCard16();
                  if (c3 !== 0)
                    throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c3);
                  for (var f3 = 0; f3 < h3; f3++) {
                    if (n3 = o3.parseCard8(), u3 = o3.parseCard16(), i3 <= n3)
                      throw new Error("CFF table CID Font FDSelect has bad FD index value " + n3 + " (FD count " + i3 + ")");
                    if (r4 < u3)
                      throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + u3);
                    for (; c3 < u3; c3++)
                      a3.push(n3);
                    c3 = u3;
                  }
                  if (u3 !== r4)
                    throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + u3);
                }
                return a3;
              }(e3, d2, r3.numGlyphs, p2.length);
            }
            var m2 = t3 + c2.private[1], v2 = Re(e3, m2, c2.private[0], l2.objects);
            if (r3.defaultWidthX = v2.defaultWidthX, r3.nominalWidthX = v2.nominalWidthX, v2.subrs !== 0) {
              var y2 = Me(e3, m2 + v2.subrs);
              r3.subrs = y2.objects, r3.subrsBias = Se(r3.subrs);
            } else
              r3.subrs = [], r3.subrsBias = 0;
            var g2 = Me(e3, t3 + c2.charStrings);
            r3.nGlyphs = g2.objects.length;
            var b2 = function(e4, t4, r4, i3) {
              var n3, a3, o3 = new se.Parser(e4, t4);
              --r4;
              var s3 = [".notdef"], l3 = o3.parseCard8();
              if (l3 === 0)
                for (var u3 = 0; u3 < r4; u3 += 1)
                  n3 = o3.parseSID(), s3.push(Ce(i3, n3));
              else if (l3 === 1)
                for (; s3.length <= r4; ) {
                  n3 = o3.parseSID(), a3 = o3.parseCard8();
                  for (var h3 = 0; h3 <= a3; h3 += 1)
                    s3.push(Ce(i3, n3)), n3 += 1;
                }
              else {
                if (l3 !== 2)
                  throw new Error("Unknown charset format " + l3);
                for (; s3.length <= r4; ) {
                  n3 = o3.parseSID(), a3 = o3.parseCard16();
                  for (var c3 = 0; c3 <= a3; c3 += 1)
                    s3.push(Ce(i3, n3)), n3 += 1;
                }
              }
              return s3;
            }(e3, t3 + c2.charset, r3.nGlyphs, l2.objects);
            c2.encoding === 0 ? r3.cffEncoding = new me(he, b2) : c2.encoding === 1 ? r3.cffEncoding = new me(ce, b2) : r3.cffEncoding = function(e4, t4, r4) {
              var i3, n3 = {}, a3 = new se.Parser(e4, t4), o3 = a3.parseCard8();
              if (o3 === 0)
                for (var s3 = a3.parseCard8(), l3 = 0; l3 < s3; l3 += 1)
                  n3[i3 = a3.parseCard8()] = l3;
              else {
                if (o3 !== 1)
                  throw new Error("Unknown encoding format " + o3);
                var u3 = a3.parseCard8();
                i3 = 1;
                for (var h3 = 0; h3 < u3; h3 += 1)
                  for (var c3 = a3.parseCard8(), f3 = a3.parseCard8(), d3 = c3; d3 <= c3 + f3; d3 += 1)
                    n3[d3] = i3, i3 += 1;
              }
              return new me(n3, r4);
            }(e3, t3 + c2.encoding, b2), r3.encoding = r3.encoding || r3.cffEncoding, r3.glyphs = new xe.GlyphSet(r3);
            for (var _2 = 0; _2 < r3.nGlyphs; _2 += 1) {
              var x2 = g2.objects[_2];
              r3.glyphs.push(_2, xe.cffGlyphLoader(r3, _2, ke, x2));
            }
          }, make: function(e3, t3) {
            for (var r3, i2 = new $.Table("CFF ", [{name: "header", type: "RECORD"}, {name: "nameIndex", type: "RECORD"}, {name: "topDictIndex", type: "RECORD"}, {name: "stringIndex", type: "RECORD"}, {name: "globalSubrIndex", type: "RECORD"}, {name: "charsets", type: "RECORD"}, {name: "charStringsIndex", type: "RECORD"}, {name: "privateDict", type: "RECORD"}]), n2 = 1 / t3.unitsPerEm, a2 = {version: t3.version, fullName: t3.fullName, familyName: t3.familyName, weight: t3.weightName, fontBBox: t3.fontBBox || [0, 0, 0, 0], fontMatrix: [n2, 0, 0, n2, 0, 0], charset: 999, encoding: 0, charStrings: 999, private: [0, 999]}, o2 = [], s2 = 1; s2 < e3.length; s2 += 1)
              r3 = e3.get(s2), o2.push(r3.name);
            var l2 = [];
            i2.header = new $.Record("Header", [{name: "major", type: "Card8", value: 1}, {name: "minor", type: "Card8", value: 0}, {name: "hdrSize", type: "Card8", value: 4}, {name: "major", type: "Card8", value: 1}]), i2.nameIndex = function(e4) {
              var t4 = new $.Record("Name INDEX", [{name: "names", type: "INDEX", value: []}]);
              t4.names = [];
              for (var r4 = 0; r4 < e4.length; r4 += 1)
                t4.names.push({name: "name_" + r4, type: "NAME", value: e4[r4]});
              return t4;
            }([t3.postScriptName]);
            var u2, h2, c2, f2 = Ue(a2, l2);
            i2.topDictIndex = Ne(f2), i2.globalSubrIndex = new $.Record("Global Subr INDEX", [{name: "subrs", type: "INDEX", value: []}]), i2.charsets = function(e4, t4) {
              for (var r4 = new $.Record("Charsets", [{name: "format", type: "Card8", value: 0}]), i3 = 0; i3 < e4.length; i3 += 1) {
                var n3 = Ae(e4[i3], t4);
                r4.fields.push({name: "glyph_" + i3, type: "SID", value: n3});
              }
              return r4;
            }(o2, l2), i2.charStringsIndex = function(e4) {
              for (var t4 = new $.Record("CharStrings INDEX", [{name: "charStrings", type: "INDEX", value: []}]), r4 = 0; r4 < e4.length; r4 += 1) {
                var i3 = e4.get(r4), n3 = Fe(i3);
                t4.charStrings.push({name: i3.name, type: "CHARSTRING", value: n3});
              }
              return t4;
            }(e3), i2.privateDict = (u2 = {}, h2 = l2, (c2 = new $.Record("Private DICT", [{name: "dict", type: "DICT", value: {}}])).dict = Ie(Pe, u2, h2), c2), i2.stringIndex = function(e4) {
              var t4 = new $.Record("String INDEX", [{name: "strings", type: "INDEX", value: []}]);
              t4.strings = [];
              for (var r4 = 0; r4 < e4.length; r4 += 1)
                t4.strings.push({name: "string_" + r4, type: "STRING", value: e4[r4]});
              return t4;
            }(l2);
            var d2 = i2.header.sizeOf() + i2.nameIndex.sizeOf() + i2.topDictIndex.sizeOf() + i2.stringIndex.sizeOf() + i2.globalSubrIndex.sizeOf();
            return a2.charset = d2, a2.encoding = 0, a2.charStrings = a2.charset + i2.charsets.sizeOf(), a2.private[1] = a2.charStrings + i2.charStringsIndex.sizeOf(), f2 = Ue(a2, l2), i2.topDictIndex = Ne(f2), i2;
          }};
          var Ge = {parse: function(e3, t3) {
            var r3 = {}, i2 = new se.Parser(e3, t3);
            return r3.version = i2.parseVersion(), r3.fontRevision = Math.round(1e3 * i2.parseFixed()) / 1e3, r3.checkSumAdjustment = i2.parseULong(), r3.magicNumber = i2.parseULong(), P.argument(r3.magicNumber === 1594834165, "Font header has wrong magic number."), r3.flags = i2.parseUShort(), r3.unitsPerEm = i2.parseUShort(), r3.created = i2.parseLongDateTime(), r3.modified = i2.parseLongDateTime(), r3.xMin = i2.parseShort(), r3.yMin = i2.parseShort(), r3.xMax = i2.parseShort(), r3.yMax = i2.parseShort(), r3.macStyle = i2.parseUShort(), r3.lowestRecPPEM = i2.parseUShort(), r3.fontDirectionHint = i2.parseShort(), r3.indexToLocFormat = i2.parseShort(), r3.glyphDataFormat = i2.parseShort(), r3;
          }, make: function(e3) {
            var t3 = Math.round(new Date().getTime() / 1e3) + 2082844800, r3 = t3;
            return e3.createdTimestamp && (r3 = e3.createdTimestamp + 2082844800), new $.Table("head", [{name: "version", type: "FIXED", value: 65536}, {name: "fontRevision", type: "FIXED", value: 65536}, {name: "checkSumAdjustment", type: "ULONG", value: 0}, {name: "magicNumber", type: "ULONG", value: 1594834165}, {name: "flags", type: "USHORT", value: 0}, {name: "unitsPerEm", type: "USHORT", value: 1e3}, {name: "created", type: "LONGDATETIME", value: r3}, {name: "modified", type: "LONGDATETIME", value: t3}, {name: "xMin", type: "SHORT", value: 0}, {name: "yMin", type: "SHORT", value: 0}, {name: "xMax", type: "SHORT", value: 0}, {name: "yMax", type: "SHORT", value: 0}, {name: "macStyle", type: "USHORT", value: 0}, {name: "lowestRecPPEM", type: "USHORT", value: 0}, {name: "fontDirectionHint", type: "SHORT", value: 2}, {name: "indexToLocFormat", type: "SHORT", value: 0}, {name: "glyphDataFormat", type: "SHORT", value: 0}], e3);
          }};
          var je = {parse: function(e3, t3) {
            var r3 = {}, i2 = new se.Parser(e3, t3);
            return r3.version = i2.parseVersion(), r3.ascender = i2.parseShort(), r3.descender = i2.parseShort(), r3.lineGap = i2.parseShort(), r3.advanceWidthMax = i2.parseUShort(), r3.minLeftSideBearing = i2.parseShort(), r3.minRightSideBearing = i2.parseShort(), r3.xMaxExtent = i2.parseShort(), r3.caretSlopeRise = i2.parseShort(), r3.caretSlopeRun = i2.parseShort(), r3.caretOffset = i2.parseShort(), i2.relativeOffset += 8, r3.metricDataFormat = i2.parseShort(), r3.numberOfHMetrics = i2.parseUShort(), r3;
          }, make: function(e3) {
            return new $.Table("hhea", [{name: "version", type: "FIXED", value: 65536}, {name: "ascender", type: "FWORD", value: 0}, {name: "descender", type: "FWORD", value: 0}, {name: "lineGap", type: "FWORD", value: 0}, {name: "advanceWidthMax", type: "UFWORD", value: 0}, {name: "minLeftSideBearing", type: "FWORD", value: 0}, {name: "minRightSideBearing", type: "FWORD", value: 0}, {name: "xMaxExtent", type: "FWORD", value: 0}, {name: "caretSlopeRise", type: "SHORT", value: 1}, {name: "caretSlopeRun", type: "SHORT", value: 0}, {name: "caretOffset", type: "SHORT", value: 0}, {name: "reserved1", type: "SHORT", value: 0}, {name: "reserved2", type: "SHORT", value: 0}, {name: "reserved3", type: "SHORT", value: 0}, {name: "reserved4", type: "SHORT", value: 0}, {name: "metricDataFormat", type: "SHORT", value: 0}, {name: "numberOfHMetrics", type: "USHORT", value: 0}], e3);
          }};
          var Ve = {parse: function(e3, t3, r3, i2, n2) {
            for (var a2, o2, s2 = new se.Parser(e3, t3), l2 = 0; l2 < i2; l2 += 1) {
              l2 < r3 && (a2 = s2.parseUShort(), o2 = s2.parseShort());
              var u2 = n2.get(l2);
              u2.advanceWidth = a2, u2.leftSideBearing = o2;
            }
          }, make: function(e3) {
            for (var t3 = new $.Table("hmtx", []), r3 = 0; r3 < e3.length; r3 += 1) {
              var i2 = e3.get(r3), n2 = i2.advanceWidth || 0, a2 = i2.leftSideBearing || 0;
              t3.fields.push({name: "advanceWidth_" + r3, type: "USHORT", value: n2}), t3.fields.push({name: "leftSideBearing_" + r3, type: "SHORT", value: a2});
            }
            return t3;
          }};
          var ze = {make: function(e3) {
            for (var t3 = new $.Table("ltag", [{name: "version", type: "ULONG", value: 1}, {name: "flags", type: "ULONG", value: 0}, {name: "numTags", type: "ULONG", value: e3.length}]), r3 = "", i2 = 12 + 4 * e3.length, n2 = 0; n2 < e3.length; ++n2) {
              var a2 = r3.indexOf(e3[n2]);
              a2 < 0 && (a2 = r3.length, r3 += e3[n2]), t3.fields.push({name: "offset " + n2, type: "USHORT", value: i2 + a2}), t3.fields.push({name: "length " + n2, type: "USHORT", value: e3[n2].length});
            }
            return t3.fields.push({name: "stringPool", type: "CHARARRAY", value: r3}), t3;
          }, parse: function(e3, t3) {
            var r3 = new se.Parser(e3, t3), i2 = r3.parseULong();
            P.argument(i2 === 1, "Unsupported ltag table version."), r3.skip("uLong", 1);
            for (var n2 = r3.parseULong(), a2 = [], o2 = 0; o2 < n2; o2++) {
              for (var s2 = "", l2 = t3 + r3.parseUShort(), u2 = r3.parseUShort(), h2 = l2; h2 < l2 + u2; ++h2)
                s2 += String.fromCharCode(e3.getInt8(h2));
              a2.push(s2);
            }
            return a2;
          }};
          var He = {parse: function(e3, t3) {
            var r3 = {}, i2 = new se.Parser(e3, t3);
            return r3.version = i2.parseVersion(), r3.numGlyphs = i2.parseUShort(), r3.version === 1 && (r3.maxPoints = i2.parseUShort(), r3.maxContours = i2.parseUShort(), r3.maxCompositePoints = i2.parseUShort(), r3.maxCompositeContours = i2.parseUShort(), r3.maxZones = i2.parseUShort(), r3.maxTwilightPoints = i2.parseUShort(), r3.maxStorage = i2.parseUShort(), r3.maxFunctionDefs = i2.parseUShort(), r3.maxInstructionDefs = i2.parseUShort(), r3.maxStackElements = i2.parseUShort(), r3.maxSizeOfInstructions = i2.parseUShort(), r3.maxComponentElements = i2.parseUShort(), r3.maxComponentDepth = i2.parseUShort()), r3;
          }, make: function(e3) {
            return new $.Table("maxp", [{name: "version", type: "FIXED", value: 20480}, {name: "numGlyphs", type: "USHORT", value: e3}]);
          }}, We = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"], qe = {0: "en", 1: "fr", 2: "de", 3: "it", 4: "nl", 5: "sv", 6: "es", 7: "da", 8: "pt", 9: "no", 10: "he", 11: "ja", 12: "ar", 13: "fi", 14: "el", 15: "is", 16: "mt", 17: "tr", 18: "hr", 19: "zh-Hant", 20: "ur", 21: "hi", 22: "th", 23: "ko", 24: "lt", 25: "pl", 26: "hu", 27: "es", 28: "lv", 29: "se", 30: "fo", 31: "fa", 32: "ru", 33: "zh", 34: "nl-BE", 35: "ga", 36: "sq", 37: "ro", 38: "cz", 39: "sk", 40: "si", 41: "yi", 42: "sr", 43: "mk", 44: "bg", 45: "uk", 46: "be", 47: "uz", 48: "kk", 49: "az-Cyrl", 50: "az-Arab", 51: "hy", 52: "ka", 53: "mo", 54: "ky", 55: "tg", 56: "tk", 57: "mn-CN", 58: "mn", 59: "ps", 60: "ks", 61: "ku", 62: "sd", 63: "bo", 64: "ne", 65: "sa", 66: "mr", 67: "bn", 68: "as", 69: "gu", 70: "pa", 71: "or", 72: "ml", 73: "kn", 74: "ta", 75: "te", 76: "si", 77: "my", 78: "km", 79: "lo", 80: "vi", 81: "id", 82: "tl", 83: "ms", 84: "ms-Arab", 85: "am", 86: "ti", 87: "om", 88: "so", 89: "sw", 90: "rw", 91: "rn", 92: "ny", 93: "mg", 94: "eo", 128: "cy", 129: "eu", 130: "ca", 131: "la", 132: "qu", 133: "gn", 134: "ay", 135: "tt", 136: "ug", 137: "dz", 138: "jv", 139: "su", 140: "gl", 141: "af", 142: "br", 143: "iu", 144: "gd", 145: "gv", 146: "ga", 147: "to", 148: "el-polyton", 149: "kl", 150: "az", 151: "nn"}, Xe = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 5, 11: 1, 12: 4, 13: 0, 14: 6, 15: 0, 16: 0, 17: 0, 18: 0, 19: 2, 20: 4, 21: 9, 22: 21, 23: 3, 24: 29, 25: 29, 26: 29, 27: 29, 28: 29, 29: 0, 30: 0, 31: 4, 32: 7, 33: 25, 34: 0, 35: 0, 36: 0, 37: 0, 38: 29, 39: 29, 40: 0, 41: 5, 42: 7, 43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 48: 7, 49: 7, 50: 4, 51: 24, 52: 23, 53: 7, 54: 7, 55: 7, 56: 7, 57: 27, 58: 7, 59: 4, 60: 4, 61: 4, 62: 4, 63: 26, 64: 9, 65: 9, 66: 9, 67: 13, 68: 13, 69: 11, 70: 10, 71: 12, 72: 17, 73: 16, 74: 14, 75: 15, 76: 18, 77: 19, 78: 20, 79: 22, 80: 30, 81: 0, 82: 0, 83: 0, 84: 4, 85: 28, 86: 28, 87: 28, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 7, 136: 4, 137: 26, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 28, 144: 0, 145: 0, 146: 0, 147: 0, 148: 6, 149: 0, 150: 0, 151: 0}, Ye = {1078: "af", 1052: "sq", 1156: "gsw", 1118: "am", 5121: "ar-DZ", 15361: "ar-BH", 3073: "ar", 2049: "ar-IQ", 11265: "ar-JO", 13313: "ar-KW", 12289: "ar-LB", 4097: "ar-LY", 6145: "ary", 8193: "ar-OM", 16385: "ar-QA", 1025: "ar-SA", 10241: "ar-SY", 7169: "aeb", 14337: "ar-AE", 9217: "ar-YE", 1067: "hy", 1101: "as", 2092: "az-Cyrl", 1068: "az", 1133: "ba", 1069: "eu", 1059: "be", 2117: "bn", 1093: "bn-IN", 8218: "bs-Cyrl", 5146: "bs", 1150: "br", 1026: "bg", 1027: "ca", 3076: "zh-HK", 5124: "zh-MO", 2052: "zh", 4100: "zh-SG", 1028: "zh-TW", 1155: "co", 1050: "hr", 4122: "hr-BA", 1029: "cs", 1030: "da", 1164: "prs", 1125: "dv", 2067: "nl-BE", 1043: "nl", 3081: "en-AU", 10249: "en-BZ", 4105: "en-CA", 9225: "en-029", 16393: "en-IN", 6153: "en-IE", 8201: "en-JM", 17417: "en-MY", 5129: "en-NZ", 13321: "en-PH", 18441: "en-SG", 7177: "en-ZA", 11273: "en-TT", 2057: "en-GB", 1033: "en", 12297: "en-ZW", 1061: "et", 1080: "fo", 1124: "fil", 1035: "fi", 2060: "fr-BE", 3084: "fr-CA", 1036: "fr", 5132: "fr-LU", 6156: "fr-MC", 4108: "fr-CH", 1122: "fy", 1110: "gl", 1079: "ka", 3079: "de-AT", 1031: "de", 5127: "de-LI", 4103: "de-LU", 2055: "de-CH", 1032: "el", 1135: "kl", 1095: "gu", 1128: "ha", 1037: "he", 1081: "hi", 1038: "hu", 1039: "is", 1136: "ig", 1057: "id", 1117: "iu", 2141: "iu-Latn", 2108: "ga", 1076: "xh", 1077: "zu", 1040: "it", 2064: "it-CH", 1041: "ja", 1099: "kn", 1087: "kk", 1107: "km", 1158: "quc", 1159: "rw", 1089: "sw", 1111: "kok", 1042: "ko", 1088: "ky", 1108: "lo", 1062: "lv", 1063: "lt", 2094: "dsb", 1134: "lb", 1071: "mk", 2110: "ms-BN", 1086: "ms", 1100: "ml", 1082: "mt", 1153: "mi", 1146: "arn", 1102: "mr", 1148: "moh", 1104: "mn", 2128: "mn-CN", 1121: "ne", 1044: "nb", 2068: "nn", 1154: "oc", 1096: "or", 1123: "ps", 1045: "pl", 1046: "pt", 2070: "pt-PT", 1094: "pa", 1131: "qu-BO", 2155: "qu-EC", 3179: "qu", 1048: "ro", 1047: "rm", 1049: "ru", 9275: "smn", 4155: "smj-NO", 5179: "smj", 3131: "se-FI", 1083: "se", 2107: "se-SE", 8251: "sms", 6203: "sma-NO", 7227: "sms", 1103: "sa", 7194: "sr-Cyrl-BA", 3098: "sr", 6170: "sr-Latn-BA", 2074: "sr-Latn", 1132: "nso", 1074: "tn", 1115: "si", 1051: "sk", 1060: "sl", 11274: "es-AR", 16394: "es-BO", 13322: "es-CL", 9226: "es-CO", 5130: "es-CR", 7178: "es-DO", 12298: "es-EC", 17418: "es-SV", 4106: "es-GT", 18442: "es-HN", 2058: "es-MX", 19466: "es-NI", 6154: "es-PA", 15370: "es-PY", 10250: "es-PE", 20490: "es-PR", 3082: "es", 1034: "es", 21514: "es-US", 14346: "es-UY", 8202: "es-VE", 2077: "sv-FI", 1053: "sv", 1114: "syr", 1064: "tg", 2143: "tzm", 1097: "ta", 1092: "tt", 1098: "te", 1054: "th", 1105: "bo", 1055: "tr", 1090: "tk", 1152: "ug", 1058: "uk", 1070: "hsb", 1056: "ur", 2115: "uz-Cyrl", 1091: "uz", 1066: "vi", 1106: "cy", 1160: "wo", 1157: "sah", 1144: "ii", 1130: "yo"};
          function Ze(e3, t3, r3) {
            switch (e3) {
              case 0:
                if (t3 === 65535)
                  return "und";
                if (r3)
                  return r3[t3];
                break;
              case 1:
                return qe[t3];
              case 3:
                return Ye[t3];
            }
          }
          var Qe = "utf-16", Ke = {0: "macintosh", 1: "x-mac-japanese", 2: "x-mac-chinesetrad", 3: "x-mac-korean", 6: "x-mac-greek", 7: "x-mac-cyrillic", 9: "x-mac-devanagai", 10: "x-mac-gurmukhi", 11: "x-mac-gujarati", 12: "x-mac-oriya", 13: "x-mac-bengali", 14: "x-mac-tamil", 15: "x-mac-telugu", 16: "x-mac-kannada", 17: "x-mac-malayalam", 18: "x-mac-sinhalese", 19: "x-mac-burmese", 20: "x-mac-khmer", 21: "x-mac-thai", 22: "x-mac-lao", 23: "x-mac-georgian", 24: "x-mac-armenian", 25: "x-mac-chinesesimp", 26: "x-mac-tibetan", 27: "x-mac-mongolian", 28: "x-mac-ethiopic", 29: "x-mac-ce", 30: "x-mac-vietnamese", 31: "x-mac-extarabic"}, Je = {15: "x-mac-icelandic", 17: "x-mac-turkish", 18: "x-mac-croatian", 24: "x-mac-ce", 25: "x-mac-ce", 26: "x-mac-ce", 27: "x-mac-ce", 28: "x-mac-ce", 30: "x-mac-icelandic", 37: "x-mac-romanian", 38: "x-mac-ce", 39: "x-mac-ce", 40: "x-mac-ce", 143: "x-mac-inuit", 146: "x-mac-gaelic"};
          function $e(e3, t3, r3) {
            switch (e3) {
              case 0:
                return Qe;
              case 1:
                return Je[r3] || Ke[t3];
              case 3:
                if (t3 === 1 || t3 === 10)
                  return Qe;
            }
          }
          function et(e3) {
            var t3 = {};
            for (var r3 in e3)
              t3[e3[r3]] = parseInt(r3);
            return t3;
          }
          function tt(e3, t3, r3, i2, n2, a2) {
            return new $.Record("NameRecord", [{name: "platformID", type: "USHORT", value: e3}, {name: "encodingID", type: "USHORT", value: t3}, {name: "languageID", type: "USHORT", value: r3}, {name: "nameID", type: "USHORT", value: i2}, {name: "length", type: "USHORT", value: n2}, {name: "offset", type: "USHORT", value: a2}]);
          }
          function rt(e3, t3) {
            var r3 = function(e4, t4) {
              var r4 = e4.length, i3 = t4.length - r4 + 1;
              e:
                for (var n3 = 0; n3 < i3; n3++)
                  for (; n3 < i3; n3++) {
                    for (var a2 = 0; a2 < r4; a2++)
                      if (t4[n3 + a2] !== e4[a2])
                        continue e;
                    return n3;
                  }
              return -1;
            }(e3, t3);
            if (r3 < 0) {
              r3 = t3.length;
              for (var i2 = 0, n2 = e3.length; i2 < n2; ++i2)
                t3.push(e3[i2]);
            }
            return r3;
          }
          var it = {parse: function(e3, t3, r3) {
            for (var i2 = {}, n2 = new se.Parser(e3, t3), a2 = n2.parseUShort(), o2 = n2.parseUShort(), s2 = n2.offset + n2.parseUShort(), l2 = 0; l2 < o2; l2++) {
              var u2 = n2.parseUShort(), h2 = n2.parseUShort(), c2 = n2.parseUShort(), f2 = n2.parseUShort(), d2 = We[f2] || f2, p2 = n2.parseUShort(), m2 = n2.parseUShort(), v2 = Ze(u2, c2, r3), y2 = $e(u2, h2, c2);
              if (y2 !== void 0 && v2 !== void 0) {
                var g2 = void 0;
                if (g2 = y2 === Qe ? D.UTF16(e3, s2 + m2, p2) : D.MACSTRING(e3, s2 + m2, p2, y2)) {
                  var b2 = i2[d2];
                  b2 === void 0 && (b2 = i2[d2] = {}), b2[v2] = g2;
                }
              }
            }
            return a2 === 1 && n2.parseUShort(), i2;
          }, make: function(e3, t3) {
            var r3, i2 = [], n2 = {}, a2 = et(We);
            for (var o2 in e3) {
              var s2 = a2[o2];
              if (s2 === void 0 && (s2 = o2), r3 = parseInt(s2), isNaN(r3))
                throw new Error('Name table entry "' + o2 + '" does not exist, see nameTableNames for complete list.');
              n2[r3] = e3[o2], i2.push(r3);
            }
            for (var l2 = et(qe), u2 = et(Ye), h2 = [], c2 = [], f2 = 0; f2 < i2.length; f2++) {
              var d2 = n2[r3 = i2[f2]];
              for (var p2 in d2) {
                var m2 = d2[p2], v2 = 1, y2 = l2[p2], g2 = Xe[y2], b2 = $e(v2, g2, y2), _2 = k.MACSTRING(m2, b2);
                _2 === void 0 && (v2 = 0, (y2 = t3.indexOf(p2)) < 0 && (y2 = t3.length, t3.push(p2)), g2 = 4, _2 = k.UTF16(m2));
                var x2 = rt(_2, c2);
                h2.push(tt(v2, g2, y2, r3, _2.length, x2));
                var w2 = u2[p2];
                if (w2 !== void 0) {
                  var S2 = k.UTF16(m2), M2 = rt(S2, c2);
                  h2.push(tt(3, 1, w2, r3, S2.length, M2));
                }
              }
            }
            h2.sort(function(e4, t4) {
              return e4.platformID - t4.platformID || e4.encodingID - t4.encodingID || e4.languageID - t4.languageID || e4.nameID - t4.nameID;
            });
            for (var T2 = new $.Table("name", [{name: "format", type: "USHORT", value: 0}, {name: "count", type: "USHORT", value: h2.length}, {name: "stringOffset", type: "USHORT", value: 6 + 12 * h2.length}]), E2 = 0; E2 < h2.length; E2++)
              T2.fields.push({name: "record_" + E2, type: "RECORD", value: h2[E2]});
            return T2.fields.push({name: "strings", type: "LITERAL", value: c2}), T2;
          }}, nt = [{begin: 0, end: 127}, {begin: 128, end: 255}, {begin: 256, end: 383}, {begin: 384, end: 591}, {begin: 592, end: 687}, {begin: 688, end: 767}, {begin: 768, end: 879}, {begin: 880, end: 1023}, {begin: 11392, end: 11519}, {begin: 1024, end: 1279}, {begin: 1328, end: 1423}, {begin: 1424, end: 1535}, {begin: 42240, end: 42559}, {begin: 1536, end: 1791}, {begin: 1984, end: 2047}, {begin: 2304, end: 2431}, {begin: 2432, end: 2559}, {begin: 2560, end: 2687}, {begin: 2688, end: 2815}, {begin: 2816, end: 2943}, {begin: 2944, end: 3071}, {begin: 3072, end: 3199}, {begin: 3200, end: 3327}, {begin: 3328, end: 3455}, {begin: 3584, end: 3711}, {begin: 3712, end: 3839}, {begin: 4256, end: 4351}, {begin: 6912, end: 7039}, {begin: 4352, end: 4607}, {begin: 7680, end: 7935}, {begin: 7936, end: 8191}, {begin: 8192, end: 8303}, {begin: 8304, end: 8351}, {begin: 8352, end: 8399}, {begin: 8400, end: 8447}, {begin: 8448, end: 8527}, {begin: 8528, end: 8591}, {begin: 8592, end: 8703}, {begin: 8704, end: 8959}, {begin: 8960, end: 9215}, {begin: 9216, end: 9279}, {begin: 9280, end: 9311}, {begin: 9312, end: 9471}, {begin: 9472, end: 9599}, {begin: 9600, end: 9631}, {begin: 9632, end: 9727}, {begin: 9728, end: 9983}, {begin: 9984, end: 10175}, {begin: 12288, end: 12351}, {begin: 12352, end: 12447}, {begin: 12448, end: 12543}, {begin: 12544, end: 12591}, {begin: 12592, end: 12687}, {begin: 43072, end: 43135}, {begin: 12800, end: 13055}, {begin: 13056, end: 13311}, {begin: 44032, end: 55215}, {begin: 55296, end: 57343}, {begin: 67840, end: 67871}, {begin: 19968, end: 40959}, {begin: 57344, end: 63743}, {begin: 12736, end: 12783}, {begin: 64256, end: 64335}, {begin: 64336, end: 65023}, {begin: 65056, end: 65071}, {begin: 65040, end: 65055}, {begin: 65104, end: 65135}, {begin: 65136, end: 65279}, {begin: 65280, end: 65519}, {begin: 65520, end: 65535}, {begin: 3840, end: 4095}, {begin: 1792, end: 1871}, {begin: 1920, end: 1983}, {begin: 3456, end: 3583}, {begin: 4096, end: 4255}, {begin: 4608, end: 4991}, {begin: 5024, end: 5119}, {begin: 5120, end: 5759}, {begin: 5760, end: 5791}, {begin: 5792, end: 5887}, {begin: 6016, end: 6143}, {begin: 6144, end: 6319}, {begin: 10240, end: 10495}, {begin: 40960, end: 42127}, {begin: 5888, end: 5919}, {begin: 66304, end: 66351}, {begin: 66352, end: 66383}, {begin: 66560, end: 66639}, {begin: 118784, end: 119039}, {begin: 119808, end: 120831}, {begin: 1044480, end: 1048573}, {begin: 65024, end: 65039}, {begin: 917504, end: 917631}, {begin: 6400, end: 6479}, {begin: 6480, end: 6527}, {begin: 6528, end: 6623}, {begin: 6656, end: 6687}, {begin: 11264, end: 11359}, {begin: 11568, end: 11647}, {begin: 19904, end: 19967}, {begin: 43008, end: 43055}, {begin: 65536, end: 65663}, {begin: 65856, end: 65935}, {begin: 66432, end: 66463}, {begin: 66464, end: 66527}, {begin: 66640, end: 66687}, {begin: 66688, end: 66735}, {begin: 67584, end: 67647}, {begin: 68096, end: 68191}, {begin: 119552, end: 119647}, {begin: 73728, end: 74751}, {begin: 119648, end: 119679}, {begin: 7040, end: 7103}, {begin: 7168, end: 7247}, {begin: 7248, end: 7295}, {begin: 43136, end: 43231}, {begin: 43264, end: 43311}, {begin: 43312, end: 43359}, {begin: 43520, end: 43615}, {begin: 65936, end: 65999}, {begin: 66e3, end: 66047}, {begin: 66208, end: 66271}, {begin: 127024, end: 127135}];
          var at = {parse: function(e3, t3) {
            var r3 = {}, i2 = new se.Parser(e3, t3);
            r3.version = i2.parseUShort(), r3.xAvgCharWidth = i2.parseShort(), r3.usWeightClass = i2.parseUShort(), r3.usWidthClass = i2.parseUShort(), r3.fsType = i2.parseUShort(), r3.ySubscriptXSize = i2.parseShort(), r3.ySubscriptYSize = i2.parseShort(), r3.ySubscriptXOffset = i2.parseShort(), r3.ySubscriptYOffset = i2.parseShort(), r3.ySuperscriptXSize = i2.parseShort(), r3.ySuperscriptYSize = i2.parseShort(), r3.ySuperscriptXOffset = i2.parseShort(), r3.ySuperscriptYOffset = i2.parseShort(), r3.yStrikeoutSize = i2.parseShort(), r3.yStrikeoutPosition = i2.parseShort(), r3.sFamilyClass = i2.parseShort(), r3.panose = [];
            for (var n2 = 0; n2 < 10; n2++)
              r3.panose[n2] = i2.parseByte();
            return r3.ulUnicodeRange1 = i2.parseULong(), r3.ulUnicodeRange2 = i2.parseULong(), r3.ulUnicodeRange3 = i2.parseULong(), r3.ulUnicodeRange4 = i2.parseULong(), r3.achVendID = String.fromCharCode(i2.parseByte(), i2.parseByte(), i2.parseByte(), i2.parseByte()), r3.fsSelection = i2.parseUShort(), r3.usFirstCharIndex = i2.parseUShort(), r3.usLastCharIndex = i2.parseUShort(), r3.sTypoAscender = i2.parseShort(), r3.sTypoDescender = i2.parseShort(), r3.sTypoLineGap = i2.parseShort(), r3.usWinAscent = i2.parseUShort(), r3.usWinDescent = i2.parseUShort(), 1 <= r3.version && (r3.ulCodePageRange1 = i2.parseULong(), r3.ulCodePageRange2 = i2.parseULong()), 2 <= r3.version && (r3.sxHeight = i2.parseShort(), r3.sCapHeight = i2.parseShort(), r3.usDefaultChar = i2.parseUShort(), r3.usBreakChar = i2.parseUShort(), r3.usMaxContent = i2.parseUShort()), r3;
          }, make: function(e3) {
            return new $.Table("OS/2", [{name: "version", type: "USHORT", value: 3}, {name: "xAvgCharWidth", type: "SHORT", value: 0}, {name: "usWeightClass", type: "USHORT", value: 0}, {name: "usWidthClass", type: "USHORT", value: 0}, {name: "fsType", type: "USHORT", value: 0}, {name: "ySubscriptXSize", type: "SHORT", value: 650}, {name: "ySubscriptYSize", type: "SHORT", value: 699}, {name: "ySubscriptXOffset", type: "SHORT", value: 0}, {name: "ySubscriptYOffset", type: "SHORT", value: 140}, {name: "ySuperscriptXSize", type: "SHORT", value: 650}, {name: "ySuperscriptYSize", type: "SHORT", value: 699}, {name: "ySuperscriptXOffset", type: "SHORT", value: 0}, {name: "ySuperscriptYOffset", type: "SHORT", value: 479}, {name: "yStrikeoutSize", type: "SHORT", value: 49}, {name: "yStrikeoutPosition", type: "SHORT", value: 258}, {name: "sFamilyClass", type: "SHORT", value: 0}, {name: "bFamilyType", type: "BYTE", value: 0}, {name: "bSerifStyle", type: "BYTE", value: 0}, {name: "bWeight", type: "BYTE", value: 0}, {name: "bProportion", type: "BYTE", value: 0}, {name: "bContrast", type: "BYTE", value: 0}, {name: "bStrokeVariation", type: "BYTE", value: 0}, {name: "bArmStyle", type: "BYTE", value: 0}, {name: "bLetterform", type: "BYTE", value: 0}, {name: "bMidline", type: "BYTE", value: 0}, {name: "bXHeight", type: "BYTE", value: 0}, {name: "ulUnicodeRange1", type: "ULONG", value: 0}, {name: "ulUnicodeRange2", type: "ULONG", value: 0}, {name: "ulUnicodeRange3", type: "ULONG", value: 0}, {name: "ulUnicodeRange4", type: "ULONG", value: 0}, {name: "achVendID", type: "CHARARRAY", value: "XXXX"}, {name: "fsSelection", type: "USHORT", value: 0}, {name: "usFirstCharIndex", type: "USHORT", value: 0}, {name: "usLastCharIndex", type: "USHORT", value: 0}, {name: "sTypoAscender", type: "SHORT", value: 0}, {name: "sTypoDescender", type: "SHORT", value: 0}, {name: "sTypoLineGap", type: "SHORT", value: 0}, {name: "usWinAscent", type: "USHORT", value: 0}, {name: "usWinDescent", type: "USHORT", value: 0}, {name: "ulCodePageRange1", type: "ULONG", value: 0}, {name: "ulCodePageRange2", type: "ULONG", value: 0}, {name: "sxHeight", type: "SHORT", value: 0}, {name: "sCapHeight", type: "SHORT", value: 0}, {name: "usDefaultChar", type: "USHORT", value: 0}, {name: "usBreakChar", type: "USHORT", value: 0}, {name: "usMaxContext", type: "USHORT", value: 0}], e3);
          }, unicodeRanges: nt, getUnicodeRange: function(e3) {
            for (var t3 = 0; t3 < nt.length; t3 += 1) {
              var r3 = nt[t3];
              if (e3 >= r3.begin && e3 < r3.end)
                return t3;
            }
            return -1;
          }};
          var ot = {parse: function(e3, t3) {
            var r3 = {}, i2 = new se.Parser(e3, t3);
            switch (r3.version = i2.parseVersion(), r3.italicAngle = i2.parseFixed(), r3.underlinePosition = i2.parseShort(), r3.underlineThickness = i2.parseShort(), r3.isFixedPitch = i2.parseULong(), r3.minMemType42 = i2.parseULong(), r3.maxMemType42 = i2.parseULong(), r3.minMemType1 = i2.parseULong(), r3.maxMemType1 = i2.parseULong(), r3.version) {
              case 1:
                r3.names = fe.slice();
                break;
              case 2:
                r3.numberOfGlyphs = i2.parseUShort(), r3.glyphNameIndex = new Array(r3.numberOfGlyphs);
                for (var n2 = 0; n2 < r3.numberOfGlyphs; n2++)
                  r3.glyphNameIndex[n2] = i2.parseUShort();
                r3.names = [];
                for (var a2 = 0; a2 < r3.numberOfGlyphs; a2++)
                  if (r3.glyphNameIndex[a2] >= fe.length) {
                    var o2 = i2.parseChar();
                    r3.names.push(i2.parseString(o2));
                  }
                break;
              case 2.5:
                r3.numberOfGlyphs = i2.parseUShort(), r3.offset = new Array(r3.numberOfGlyphs);
                for (var s2 = 0; s2 < r3.numberOfGlyphs; s2++)
                  r3.offset[s2] = i2.parseChar();
            }
            return r3;
          }, make: function() {
            return new $.Table("post", [{name: "version", type: "FIXED", value: 196608}, {name: "italicAngle", type: "FIXED", value: 0}, {name: "underlinePosition", type: "FWORD", value: 0}, {name: "underlineThickness", type: "FWORD", value: 0}, {name: "isFixedPitch", type: "ULONG", value: 0}, {name: "minMemType42", type: "ULONG", value: 0}, {name: "maxMemType42", type: "ULONG", value: 0}, {name: "minMemType1", type: "ULONG", value: 0}, {name: "maxMemType1", type: "ULONG", value: 0}]);
          }}, st = new Array(9);
          st[1] = function() {
            var e3 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            return t3 === 1 ? {substFormat: 1, coverage: this.parsePointer(ae.coverage), deltaGlyphId: this.parseUShort()} : t3 === 2 ? {substFormat: 2, coverage: this.parsePointer(ae.coverage), substitute: this.parseOffset16List()} : void P.assert(false, "0x" + e3.toString(16) + ": lookup type 1 format must be 1 or 2.");
          }, st[2] = function() {
            var e3 = this.parseUShort();
            return P.argument(e3 === 1, "GSUB Multiple Substitution Subtable identifier-format must be 1"), {substFormat: e3, coverage: this.parsePointer(ae.coverage), sequences: this.parseListOfLists()};
          }, st[3] = function() {
            var e3 = this.parseUShort();
            return P.argument(e3 === 1, "GSUB Alternate Substitution Subtable identifier-format must be 1"), {substFormat: e3, coverage: this.parsePointer(ae.coverage), alternateSets: this.parseListOfLists()};
          }, st[4] = function() {
            var e3 = this.parseUShort();
            return P.argument(e3 === 1, "GSUB ligature table identifier-format must be 1"), {substFormat: e3, coverage: this.parsePointer(ae.coverage), ligatureSets: this.parseListOfLists(function() {
              return {ligGlyph: this.parseUShort(), components: this.parseUShortList(this.parseUShort() - 1)};
            })};
          };
          var lt = {sequenceIndex: ae.uShort, lookupListIndex: ae.uShort};
          st[5] = function() {
            var e3 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            if (t3 === 1)
              return {substFormat: t3, coverage: this.parsePointer(ae.coverage), ruleSets: this.parseListOfLists(function() {
                var e4 = this.parseUShort(), t4 = this.parseUShort();
                return {input: this.parseUShortList(e4 - 1), lookupRecords: this.parseRecordList(t4, lt)};
              })};
            if (t3 === 2)
              return {substFormat: t3, coverage: this.parsePointer(ae.coverage), classDef: this.parsePointer(ae.classDef), classSets: this.parseListOfLists(function() {
                var e4 = this.parseUShort(), t4 = this.parseUShort();
                return {classes: this.parseUShortList(e4 - 1), lookupRecords: this.parseRecordList(t4, lt)};
              })};
            if (t3 === 3) {
              var r3 = this.parseUShort(), i2 = this.parseUShort();
              return {substFormat: t3, coverages: this.parseList(r3, ae.pointer(ae.coverage)), lookupRecords: this.parseRecordList(i2, lt)};
            }
            P.assert(false, "0x" + e3.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
          }, st[6] = function() {
            var e3 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            return t3 === 1 ? {substFormat: 1, coverage: this.parsePointer(ae.coverage), chainRuleSets: this.parseListOfLists(function() {
              return {backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(lt)};
            })} : t3 === 2 ? {substFormat: 2, coverage: this.parsePointer(ae.coverage), backtrackClassDef: this.parsePointer(ae.classDef), inputClassDef: this.parsePointer(ae.classDef), lookaheadClassDef: this.parsePointer(ae.classDef), chainClassSet: this.parseListOfLists(function() {
              return {backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(lt)};
            })} : t3 === 3 ? {substFormat: 3, backtrackCoverage: this.parseList(ae.pointer(ae.coverage)), inputCoverage: this.parseList(ae.pointer(ae.coverage)), lookaheadCoverage: this.parseList(ae.pointer(ae.coverage)), lookupRecords: this.parseRecordList(lt)} : void P.assert(false, "0x" + e3.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
          }, st[7] = function() {
            var e3 = this.parseUShort();
            P.argument(e3 === 1, "GSUB Extension Substitution subtable identifier-format must be 1");
            var t3 = this.parseUShort(), r3 = new ae(this.data, this.offset + this.parseULong());
            return {substFormat: 1, lookupType: t3, extension: st[t3].call(r3)};
          }, st[8] = function() {
            var e3 = this.parseUShort();
            return P.argument(e3 === 1, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), {substFormat: e3, coverage: this.parsePointer(ae.coverage), backtrackCoverage: this.parseList(ae.pointer(ae.coverage)), lookaheadCoverage: this.parseList(ae.pointer(ae.coverage)), substitutes: this.parseUShortList()};
          };
          var ut = new Array(9);
          ut[1] = function(e3) {
            return e3.substFormat === 1 ? new $.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 1}, {name: "coverage", type: "TABLE", value: new $.Coverage(e3.coverage)}, {name: "deltaGlyphID", type: "USHORT", value: e3.deltaGlyphId}]) : new $.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 2}, {name: "coverage", type: "TABLE", value: new $.Coverage(e3.coverage)}].concat($.ushortList("substitute", e3.substitute)));
          }, ut[3] = function(e3) {
            return P.assert(e3.substFormat === 1, "Lookup type 3 substFormat must be 1."), new $.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 1}, {name: "coverage", type: "TABLE", value: new $.Coverage(e3.coverage)}].concat($.tableList("altSet", e3.alternateSets, function(e4) {
              return new $.Table("alternateSetTable", $.ushortList("alternate", e4));
            })));
          }, ut[4] = function(e3) {
            return P.assert(e3.substFormat === 1, "Lookup type 4 substFormat must be 1."), new $.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 1}, {name: "coverage", type: "TABLE", value: new $.Coverage(e3.coverage)}].concat($.tableList("ligSet", e3.ligatureSets, function(e4) {
              return new $.Table("ligatureSetTable", $.tableList("ligature", e4, function(e5) {
                return new $.Table("ligatureTable", [{name: "ligGlyph", type: "USHORT", value: e5.ligGlyph}].concat($.ushortList("component", e5.components, e5.components.length + 1)));
              }));
            })));
          };
          var ht = {parse: function(e3, t3) {
            var r3 = new ae(e3, t3 = t3 || 0), i2 = r3.parseVersion(1);
            return P.argument(i2 === 1 || i2 === 1.1, "Unsupported GSUB table version."), i2 === 1 ? {version: i2, scripts: r3.parseScriptList(), features: r3.parseFeatureList(), lookups: r3.parseLookupList(st)} : {version: i2, scripts: r3.parseScriptList(), features: r3.parseFeatureList(), lookups: r3.parseLookupList(st), variations: r3.parseFeatureVariationsList()};
          }, make: function(e3) {
            return new $.Table("GSUB", [{name: "version", type: "ULONG", value: 65536}, {name: "scripts", type: "TABLE", value: new $.ScriptList(e3.scripts)}, {name: "features", type: "TABLE", value: new $.FeatureList(e3.features)}, {name: "lookups", type: "TABLE", value: new $.LookupList(e3.lookups, ut)}]);
          }};
          var ct = {parse: function(e3, t3) {
            var r3 = new se.Parser(e3, t3), i2 = r3.parseULong();
            P.argument(i2 === 1, "Unsupported META table version."), r3.parseULong(), r3.parseULong();
            for (var n2 = r3.parseULong(), a2 = {}, o2 = 0; o2 < n2; o2++) {
              var s2 = r3.parseTag(), l2 = r3.parseULong(), u2 = r3.parseULong(), h2 = D.UTF8(e3, t3 + l2, u2);
              a2[s2] = h2;
            }
            return a2;
          }, make: function(e3) {
            var t3 = Object.keys(e3).length, r3 = "", i2 = 16 + 12 * t3, n2 = new $.Table("meta", [{name: "version", type: "ULONG", value: 1}, {name: "flags", type: "ULONG", value: 0}, {name: "offset", type: "ULONG", value: i2}, {name: "numTags", type: "ULONG", value: t3}]);
            for (var a2 in e3) {
              var o2 = r3.length;
              r3 += e3[a2], n2.fields.push({name: "tag " + a2, type: "TAG", value: a2}), n2.fields.push({name: "offset " + a2, type: "ULONG", value: i2 + o2}), n2.fields.push({name: "length " + a2, type: "ULONG", value: e3[a2].length});
            }
            return n2.fields.push({name: "stringPool", type: "CHARARRAY", value: r3}), n2;
          }};
          function ft(e3) {
            return Math.log(e3) / Math.log(2) | 0;
          }
          function dt2(e3) {
            for (; e3.length % 4 != 0; )
              e3.push(0);
            for (var t3 = 0, r3 = 0; r3 < e3.length; r3 += 4)
              t3 += (e3[r3] << 24) + (e3[r3 + 1] << 16) + (e3[r3 + 2] << 8) + e3[r3 + 3];
            return t3 %= Math.pow(2, 32);
          }
          function pt(e3, t3, r3, i2) {
            return new $.Record("Table Record", [{name: "tag", type: "TAG", value: e3 !== void 0 ? e3 : ""}, {name: "checkSum", type: "ULONG", value: t3 !== void 0 ? t3 : 0}, {name: "offset", type: "ULONG", value: r3 !== void 0 ? r3 : 0}, {name: "length", type: "ULONG", value: i2 !== void 0 ? i2 : 0}]);
          }
          function mt(e3) {
            var t3 = new $.Table("sfnt", [{name: "version", type: "TAG", value: "OTTO"}, {name: "numTables", type: "USHORT", value: 0}, {name: "searchRange", type: "USHORT", value: 0}, {name: "entrySelector", type: "USHORT", value: 0}, {name: "rangeShift", type: "USHORT", value: 0}]);
            t3.tables = e3, t3.numTables = e3.length;
            var r3 = Math.pow(2, ft(t3.numTables));
            t3.searchRange = 16 * r3, t3.entrySelector = ft(r3), t3.rangeShift = 16 * t3.numTables - t3.searchRange;
            for (var i2 = [], n2 = [], a2 = t3.sizeOf() + pt().sizeOf() * t3.numTables; a2 % 4 != 0; )
              a2 += 1, n2.push({name: "padding", type: "BYTE", value: 0});
            for (var o2 = 0; o2 < e3.length; o2 += 1) {
              var s2 = e3[o2];
              P.argument(s2.tableName.length === 4, "Table name" + s2.tableName + " is invalid.");
              var l2 = s2.sizeOf(), u2 = pt(s2.tableName, dt2(s2.encode()), a2, l2);
              for (i2.push({name: u2.tag + " Table Record", type: "RECORD", value: u2}), n2.push({name: s2.tableName + " table", type: "RECORD", value: s2}), a2 += l2, P.argument(!isNaN(a2), "Something went wrong calculating the offset."); a2 % 4 != 0; )
                a2 += 1, n2.push({name: "padding", type: "BYTE", value: 0});
            }
            return i2.sort(function(e4, t4) {
              return e4.value.tag > t4.value.tag ? 1 : -1;
            }), t3.fields = t3.fields.concat(i2), t3.fields = t3.fields.concat(n2), t3;
          }
          function vt(e3, t3, r3) {
            for (var i2 = 0; i2 < t3.length; i2 += 1) {
              var n2 = e3.charToGlyphIndex(t3[i2]);
              if (0 < n2)
                return e3.glyphs.get(n2).getMetrics();
            }
            return r3;
          }
          var yt = {make: mt, fontToTable: function(e3) {
            for (var t3, r3 = [], i2 = [], n2 = [], a2 = [], o2 = [], s2 = [], l2 = [], u2 = 0, h2 = 0, c2 = 0, f2 = 0, d2 = 0, p2 = 0; p2 < e3.glyphs.length; p2 += 1) {
              var m2 = e3.glyphs.get(p2), v2 = 0 | m2.unicode;
              if (isNaN(m2.advanceWidth))
                throw new Error("Glyph " + m2.name + " (" + p2 + "): advanceWidth is not a number.");
              (v2 < t3 || t3 === void 0) && 0 < v2 && (t3 = v2), u2 < v2 && (u2 = v2);
              var y2 = at.getUnicodeRange(v2);
              if (y2 < 32)
                h2 |= 1 << y2;
              else if (y2 < 64)
                c2 |= 1 << y2 - 32;
              else if (y2 < 96)
                f2 |= 1 << y2 - 64;
              else {
                if (!(y2 < 123))
                  throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                d2 |= 1 << y2 - 96;
              }
              if (m2.name !== ".notdef") {
                var g2 = m2.getMetrics();
                r3.push(g2.xMin), i2.push(g2.yMin), n2.push(g2.xMax), a2.push(g2.yMax), s2.push(g2.leftSideBearing), l2.push(g2.rightSideBearing), o2.push(m2.advanceWidth);
              }
            }
            var b2 = {xMin: Math.min.apply(null, r3), yMin: Math.min.apply(null, i2), xMax: Math.max.apply(null, n2), yMax: Math.max.apply(null, a2), advanceWidthMax: Math.max.apply(null, o2), advanceWidthAvg: function(e4) {
              for (var t4 = 0, r4 = 0; r4 < e4.length; r4 += 1)
                t4 += e4[r4];
              return t4 / e4.length;
            }(o2), minLeftSideBearing: Math.min.apply(null, s2), maxLeftSideBearing: Math.max.apply(null, s2), minRightSideBearing: Math.min.apply(null, l2)};
            b2.ascender = e3.ascender, b2.descender = e3.descender;
            var _2 = Ge.make({flags: 3, unitsPerEm: e3.unitsPerEm, xMin: b2.xMin, yMin: b2.yMin, xMax: b2.xMax, yMax: b2.yMax, lowestRecPPEM: 3, createdTimestamp: e3.createdTimestamp}), x2 = je.make({ascender: b2.ascender, descender: b2.descender, advanceWidthMax: b2.advanceWidthMax, minLeftSideBearing: b2.minLeftSideBearing, minRightSideBearing: b2.minRightSideBearing, xMaxExtent: b2.maxLeftSideBearing + (b2.xMax - b2.xMin), numberOfHMetrics: e3.glyphs.length}), w2 = He.make(e3.glyphs.length), S2 = at.make({xAvgCharWidth: Math.round(b2.advanceWidthAvg), usWeightClass: e3.tables.os2.usWeightClass, usWidthClass: e3.tables.os2.usWidthClass, usFirstCharIndex: t3, usLastCharIndex: u2, ulUnicodeRange1: h2, ulUnicodeRange2: c2, ulUnicodeRange3: f2, ulUnicodeRange4: d2, fsSelection: e3.tables.os2.fsSelection, sTypoAscender: b2.ascender, sTypoDescender: b2.descender, sTypoLineGap: 0, usWinAscent: b2.yMax, usWinDescent: Math.abs(b2.yMin), ulCodePageRange1: 1, sxHeight: vt(e3, "xyvw", {yMax: Math.round(b2.ascender / 2)}).yMax, sCapHeight: vt(e3, "HIKLEFJMNTZBDPRAGOQSUVWXY", b2).yMax, usDefaultChar: e3.hasChar(" ") ? 32 : 0, usBreakChar: e3.hasChar(" ") ? 32 : 0}), M2 = Ve.make(e3.glyphs), T2 = le.make(e3.glyphs), E2 = e3.getEnglishName("fontFamily"), C2 = e3.getEnglishName("fontSubfamily"), L2 = E2 + " " + C2, O2 = e3.getEnglishName("postScriptName");
            O2 = O2 || E2.replace(/\s/g, "") + "-" + C2;
            var P2 = {};
            for (var R2 in e3.names)
              P2[R2] = e3.names[R2];
            P2.uniqueID || (P2.uniqueID = {en: e3.getEnglishName("manufacturer") + ":" + L2}), P2.postScriptName || (P2.postScriptName = {en: O2}), P2.preferredFamily || (P2.preferredFamily = e3.names.fontFamily), P2.preferredSubfamily || (P2.preferredSubfamily = e3.names.fontSubfamily);
            var D2 = [], k2 = it.make(P2, D2), A2 = 0 < D2.length ? ze.make(D2) : void 0, I2 = ot.make(), U2 = Be.make(e3.glyphs, {version: e3.getEnglishName("version"), fullName: L2, familyName: E2, weightName: C2, postScriptName: O2, unitsPerEm: e3.unitsPerEm, fontBBox: [0, b2.yMin, b2.ascender, b2.advanceWidthMax]}), N2 = e3.metas && 0 < Object.keys(e3.metas).length ? ct.make(e3.metas) : void 0, F2 = [_2, x2, w2, S2, k2, T2, I2, U2, M2];
            A2 && F2.push(A2), e3.tables.gsub && F2.push(ht.make(e3.tables.gsub)), N2 && F2.push(N2);
            for (var B2 = mt(F2), G2 = dt2(B2.encode()), j2 = B2.fields, V2 = false, z2 = 0; z2 < j2.length; z2 += 1)
              if (j2[z2].name === "head table") {
                j2[z2].value.checkSumAdjustment = 2981146554 - G2, V2 = true;
                break;
              }
            if (!V2)
              throw new Error("Could not find head table with checkSum to adjust.");
            return B2;
          }, computeCheckSum: dt2};
          function gt(e3, t3) {
            for (var r3 = 0, i2 = e3.length - 1; r3 <= i2; ) {
              var n2 = r3 + i2 >>> 1, a2 = e3[n2].tag;
              if (a2 === t3)
                return n2;
              a2 < t3 ? r3 = 1 + n2 : i2 = n2 - 1;
            }
            return -r3 - 1;
          }
          function bt(e3, t3) {
            for (var r3 = 0, i2 = e3.length - 1; r3 <= i2; ) {
              var n2 = r3 + i2 >>> 1, a2 = e3[n2];
              if (a2 === t3)
                return n2;
              a2 < t3 ? r3 = 1 + n2 : i2 = n2 - 1;
            }
            return -r3 - 1;
          }
          function _t(e3, t3) {
            for (var r3, i2 = 0, n2 = e3.length - 1; i2 <= n2; ) {
              var a2 = i2 + n2 >>> 1, o2 = (r3 = e3[a2]).start;
              if (o2 === t3)
                return r3;
              o2 < t3 ? i2 = 1 + a2 : n2 = a2 - 1;
            }
            if (0 < i2)
              return t3 > (r3 = e3[i2 - 1]).end ? 0 : r3;
          }
          function xt(e3, t3) {
            this.font = e3, this.tableName = t3;
          }
          function wt(e3) {
            xt.call(this, e3, "gpos");
          }
          function St(e3) {
            xt.call(this, e3, "gsub");
          }
          function Mt(e3, t3) {
            var r3 = e3.length;
            if (r3 !== t3.length)
              return false;
            for (var i2 = 0; i2 < r3; i2++)
              if (e3[i2] !== t3[i2])
                return false;
            return true;
          }
          function Tt(e3, t3, r3) {
            for (var i2 = e3.subtables, n2 = 0; n2 < i2.length; n2++) {
              var a2 = i2[n2];
              if (a2.substFormat === t3)
                return a2;
            }
            if (r3)
              return i2.push(r3), r3;
          }
          function Et(e3) {
            for (var t3 = new ArrayBuffer(e3.length), r3 = new Uint8Array(t3), i2 = 0; i2 < e3.length; ++i2)
              r3[i2] = e3[i2];
            return t3;
          }
          function Ct(e3, t3) {
            if (!e3)
              throw t3;
          }
          function Lt(e3, t3, r3, i2, n2) {
            var a2;
            return a2 = 0 < (t3 & i2) ? (a2 = e3.parseByte(), (t3 & n2) == 0 && (a2 = -a2), r3 + a2) : 0 < (t3 & n2) ? r3 : r3 + e3.parseShort();
          }
          function Ot(e3, t3, r3) {
            var i2, n2, a2 = new se.Parser(t3, r3);
            if (e3.numberOfContours = a2.parseShort(), e3._xMin = a2.parseShort(), e3._yMin = a2.parseShort(), e3._xMax = a2.parseShort(), e3._yMax = a2.parseShort(), 0 < e3.numberOfContours) {
              for (var o2 = e3.endPointIndices = [], s2 = 0; s2 < e3.numberOfContours; s2 += 1)
                o2.push(a2.parseUShort());
              e3.instructionLength = a2.parseUShort(), e3.instructions = [];
              for (var l2 = 0; l2 < e3.instructionLength; l2 += 1)
                e3.instructions.push(a2.parseByte());
              var u2 = o2[o2.length - 1] + 1;
              i2 = [];
              for (var h2 = 0; h2 < u2; h2 += 1)
                if (n2 = a2.parseByte(), i2.push(n2), 0 < (8 & n2))
                  for (var c2 = a2.parseByte(), f2 = 0; f2 < c2; f2 += 1)
                    i2.push(n2), h2 += 1;
              if (P.argument(i2.length === u2, "Bad flags."), 0 < o2.length) {
                var d2, p2 = [];
                if (0 < u2) {
                  for (var m2 = 0; m2 < u2; m2 += 1)
                    n2 = i2[m2], (d2 = {}).onCurve = !!(1 & n2), d2.lastPointOfContour = 0 <= o2.indexOf(m2), p2.push(d2);
                  for (var v2 = 0, y2 = 0; y2 < u2; y2 += 1)
                    n2 = i2[y2], (d2 = p2[y2]).x = Lt(a2, n2, v2, 2, 16), v2 = d2.x;
                  for (var g2 = 0, b2 = 0; b2 < u2; b2 += 1)
                    n2 = i2[b2], (d2 = p2[b2]).y = Lt(a2, n2, g2, 4, 32), g2 = d2.y;
                }
                e3.points = p2;
              } else
                e3.points = [];
            } else if (e3.numberOfContours === 0)
              e3.points = [];
            else {
              e3.isComposite = true, e3.points = [], e3.components = [];
              for (var _2 = true; _2; ) {
                i2 = a2.parseUShort();
                var x2 = {glyphIndex: a2.parseUShort(), xScale: 1, scale01: 0, scale10: 0, yScale: 1, dx: 0, dy: 0};
                0 < (1 & i2) ? 0 < (2 & i2) ? (x2.dx = a2.parseShort(), x2.dy = a2.parseShort()) : x2.matchedPoints = [a2.parseUShort(), a2.parseUShort()] : 0 < (2 & i2) ? (x2.dx = a2.parseChar(), x2.dy = a2.parseChar()) : x2.matchedPoints = [a2.parseByte(), a2.parseByte()], 0 < (8 & i2) ? x2.xScale = x2.yScale = a2.parseF2Dot14() : 0 < (64 & i2) ? (x2.xScale = a2.parseF2Dot14(), x2.yScale = a2.parseF2Dot14()) : 0 < (128 & i2) && (x2.xScale = a2.parseF2Dot14(), x2.scale01 = a2.parseF2Dot14(), x2.scale10 = a2.parseF2Dot14(), x2.yScale = a2.parseF2Dot14()), e3.components.push(x2), _2 = !!(32 & i2);
              }
              if (256 & i2) {
                e3.instructionLength = a2.parseUShort(), e3.instructions = [];
                for (var w2 = 0; w2 < e3.instructionLength; w2 += 1)
                  e3.instructions.push(a2.parseByte());
              }
            }
          }
          function Pt(e3, t3) {
            for (var r3 = [], i2 = 0; i2 < e3.length; i2 += 1) {
              var n2 = e3[i2], a2 = {x: t3.xScale * n2.x + t3.scale01 * n2.y + t3.dx, y: t3.scale10 * n2.x + t3.yScale * n2.y + t3.dy, onCurve: n2.onCurve, lastPointOfContour: n2.lastPointOfContour};
              r3.push(a2);
            }
            return r3;
          }
          function Rt(e3) {
            var t3 = new I();
            if (!e3)
              return t3;
            for (var r3 = function(e4) {
              for (var t4 = [], r4 = [], i3 = 0; i3 < e4.length; i3 += 1) {
                var n3 = e4[i3];
                r4.push(n3), n3.lastPointOfContour && (t4.push(r4), r4 = []);
              }
              return P.argument(r4.length === 0, "There are still points left in the current contour."), t4;
            }(e3), i2 = 0; i2 < r3.length; ++i2) {
              var n2 = r3[i2], a2 = null, o2 = n2[n2.length - 1], s2 = n2[0];
              if (o2.onCurve)
                t3.moveTo(o2.x, o2.y);
              else if (s2.onCurve)
                t3.moveTo(s2.x, s2.y);
              else {
                var l2 = {x: 0.5 * (o2.x + s2.x), y: 0.5 * (o2.y + s2.y)};
                t3.moveTo(l2.x, l2.y);
              }
              for (var u2 = 0; u2 < n2.length; ++u2)
                if (a2 = o2, o2 = s2, s2 = n2[(u2 + 1) % n2.length], o2.onCurve)
                  t3.lineTo(o2.x, o2.y);
                else {
                  var h2 = s2;
                  a2.onCurve || {x: 0.5 * (o2.x + a2.x), y: 0.5 * (o2.y + a2.y)}, s2.onCurve || (h2 = {x: 0.5 * (o2.x + s2.x), y: 0.5 * (o2.y + s2.y)}), t3.quadraticCurveTo(o2.x, o2.y, h2.x, h2.y);
                }
              t3.closePath();
            }
            return t3;
          }
          function Dt(e3, t3) {
            if (t3.isComposite)
              for (var r3 = 0; r3 < t3.components.length; r3 += 1) {
                var i2 = t3.components[r3], n2 = e3.get(i2.glyphIndex);
                if (n2.getPath(), n2.points) {
                  var a2 = void 0;
                  if (i2.matchedPoints === void 0)
                    a2 = Pt(n2.points, i2);
                  else {
                    if (i2.matchedPoints[0] > t3.points.length - 1 || i2.matchedPoints[1] > n2.points.length - 1)
                      throw Error("Matched points out of range in " + t3.name);
                    var o2 = t3.points[i2.matchedPoints[0]], s2 = n2.points[i2.matchedPoints[1]], l2 = {xScale: i2.xScale, scale01: i2.scale01, scale10: i2.scale10, yScale: i2.yScale, dx: 0, dy: 0};
                    s2 = Pt([s2], l2)[0], l2.dx = o2.x - s2.x, l2.dy = o2.y - s2.y, a2 = Pt(n2.points, l2);
                  }
                  t3.points = t3.points.concat(a2);
                }
              }
            return Rt(t3.points);
          }
          (wt.prototype = xt.prototype = {searchTag: gt, binSearch: bt, getTable: function(e3) {
            var t3 = this.font.tables[this.tableName];
            return !t3 && e3 && (t3 = this.font.tables[this.tableName] = this.createDefaultTable()), t3;
          }, getScriptNames: function() {
            var e3 = this.getTable();
            return e3 ? e3.scripts.map(function(e4) {
              return e4.tag;
            }) : [];
          }, getDefaultScriptName: function() {
            var e3 = this.getTable();
            if (e3) {
              for (var t3 = false, r3 = 0; r3 < e3.scripts.length; r3++) {
                var i2 = e3.scripts[r3].tag;
                if (i2 === "DFLT")
                  return i2;
                i2 === "latn" && (t3 = true);
              }
              return t3 ? "latn" : void 0;
            }
          }, getScriptTable: function(e3, t3) {
            var r3 = this.getTable(t3);
            if (r3) {
              e3 = e3 || "DFLT";
              var i2 = r3.scripts, n2 = gt(r3.scripts, e3);
              if (0 <= n2)
                return i2[n2].script;
              if (t3) {
                var a2 = {tag: e3, script: {defaultLangSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []}, langSysRecords: []}};
                return i2.splice(-1 - n2, 0, a2), a2.script;
              }
            }
          }, getLangSysTable: function(e3, t3, r3) {
            var i2 = this.getScriptTable(e3, r3);
            if (i2) {
              if (!t3 || t3 === "dflt" || t3 === "DFLT")
                return i2.defaultLangSys;
              var n2 = gt(i2.langSysRecords, t3);
              if (0 <= n2)
                return i2.langSysRecords[n2].langSys;
              if (r3) {
                var a2 = {tag: t3, langSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []}};
                return i2.langSysRecords.splice(-1 - n2, 0, a2), a2.langSys;
              }
            }
          }, getFeatureTable: function(e3, t3, r3, i2) {
            var n2 = this.getLangSysTable(e3, t3, i2);
            if (n2) {
              for (var a2, o2 = n2.featureIndexes, s2 = this.font.tables[this.tableName].features, l2 = 0; l2 < o2.length; l2++)
                if ((a2 = s2[o2[l2]]).tag === r3)
                  return a2.feature;
              if (i2) {
                var u2 = s2.length;
                return P.assert(u2 === 0 || r3 >= s2[u2 - 1].tag, "Features must be added in alphabetical order."), a2 = {tag: r3, feature: {params: 0, lookupListIndexes: []}}, s2.push(a2), o2.push(u2), a2.feature;
              }
            }
          }, getLookupTables: function(e3, t3, r3, i2, n2) {
            var a2 = this.getFeatureTable(e3, t3, r3, n2), o2 = [];
            if (a2) {
              for (var s2, l2 = a2.lookupListIndexes, u2 = this.font.tables[this.tableName].lookups, h2 = 0; h2 < l2.length; h2++)
                (s2 = u2[l2[h2]]).lookupType === i2 && o2.push(s2);
              if (o2.length === 0 && n2) {
                s2 = {lookupType: i2, lookupFlag: 0, subtables: [], markFilteringSet: void 0};
                var c2 = u2.length;
                return u2.push(s2), l2.push(c2), [s2];
              }
            }
            return o2;
          }, getGlyphClass: function(e3, t3) {
            switch (e3.format) {
              case 1:
                return e3.startGlyph <= t3 && t3 < e3.startGlyph + e3.classes.length ? e3.classes[t3 - e3.startGlyph] : 0;
              case 2:
                var r3 = _t(e3.ranges, t3);
                return r3 ? r3.classId : 0;
            }
          }, getCoverageIndex: function(e3, t3) {
            switch (e3.format) {
              case 1:
                var r3 = bt(e3.glyphs, t3);
                return 0 <= r3 ? r3 : -1;
              case 2:
                var i2 = _t(e3.ranges, t3);
                return i2 ? i2.index + t3 - i2.start : -1;
            }
          }, expandCoverage: function(e3) {
            if (e3.format === 1)
              return e3.glyphs;
            for (var t3 = [], r3 = e3.ranges, i2 = 0; i2 < r3.length; i2++)
              for (var n2 = r3[i2], a2 = n2.start, o2 = n2.end, s2 = a2; s2 <= o2; s2++)
                t3.push(s2);
            return t3;
          }}).init = function() {
            var e3 = this.getDefaultScriptName();
            this.defaultKerningTables = this.getKerningTables(e3);
          }, wt.prototype.getKerningValue = function(e3, t3, r3) {
            for (var i2 = 0; i2 < e3.length; i2++)
              for (var n2 = e3[i2].subtables, a2 = 0; a2 < n2.length; a2++) {
                var o2 = n2[a2], s2 = this.getCoverageIndex(o2.coverage, t3);
                if (!(s2 < 0))
                  switch (o2.posFormat) {
                    case 1:
                      for (var l2 = o2.pairSets[s2], u2 = 0; u2 < l2.length; u2++) {
                        var h2 = l2[u2];
                        if (h2.secondGlyph === r3)
                          return h2.value1 && h2.value1.xAdvance || 0;
                      }
                      break;
                    case 2:
                      var c2 = this.getGlyphClass(o2.classDef1, t3), f2 = this.getGlyphClass(o2.classDef2, r3), d2 = o2.classRecords[c2][f2];
                      return d2.value1 && d2.value1.xAdvance || 0;
                  }
              }
            return 0;
          }, wt.prototype.getKerningTables = function(e3, t3) {
            if (this.font.tables.gpos)
              return this.getLookupTables(e3, t3, "kern", 2);
          }, (St.prototype = xt.prototype).createDefaultTable = function() {
            return {version: 1, scripts: [{tag: "DFLT", script: {defaultLangSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []}, langSysRecords: []}}], features: [], lookups: []};
          }, St.prototype.getSingle = function(e3, t3, r3) {
            for (var i2 = [], n2 = this.getLookupTables(t3, r3, e3, 1), a2 = 0; a2 < n2.length; a2++)
              for (var o2 = n2[a2].subtables, s2 = 0; s2 < o2.length; s2++) {
                var l2 = o2[s2], u2 = this.expandCoverage(l2.coverage), h2 = void 0;
                if (l2.substFormat === 1) {
                  var c2 = l2.deltaGlyphId;
                  for (h2 = 0; h2 < u2.length; h2++) {
                    var f2 = u2[h2];
                    i2.push({sub: f2, by: f2 + c2});
                  }
                } else {
                  var d2 = l2.substitute;
                  for (h2 = 0; h2 < u2.length; h2++)
                    i2.push({sub: u2[h2], by: d2[h2]});
                }
              }
            return i2;
          }, St.prototype.getAlternates = function(e3, t3, r3) {
            for (var i2 = [], n2 = this.getLookupTables(t3, r3, e3, 3), a2 = 0; a2 < n2.length; a2++)
              for (var o2 = n2[a2].subtables, s2 = 0; s2 < o2.length; s2++)
                for (var l2 = o2[s2], u2 = this.expandCoverage(l2.coverage), h2 = l2.alternateSets, c2 = 0; c2 < u2.length; c2++)
                  i2.push({sub: u2[c2], by: h2[c2]});
            return i2;
          }, St.prototype.getLigatures = function(e3, t3, r3) {
            for (var i2 = [], n2 = this.getLookupTables(t3, r3, e3, 4), a2 = 0; a2 < n2.length; a2++)
              for (var o2 = n2[a2].subtables, s2 = 0; s2 < o2.length; s2++)
                for (var l2 = o2[s2], u2 = this.expandCoverage(l2.coverage), h2 = l2.ligatureSets, c2 = 0; c2 < u2.length; c2++)
                  for (var f2 = u2[c2], d2 = h2[c2], p2 = 0; p2 < d2.length; p2++) {
                    var m2 = d2[p2];
                    i2.push({sub: [f2].concat(m2.components), by: m2.ligGlyph});
                  }
            return i2;
          }, St.prototype.addSingle = function(e3, t3, r3, i2) {
            var n2 = Tt(this.getLookupTables(r3, i2, e3, 1, true)[0], 2, {substFormat: 2, coverage: {format: 1, glyphs: []}, substitute: []});
            P.assert(n2.coverage.format === 1, "Ligature: unable to modify coverage table format " + n2.coverage.format);
            var a2 = t3.sub, o2 = this.binSearch(n2.coverage.glyphs, a2);
            o2 < 0 && (o2 = -1 - o2, n2.coverage.glyphs.splice(o2, 0, a2), n2.substitute.splice(o2, 0, 0)), n2.substitute[o2] = t3.by;
          }, St.prototype.addAlternate = function(e3, t3, r3, i2) {
            var n2 = Tt(this.getLookupTables(r3, i2, e3, 3, true)[0], 1, {substFormat: 1, coverage: {format: 1, glyphs: []}, alternateSets: []});
            P.assert(n2.coverage.format === 1, "Ligature: unable to modify coverage table format " + n2.coverage.format);
            var a2 = t3.sub, o2 = this.binSearch(n2.coverage.glyphs, a2);
            o2 < 0 && (o2 = -1 - o2, n2.coverage.glyphs.splice(o2, 0, a2), n2.alternateSets.splice(o2, 0, 0)), n2.alternateSets[o2] = t3.by;
          }, St.prototype.addLigature = function(e3, t3, r3, i2) {
            var n2 = this.getLookupTables(r3, i2, e3, 4, true)[0], a2 = n2.subtables[0];
            a2 || (a2 = {substFormat: 1, coverage: {format: 1, glyphs: []}, ligatureSets: []}, n2.subtables[0] = a2), P.assert(a2.coverage.format === 1, "Ligature: unable to modify coverage table format " + a2.coverage.format);
            var o2 = t3.sub[0], s2 = t3.sub.slice(1), l2 = {ligGlyph: t3.by, components: s2}, u2 = this.binSearch(a2.coverage.glyphs, o2);
            if (0 <= u2) {
              for (var h2 = a2.ligatureSets[u2], c2 = 0; c2 < h2.length; c2++)
                if (Mt(h2[c2].components, s2))
                  return;
              h2.push(l2);
            } else
              u2 = -1 - u2, a2.coverage.glyphs.splice(u2, 0, o2), a2.ligatureSets.splice(u2, 0, [l2]);
          }, St.prototype.getFeature = function(e3, t3, r3) {
            if (/ss\d\d/.test(e3))
              return this.getSingle(e3, t3, r3);
            switch (e3) {
              case "aalt":
              case "salt":
                return this.getSingle(e3, t3, r3).concat(this.getAlternates(e3, t3, r3));
              case "dlig":
              case "liga":
              case "rlig":
                return this.getLigatures(e3, t3, r3);
            }
          }, St.prototype.add = function(e3, t3, r3, i2) {
            if (/ss\d\d/.test(e3))
              return this.addSingle(e3, t3, r3, i2);
            switch (e3) {
              case "aalt":
              case "salt":
                return typeof t3.by == "number" ? this.addSingle(e3, t3, r3, i2) : this.addAlternate(e3, t3, r3, i2);
              case "dlig":
              case "liga":
              case "rlig":
                return this.addLigature(e3, t3, r3, i2);
            }
          };
          var kt, At, It, Ut, Nt = {getPath: Rt, parse: function(e3, t3, r3, i2) {
            for (var n2 = new xe.GlyphSet(i2), a2 = 0; a2 < r3.length - 1; a2 += 1) {
              var o2 = r3[a2];
              o2 !== r3[a2 + 1] ? n2.push(a2, xe.ttfGlyphLoader(i2, a2, Ot, e3, t3 + o2, Dt)) : n2.push(a2, xe.glyphLoader(i2, a2));
            }
            return n2;
          }};
          function Ft(e3) {
            this.font = e3, this.getCommands = function(e4) {
              return Nt.getPath(e4).commands;
            }, this._fpgmState = this._prepState = void 0, this._errorState = 0;
          }
          function Bt(e3) {
            return e3;
          }
          function Gt(e3) {
            return Math.sign(e3) * Math.round(Math.abs(e3));
          }
          function jt(e3) {
            return Math.sign(e3) * Math.round(Math.abs(2 * e3)) / 2;
          }
          function Vt(e3) {
            return Math.sign(e3) * (Math.round(Math.abs(e3) + 0.5) - 0.5);
          }
          function zt(e3) {
            return Math.sign(e3) * Math.ceil(Math.abs(e3));
          }
          function Ht(e3) {
            return Math.sign(e3) * Math.floor(Math.abs(e3));
          }
          function Wt(e3) {
            var t3 = this.srPeriod, r3 = this.srPhase, i2 = 1;
            return e3 < 0 && (e3 = -e3, i2 = -1), e3 += this.srThreshold - r3, e3 = Math.trunc(e3 / t3) * t3, (e3 += r3) < 0 ? r3 * i2 : e3 * i2;
          }
          var qt = {x: 1, y: 0, axis: "x", distance: function(e3, t3, r3, i2) {
            return (r3 ? e3.xo : e3.x) - (i2 ? t3.xo : t3.x);
          }, interpolate: function(e3, t3, r3, i2) {
            var n2, a2, o2, s2, l2, u2, h2;
            if (!i2 || i2 === this)
              return n2 = e3.xo - t3.xo, a2 = e3.xo - r3.xo, l2 = t3.x - t3.xo, u2 = r3.x - r3.xo, (h2 = (o2 = Math.abs(n2)) + (s2 = Math.abs(a2))) === 0 ? void (e3.x = e3.xo + (l2 + u2) / 2) : void (e3.x = e3.xo + (l2 * s2 + u2 * o2) / h2);
            n2 = i2.distance(e3, t3, true, true), a2 = i2.distance(e3, r3, true, true), l2 = i2.distance(t3, t3, false, true), u2 = i2.distance(r3, r3, false, true), (h2 = (o2 = Math.abs(n2)) + (s2 = Math.abs(a2))) !== 0 ? qt.setRelative(e3, e3, (l2 * s2 + u2 * o2) / h2, i2, true) : qt.setRelative(e3, e3, (l2 + u2) / 2, i2, true);
          }, normalSlope: Number.NEGATIVE_INFINITY, setRelative: function(e3, t3, r3, i2, n2) {
            if (i2 && i2 !== this) {
              var a2 = n2 ? t3.xo : t3.x, o2 = n2 ? t3.yo : t3.y, s2 = a2 + r3 * i2.x, l2 = o2 + r3 * i2.y;
              e3.x = s2 + (e3.y - l2) / i2.normalSlope;
            } else
              e3.x = (n2 ? t3.xo : t3.x) + r3;
          }, slope: 0, touch: function(e3) {
            e3.xTouched = true;
          }, touched: function(e3) {
            return e3.xTouched;
          }, untouch: function(e3) {
            e3.xTouched = false;
          }}, Xt = {x: 0, y: 1, axis: "y", distance: function(e3, t3, r3, i2) {
            return (r3 ? e3.yo : e3.y) - (i2 ? t3.yo : t3.y);
          }, interpolate: function(e3, t3, r3, i2) {
            var n2, a2, o2, s2, l2, u2, h2;
            if (!i2 || i2 === this)
              return n2 = e3.yo - t3.yo, a2 = e3.yo - r3.yo, l2 = t3.y - t3.yo, u2 = r3.y - r3.yo, (h2 = (o2 = Math.abs(n2)) + (s2 = Math.abs(a2))) === 0 ? void (e3.y = e3.yo + (l2 + u2) / 2) : void (e3.y = e3.yo + (l2 * s2 + u2 * o2) / h2);
            n2 = i2.distance(e3, t3, true, true), a2 = i2.distance(e3, r3, true, true), l2 = i2.distance(t3, t3, false, true), u2 = i2.distance(r3, r3, false, true), (h2 = (o2 = Math.abs(n2)) + (s2 = Math.abs(a2))) !== 0 ? Xt.setRelative(e3, e3, (l2 * s2 + u2 * o2) / h2, i2, true) : Xt.setRelative(e3, e3, (l2 + u2) / 2, i2, true);
          }, normalSlope: 0, setRelative: function(e3, t3, r3, i2, n2) {
            if (i2 && i2 !== this) {
              var a2 = n2 ? t3.xo : t3.x, o2 = n2 ? t3.yo : t3.y, s2 = a2 + r3 * i2.x, l2 = o2 + r3 * i2.y;
              e3.y = l2 + i2.normalSlope * (e3.x - s2);
            } else
              e3.y = (n2 ? t3.yo : t3.y) + r3;
          }, slope: Number.POSITIVE_INFINITY, touch: function(e3) {
            e3.yTouched = true;
          }, touched: function(e3) {
            return e3.yTouched;
          }, untouch: function(e3) {
            e3.yTouched = false;
          }};
          function Yt(e3, t3) {
            this.x = e3, this.y = t3, this.axis = void 0, this.slope = t3 / e3, this.normalSlope = -e3 / t3, Object.freeze(this);
          }
          function Zt(e3, t3) {
            var r3 = Math.sqrt(e3 * e3 + t3 * t3);
            return t3 /= r3, (e3 /= r3) === 1 && t3 === 0 ? qt : e3 === 0 && t3 === 1 ? Xt : new Yt(e3, t3);
          }
          function Qt(e3, t3, r3, i2) {
            this.x = this.xo = Math.round(64 * e3) / 64, this.y = this.yo = Math.round(64 * t3) / 64, this.lastPointOfContour = r3, this.onCurve = i2, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = false, this.yTouched = false, Object.preventExtensions(this);
          }
          Object.freeze(qt), Object.freeze(Xt), Yt.prototype.distance = function(e3, t3, r3, i2) {
            return this.x * qt.distance(e3, t3, r3, i2) + this.y * Xt.distance(e3, t3, r3, i2);
          }, Yt.prototype.interpolate = function(e3, t3, r3, i2) {
            var n2, a2, o2, s2, l2, u2, h2;
            o2 = i2.distance(e3, t3, true, true), s2 = i2.distance(e3, r3, true, true), n2 = i2.distance(t3, t3, false, true), a2 = i2.distance(r3, r3, false, true), (h2 = (l2 = Math.abs(o2)) + (u2 = Math.abs(s2))) !== 0 ? this.setRelative(e3, e3, (n2 * u2 + a2 * l2) / h2, i2, true) : this.setRelative(e3, e3, (n2 + a2) / 2, i2, true);
          }, Yt.prototype.setRelative = function(e3, t3, r3, i2, n2) {
            i2 = i2 || this;
            var a2 = n2 ? t3.xo : t3.x, o2 = n2 ? t3.yo : t3.y, s2 = a2 + r3 * i2.x, l2 = o2 + r3 * i2.y, u2 = i2.normalSlope, h2 = this.slope, c2 = e3.x, f2 = e3.y;
            e3.x = (h2 * c2 - u2 * s2 + l2 - f2) / (h2 - u2), e3.y = h2 * (e3.x - c2) + f2;
          }, Yt.prototype.touch = function(e3) {
            e3.xTouched = true, e3.yTouched = true;
          }, Qt.prototype.nextTouched = function(e3) {
            for (var t3 = this.nextPointOnContour; !e3.touched(t3) && t3 !== this; )
              t3 = t3.nextPointOnContour;
            return t3;
          }, Qt.prototype.prevTouched = function(e3) {
            for (var t3 = this.prevPointOnContour; !e3.touched(t3) && t3 !== this; )
              t3 = t3.prevPointOnContour;
            return t3;
          };
          var Kt = Object.freeze(new Qt(0, 0)), Jt = {cvCutIn: 17 / 16, deltaBase: 9, deltaShift: 0.125, loop: 1, minDis: 1, autoFlip: true};
          function $t(e3, t3) {
            switch (this.env = e3, this.stack = [], this.prog = t3, e3) {
              case "glyf":
                this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
              case "prep":
                this.fv = this.pv = this.dpv = qt, this.round = Gt;
            }
          }
          function er(e3) {
            for (var t3 = e3.tZone = new Array(e3.gZone.length), r3 = 0; r3 < t3.length; r3++)
              t3[r3] = new Qt(0, 0);
          }
          function tr(e3, t3) {
            var r3, i2 = e3.prog, n2 = e3.ip, a2 = 1;
            do {
              if ((r3 = i2[++n2]) === 88)
                a2++;
              else if (r3 === 89)
                a2--;
              else if (r3 === 64)
                n2 += i2[n2 + 1] + 1;
              else if (r3 === 65)
                n2 += 2 * i2[n2 + 1] + 1;
              else if (176 <= r3 && r3 <= 183)
                n2 += r3 - 176 + 1;
              else if (184 <= r3 && r3 <= 191)
                n2 += 2 * (r3 - 184 + 1);
              else if (t3 && a2 === 1 && r3 === 27)
                break;
            } while (0 < a2);
            e3.ip = n2;
          }
          function rr(e3, t3) {
            T.DEBUG && console.log(t3.step, "SVTCA[" + e3.axis + "]"), t3.fv = t3.pv = t3.dpv = e3;
          }
          function ir(e3, t3) {
            T.DEBUG && console.log(t3.step, "SPVTCA[" + e3.axis + "]"), t3.pv = t3.dpv = e3;
          }
          function nr(e3, t3) {
            T.DEBUG && console.log(t3.step, "SFVTCA[" + e3.axis + "]"), t3.fv = e3;
          }
          function ar(e3, t3) {
            var r3, i2, n2 = t3.stack, a2 = n2.pop(), o2 = n2.pop(), s2 = t3.z2[a2], l2 = t3.z1[o2];
            T.DEBUG && console.log("SPVTL[" + e3 + "]", a2, o2), i2 = e3 ? (r3 = s2.y - l2.y, l2.x - s2.x) : (r3 = l2.x - s2.x, l2.y - s2.y), t3.pv = t3.dpv = Zt(r3, i2);
          }
          function or(e3, t3) {
            var r3, i2, n2 = t3.stack, a2 = n2.pop(), o2 = n2.pop(), s2 = t3.z2[a2], l2 = t3.z1[o2];
            T.DEBUG && console.log("SFVTL[" + e3 + "]", a2, o2), i2 = e3 ? (r3 = s2.y - l2.y, l2.x - s2.x) : (r3 = l2.x - s2.x, l2.y - s2.y), t3.fv = Zt(r3, i2);
          }
          function sr(e3) {
            T.DEBUG && console.log(e3.step, "POP[]"), e3.stack.pop();
          }
          function lr(e3, t3) {
            var r3 = t3.stack.pop(), i2 = t3.z0[r3], n2 = t3.fv, a2 = t3.pv;
            T.DEBUG && console.log(t3.step, "MDAP[" + e3 + "]", r3);
            var o2 = a2.distance(i2, Kt);
            e3 && (o2 = t3.round(o2)), n2.setRelative(i2, Kt, o2, a2), n2.touch(i2), t3.rp0 = t3.rp1 = r3;
          }
          function ur(e3, t3) {
            var r3, i2, n2, a2 = t3.z2, o2 = a2.length - 2;
            T.DEBUG && console.log(t3.step, "IUP[" + e3.axis + "]");
            for (var s2 = 0; s2 < o2; s2++)
              r3 = a2[s2], e3.touched(r3) || (i2 = r3.prevTouched(e3)) !== r3 && (i2 === (n2 = r3.nextTouched(e3)) && e3.setRelative(r3, r3, e3.distance(i2, i2, false, true), e3, true), e3.interpolate(r3, i2, n2, e3));
          }
          function hr(e3, t3) {
            for (var r3 = t3.stack, i2 = e3 ? t3.rp1 : t3.rp2, n2 = (e3 ? t3.z0 : t3.z1)[i2], a2 = t3.fv, o2 = t3.pv, s2 = t3.loop, l2 = t3.z2; s2--; ) {
              var u2 = r3.pop(), h2 = l2[u2], c2 = o2.distance(n2, n2, false, true);
              a2.setRelative(h2, h2, c2, o2), a2.touch(h2), T.DEBUG && console.log(t3.step, (1 < t3.loop ? "loop " + (t3.loop - s2) + ": " : "") + "SHP[" + (e3 ? "rp1" : "rp2") + "]", u2);
            }
            t3.loop = 1;
          }
          function cr(e3, t3) {
            var r3 = t3.stack, i2 = e3 ? t3.rp1 : t3.rp2, n2 = (e3 ? t3.z0 : t3.z1)[i2], a2 = t3.fv, o2 = t3.pv, s2 = r3.pop(), l2 = t3.z2[t3.contours[s2]], u2 = l2;
            T.DEBUG && console.log(t3.step, "SHC[" + e3 + "]", s2);
            for (var h2 = o2.distance(n2, n2, false, true); u2 !== n2 && a2.setRelative(u2, u2, h2, o2), (u2 = u2.nextPointOnContour) !== l2; )
              ;
          }
          function fr(e3, t3) {
            var r3, i2, n2 = t3.stack, a2 = e3 ? t3.rp1 : t3.rp2, o2 = (e3 ? t3.z0 : t3.z1)[a2], s2 = t3.fv, l2 = t3.pv, u2 = n2.pop();
            switch (T.DEBUG && console.log(t3.step, "SHZ[" + e3 + "]", u2), u2) {
              case 0:
                r3 = t3.tZone;
                break;
              case 1:
                r3 = t3.gZone;
                break;
              default:
                throw new Error("Invalid zone");
            }
            for (var h2 = l2.distance(o2, o2, false, true), c2 = r3.length - 2, f2 = 0; f2 < c2; f2++)
              i2 = r3[f2], s2.setRelative(i2, i2, h2, l2);
          }
          function dr(e3, t3) {
            var r3 = t3.stack, i2 = r3.pop() / 64, n2 = r3.pop(), a2 = t3.z1[n2], o2 = t3.z0[t3.rp0], s2 = t3.fv, l2 = t3.pv;
            s2.setRelative(a2, o2, i2, l2), s2.touch(a2), T.DEBUG && console.log(t3.step, "MSIRP[" + e3 + "]", i2, n2), t3.rp1 = t3.rp0, t3.rp2 = n2, e3 && (t3.rp0 = n2);
          }
          function pr(e3, t3) {
            var r3 = t3.stack, i2 = r3.pop(), n2 = r3.pop(), a2 = t3.z0[n2], o2 = t3.fv, s2 = t3.pv, l2 = t3.cvt[i2];
            T.DEBUG && console.log(t3.step, "MIAP[" + e3 + "]", i2, "(", l2, ")", n2);
            var u2 = s2.distance(a2, Kt);
            e3 && (Math.abs(u2 - l2) < t3.cvCutIn && (u2 = l2), u2 = t3.round(u2)), o2.setRelative(a2, Kt, u2, s2), t3.zp0 === 0 && (a2.xo = a2.x, a2.yo = a2.y), o2.touch(a2), t3.rp0 = t3.rp1 = n2;
          }
          function mr(e3, t3) {
            var r3 = t3.stack, i2 = r3.pop(), n2 = t3.z2[i2];
            T.DEBUG && console.log(t3.step, "GC[" + e3 + "]", i2), r3.push(64 * t3.dpv.distance(n2, Kt, e3, false));
          }
          function vr(e3, t3) {
            var r3 = t3.stack, i2 = r3.pop(), n2 = r3.pop(), a2 = t3.z1[i2], o2 = t3.z0[n2], s2 = t3.dpv.distance(o2, a2, e3, e3);
            T.DEBUG && console.log(t3.step, "MD[" + e3 + "]", i2, n2, "->", s2), t3.stack.push(Math.round(64 * s2));
          }
          function yr(e3, t3) {
            var r3 = t3.stack, i2 = r3.pop(), n2 = t3.fv, a2 = t3.pv, o2 = t3.ppem, s2 = t3.deltaBase + 16 * (e3 - 1), l2 = t3.deltaShift, u2 = t3.z0;
            T.DEBUG && console.log(t3.step, "DELTAP[" + e3 + "]", i2, r3);
            for (var h2 = 0; h2 < i2; h2++) {
              var c2 = r3.pop(), f2 = r3.pop();
              if (s2 + ((240 & f2) >> 4) === o2) {
                var d2 = (15 & f2) - 8;
                0 <= d2 && d2++, T.DEBUG && console.log(t3.step, "DELTAPFIX", c2, "by", d2 * l2);
                var p2 = u2[c2];
                n2.setRelative(p2, p2, d2 * l2, a2);
              }
            }
          }
          function gr(e3, t3) {
            var r3 = t3.stack, i2 = r3.pop();
            T.DEBUG && console.log(t3.step, "ROUND[]"), r3.push(64 * t3.round(i2 / 64));
          }
          function br(e3, t3) {
            var r3 = t3.stack, i2 = r3.pop(), n2 = t3.ppem, a2 = t3.deltaBase + 16 * (e3 - 1), o2 = t3.deltaShift;
            T.DEBUG && console.log(t3.step, "DELTAC[" + e3 + "]", i2, r3);
            for (var s2 = 0; s2 < i2; s2++) {
              var l2 = r3.pop(), u2 = r3.pop();
              if (a2 + ((240 & u2) >> 4) === n2) {
                var h2 = (15 & u2) - 8;
                0 <= h2 && h2++;
                var c2 = h2 * o2;
                T.DEBUG && console.log(t3.step, "DELTACFIX", l2, "by", c2), t3.cvt[l2] += c2;
              }
            }
          }
          function _r(e3, t3) {
            var r3, i2, n2 = t3.stack, a2 = n2.pop(), o2 = n2.pop(), s2 = t3.z2[a2], l2 = t3.z1[o2];
            T.DEBUG && console.log(t3.step, "SDPVTL[" + e3 + "]", a2, o2), i2 = e3 ? (r3 = s2.y - l2.y, l2.x - s2.x) : (r3 = l2.x - s2.x, l2.y - s2.y), t3.dpv = Zt(r3, i2);
          }
          function xr(e3, t3) {
            var r3 = t3.stack, i2 = t3.prog, n2 = t3.ip;
            T.DEBUG && console.log(t3.step, "PUSHB[" + e3 + "]");
            for (var a2 = 0; a2 < e3; a2++)
              r3.push(i2[++n2]);
            t3.ip = n2;
          }
          function wr(e3, t3) {
            var r3 = t3.ip, i2 = t3.prog, n2 = t3.stack;
            T.DEBUG && console.log(t3.ip, "PUSHW[" + e3 + "]");
            for (var a2 = 0; a2 < e3; a2++) {
              var o2 = i2[++r3] << 8 | i2[++r3];
              32768 & o2 && (o2 = -(1 + (65535 ^ o2))), n2.push(o2);
            }
            t3.ip = r3;
          }
          function Sr(e3, t3, r3, i2, n2, a2) {
            var o2, s2, l2, u2, h2 = a2.stack, c2 = e3 && h2.pop(), f2 = h2.pop(), d2 = a2.rp0, p2 = a2.z0[d2], m2 = a2.z1[f2], v2 = a2.minDis, y2 = a2.fv, g2 = a2.dpv;
            l2 = 0 <= (s2 = o2 = g2.distance(m2, p2, true, true)) ? 1 : -1, s2 = Math.abs(s2), e3 && (u2 = a2.cvt[c2], i2 && Math.abs(s2 - u2) < a2.cvCutIn && (s2 = u2)), r3 && s2 < v2 && (s2 = v2), i2 && (s2 = a2.round(s2)), y2.setRelative(m2, p2, l2 * s2, g2), y2.touch(m2), T.DEBUG && console.log(a2.step, (e3 ? "MIRP[" : "MDRP[") + (t3 ? "M" : "m") + (r3 ? ">" : "_") + (i2 ? "R" : "_") + (n2 === 0 ? "Gr" : n2 === 1 ? "Bl" : n2 === 2 ? "Wh" : "") + "]", e3 ? c2 + "(" + a2.cvt[c2] + "," + u2 + ")" : "", f2, "(d =", o2, "->", l2 * s2, ")"), a2.rp1 = a2.rp0, a2.rp2 = f2, t3 && (a2.rp0 = f2);
          }
          Ft.prototype.exec = function(e3, t3) {
            if (typeof t3 != "number")
              throw new Error("Point size is not a number!");
            if (!(2 < this._errorState)) {
              var r3 = this.font, i2 = this._prepState;
              if (!i2 || i2.ppem !== t3) {
                var n2 = this._fpgmState;
                if (!n2) {
                  $t.prototype = Jt, (n2 = this._fpgmState = new $t("fpgm", r3.tables.fpgm)).funcs = [], n2.font = r3, T.DEBUG && (console.log("---EXEC FPGM---"), n2.step = -1);
                  try {
                    At(n2);
                  } catch (e4) {
                    return console.log("Hinting error in FPGM:" + e4), void (this._errorState = 3);
                  }
                }
                $t.prototype = n2, (i2 = this._prepState = new $t("prep", r3.tables.prep)).ppem = t3;
                var a2 = r3.tables.cvt;
                if (a2)
                  for (var o2 = i2.cvt = new Array(a2.length), s2 = t3 / r3.unitsPerEm, l2 = 0; l2 < a2.length; l2++)
                    o2[l2] = a2[l2] * s2;
                else
                  i2.cvt = [];
                T.DEBUG && (console.log("---EXEC PREP---"), i2.step = -1);
                try {
                  At(i2);
                } catch (e4) {
                  this._errorState < 2 && console.log("Hinting error in PREP:" + e4), this._errorState = 2;
                }
              }
              if (!(1 < this._errorState))
                try {
                  return It(e3, i2);
                } catch (e4) {
                  return this._errorState < 1 && (console.log("Hinting error:" + e4), console.log("Note: further hinting errors are silenced")), void (this._errorState = 1);
                }
            }
          }, It = function(e3, t3) {
            var r3, i2, n2, a2 = t3.ppem / t3.font.unitsPerEm, o2 = a2, s2 = e3.components;
            if ($t.prototype = t3, s2) {
              var l2 = t3.font;
              i2 = [], r3 = [];
              for (var u2 = 0; u2 < s2.length; u2++) {
                var h2 = s2[u2], c2 = l2.glyphs.get(h2.glyphIndex);
                n2 = new $t("glyf", c2.instructions), T.DEBUG && (console.log("---EXEC COMP " + u2 + "---"), n2.step = -1), Ut(c2, n2, a2, o2);
                for (var f2 = Math.round(h2.dx * a2), d2 = Math.round(h2.dy * o2), p2 = n2.gZone, m2 = n2.contours, v2 = 0; v2 < p2.length; v2++) {
                  var y2 = p2[v2];
                  y2.xTouched = y2.yTouched = false, y2.xo = y2.x = y2.x + f2, y2.yo = y2.y = y2.y + d2;
                }
                var g2 = i2.length;
                i2.push.apply(i2, p2);
                for (var b2 = 0; b2 < m2.length; b2++)
                  r3.push(m2[b2] + g2);
              }
              e3.instructions && !n2.inhibitGridFit && ((n2 = new $t("glyf", e3.instructions)).gZone = n2.z0 = n2.z1 = n2.z2 = i2, n2.contours = r3, i2.push(new Qt(0, 0), new Qt(Math.round(e3.advanceWidth * a2), 0)), T.DEBUG && (console.log("---EXEC COMPOSITE---"), n2.step = -1), At(n2), i2.length -= 2);
            } else
              n2 = new $t("glyf", e3.instructions), T.DEBUG && (console.log("---EXEC GLYPH---"), n2.step = -1), Ut(e3, n2, a2, o2), i2 = n2.gZone;
            return i2;
          }, Ut = function(e3, t3, r3, i2) {
            for (var n2, a2, o2, s2 = e3.points || [], l2 = s2.length, u2 = t3.gZone = t3.z0 = t3.z1 = t3.z2 = [], h2 = t3.contours = [], c2 = 0; c2 < l2; c2++)
              n2 = s2[c2], u2[c2] = new Qt(n2.x * r3, n2.y * i2, n2.lastPointOfContour, n2.onCurve);
            for (var f2 = 0; f2 < l2; f2++)
              n2 = u2[f2], a2 || (a2 = n2, h2.push(f2)), n2.lastPointOfContour ? ((n2.nextPointOnContour = a2).prevPointOnContour = n2, a2 = void 0) : (o2 = u2[f2 + 1], (n2.nextPointOnContour = o2).prevPointOnContour = n2);
            if (!t3.inhibitGridFit) {
              if (T.DEBUG) {
                console.log("PROCESSING GLYPH", t3.stack);
                for (var d2 = 0; d2 < l2; d2++)
                  console.log(d2, u2[d2].x, u2[d2].y);
              }
              if (u2.push(new Qt(0, 0), new Qt(Math.round(e3.advanceWidth * r3), 0)), At(t3), u2.length -= 2, T.DEBUG) {
                console.log("FINISHED GLYPH", t3.stack);
                for (var p2 = 0; p2 < l2; p2++)
                  console.log(p2, u2[p2].x, u2[p2].y);
              }
            }
          }, At = function(e3) {
            var t3 = e3.prog;
            if (t3) {
              var r3, i2 = t3.length;
              for (e3.ip = 0; e3.ip < i2; e3.ip++) {
                if (T.DEBUG && e3.step++, !(r3 = kt[t3[e3.ip]]))
                  throw new Error("unknown instruction: 0x" + Number(t3[e3.ip]).toString(16));
                r3(e3);
              }
            }
          }, kt = [rr.bind(void 0, Xt), rr.bind(void 0, qt), ir.bind(void 0, Xt), ir.bind(void 0, qt), nr.bind(void 0, Xt), nr.bind(void 0, qt), ar.bind(void 0, 0), ar.bind(void 0, 1), or.bind(void 0, 0), or.bind(void 0, 1), function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "SPVFS[]", r3, i2), e3.pv = e3.dpv = Zt(i2, r3);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "SPVFS[]", r3, i2), e3.fv = Zt(i2, r3);
          }, function(e3) {
            var t3 = e3.stack, r3 = e3.pv;
            T.DEBUG && console.log(e3.step, "GPV[]"), t3.push(16384 * r3.x), t3.push(16384 * r3.y);
          }, function(e3) {
            var t3 = e3.stack, r3 = e3.fv;
            T.DEBUG && console.log(e3.step, "GFV[]"), t3.push(16384 * r3.x), t3.push(16384 * r3.y);
          }, function(e3) {
            e3.fv = e3.pv, T.DEBUG && console.log(e3.step, "SFVTPV[]");
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop(), n2 = t3.pop(), a2 = t3.pop(), o2 = t3.pop(), s2 = e3.z0, l2 = e3.z1, u2 = s2[r3], h2 = s2[i2], c2 = l2[n2], f2 = l2[a2], d2 = e3.z2[o2];
            T.DEBUG && console.log("ISECT[], ", r3, i2, n2, a2, o2);
            var p2 = u2.x, m2 = u2.y, v2 = h2.x, y2 = h2.y, g2 = c2.x, b2 = c2.y, _2 = f2.x, x2 = f2.y, w2 = (p2 - v2) * (b2 - x2) - (m2 - y2) * (g2 - _2), S2 = p2 * y2 - m2 * v2, M2 = g2 * x2 - b2 * _2;
            d2.x = (S2 * (g2 - _2) - M2 * (p2 - v2)) / w2, d2.y = (S2 * (b2 - x2) - M2 * (m2 - y2)) / w2;
          }, function(e3) {
            e3.rp0 = e3.stack.pop(), T.DEBUG && console.log(e3.step, "SRP0[]", e3.rp0);
          }, function(e3) {
            e3.rp1 = e3.stack.pop(), T.DEBUG && console.log(e3.step, "SRP1[]", e3.rp1);
          }, function(e3) {
            e3.rp2 = e3.stack.pop(), T.DEBUG && console.log(e3.step, "SRP2[]", e3.rp2);
          }, function(e3) {
            var t3 = e3.stack.pop();
            switch (T.DEBUG && console.log(e3.step, "SZP0[]", t3), e3.zp0 = t3) {
              case 0:
                e3.tZone || er(e3), e3.z0 = e3.tZone;
                break;
              case 1:
                e3.z0 = e3.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e3) {
            var t3 = e3.stack.pop();
            switch (T.DEBUG && console.log(e3.step, "SZP1[]", t3), e3.zp1 = t3) {
              case 0:
                e3.tZone || er(e3), e3.z1 = e3.tZone;
                break;
              case 1:
                e3.z1 = e3.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e3) {
            var t3 = e3.stack.pop();
            switch (T.DEBUG && console.log(e3.step, "SZP2[]", t3), e3.zp2 = t3) {
              case 0:
                e3.tZone || er(e3), e3.z2 = e3.tZone;
                break;
              case 1:
                e3.z2 = e3.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e3) {
            var t3 = e3.stack.pop();
            switch (T.DEBUG && console.log(e3.step, "SZPS[]", t3), e3.zp0 = e3.zp1 = e3.zp2 = t3, t3) {
              case 0:
                e3.tZone || er(e3), e3.z0 = e3.z1 = e3.z2 = e3.tZone;
                break;
              case 1:
                e3.z0 = e3.z1 = e3.z2 = e3.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e3) {
            e3.loop = e3.stack.pop(), T.DEBUG && console.log(e3.step, "SLOOP[]", e3.loop);
          }, function(e3) {
            T.DEBUG && console.log(e3.step, "RTG[]"), e3.round = Gt;
          }, function(e3) {
            T.DEBUG && console.log(e3.step, "RTHG[]"), e3.round = Vt;
          }, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "SMD[]", t3), e3.minDis = t3 / 64;
          }, function(e3) {
            T.DEBUG && console.log(e3.step, "ELSE[]"), tr(e3, false);
          }, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "JMPR[]", t3), e3.ip += t3 - 1;
          }, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "SCVTCI[]", t3), e3.cvCutIn = t3 / 64;
          }, void 0, void 0, function(e3) {
            var t3 = e3.stack;
            T.DEBUG && console.log(e3.step, "DUP[]"), t3.push(t3[t3.length - 1]);
          }, sr, function(e3) {
            T.DEBUG && console.log(e3.step, "CLEAR[]"), e3.stack.length = 0;
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "SWAP[]"), t3.push(r3), t3.push(i2);
          }, function(e3) {
            var t3 = e3.stack;
            T.DEBUG && console.log(e3.step, "DEPTH[]"), t3.push(t3.length);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "CINDEX[]", r3), t3.push(t3[t3.length - r3]);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "MINDEX[]", r3), t3.push(t3.splice(t3.length - r3, 1)[0]);
          }, void 0, void 0, void 0, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "LOOPCALL[]", r3, i2);
            var n2 = e3.ip, a2 = e3.prog;
            e3.prog = e3.funcs[r3];
            for (var o2 = 0; o2 < i2; o2++)
              At(e3), T.DEBUG && console.log(++e3.step, o2 + 1 < i2 ? "next loopcall" : "done loopcall", o2);
            e3.ip = n2, e3.prog = a2;
          }, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "CALL[]", t3);
            var r3 = e3.ip, i2 = e3.prog;
            e3.prog = e3.funcs[t3], At(e3), e3.ip = r3, e3.prog = i2, T.DEBUG && console.log(++e3.step, "returning from", t3);
          }, function(e3) {
            if (e3.env !== "fpgm")
              throw new Error("FDEF not allowed here");
            var t3 = e3.stack, r3 = e3.prog, i2 = e3.ip, n2 = t3.pop(), a2 = i2;
            for (T.DEBUG && console.log(e3.step, "FDEF[]", n2); r3[++i2] !== 45; )
              ;
            e3.ip = i2, e3.funcs[n2] = r3.slice(a2 + 1, i2);
          }, void 0, lr.bind(void 0, 0), lr.bind(void 0, 1), ur.bind(void 0, Xt), ur.bind(void 0, qt), hr.bind(void 0, 0), hr.bind(void 0, 1), cr.bind(void 0, 0), cr.bind(void 0, 1), fr.bind(void 0, 0), fr.bind(void 0, 1), function(e3) {
            for (var t3 = e3.stack, r3 = e3.loop, i2 = e3.fv, n2 = t3.pop() / 64, a2 = e3.z2; r3--; ) {
              var o2 = t3.pop(), s2 = a2[o2];
              T.DEBUG && console.log(e3.step, (1 < e3.loop ? "loop " + (e3.loop - r3) + ": " : "") + "SHPIX[]", o2, n2), i2.setRelative(s2, s2, n2), i2.touch(s2);
            }
            e3.loop = 1;
          }, function(e3) {
            for (var t3 = e3.stack, r3 = e3.rp1, i2 = e3.rp2, n2 = e3.loop, a2 = e3.z0[r3], o2 = e3.z1[i2], s2 = e3.fv, l2 = e3.dpv, u2 = e3.z2; n2--; ) {
              var h2 = t3.pop(), c2 = u2[h2];
              T.DEBUG && console.log(e3.step, (1 < e3.loop ? "loop " + (e3.loop - n2) + ": " : "") + "IP[]", h2, r3, "<->", i2), s2.interpolate(c2, a2, o2, l2), s2.touch(c2);
            }
            e3.loop = 1;
          }, dr.bind(void 0, 0), dr.bind(void 0, 1), function(e3) {
            for (var t3 = e3.stack, r3 = e3.rp0, i2 = e3.z0[r3], n2 = e3.loop, a2 = e3.fv, o2 = e3.pv, s2 = e3.z1; n2--; ) {
              var l2 = t3.pop(), u2 = s2[l2];
              T.DEBUG && console.log(e3.step, (1 < e3.loop ? "loop " + (e3.loop - n2) + ": " : "") + "ALIGNRP[]", l2), a2.setRelative(u2, i2, 0, o2), a2.touch(u2);
            }
            e3.loop = 1;
          }, function(e3) {
            T.DEBUG && console.log(e3.step, "RTDG[]"), e3.round = jt;
          }, pr.bind(void 0, 0), pr.bind(void 0, 1), function(e3) {
            var t3 = e3.prog, r3 = e3.ip, i2 = e3.stack, n2 = t3[++r3];
            T.DEBUG && console.log(e3.step, "NPUSHB[]", n2);
            for (var a2 = 0; a2 < n2; a2++)
              i2.push(t3[++r3]);
            e3.ip = r3;
          }, function(e3) {
            var t3 = e3.ip, r3 = e3.prog, i2 = e3.stack, n2 = r3[++t3];
            T.DEBUG && console.log(e3.step, "NPUSHW[]", n2);
            for (var a2 = 0; a2 < n2; a2++) {
              var o2 = r3[++t3] << 8 | r3[++t3];
              32768 & o2 && (o2 = -(1 + (65535 ^ o2))), i2.push(o2);
            }
            e3.ip = t3;
          }, function(e3) {
            var t3 = e3.stack, r3 = e3.store;
            r3 = r3 || (e3.store = []);
            var i2 = t3.pop(), n2 = t3.pop();
            T.DEBUG && console.log(e3.step, "WS", i2, n2), r3[n2] = i2;
          }, function(e3) {
            var t3 = e3.stack, r3 = e3.store, i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "RS", i2);
            var n2 = r3 && r3[i2] || 0;
            t3.push(n2);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "WCVTP", r3, i2), e3.cvt[i2] = r3 / 64;
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "RCVT", r3), t3.push(64 * e3.cvt[r3]);
          }, mr.bind(void 0, 0), mr.bind(void 0, 1), void 0, vr.bind(void 0, 0), vr.bind(void 0, 1), function(e3) {
            T.DEBUG && console.log(e3.step, "MPPEM[]"), e3.stack.push(e3.ppem);
          }, void 0, function(e3) {
            T.DEBUG && console.log(e3.step, "FLIPON[]"), e3.autoFlip = true;
          }, void 0, void 0, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "LT[]", r3, i2), t3.push(i2 < r3 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "LTEQ[]", r3, i2), t3.push(i2 <= r3 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "GT[]", r3, i2), t3.push(r3 < i2 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "GTEQ[]", r3, i2), t3.push(r3 <= i2 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "EQ[]", r3, i2), t3.push(r3 === i2 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "NEQ[]", r3, i2), t3.push(r3 !== i2 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "ODD[]", r3), t3.push(Math.trunc(r3) % 2 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "EVEN[]", r3), t3.push(Math.trunc(r3) % 2 ? 0 : 1);
          }, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "IF[]", t3), t3 || (tr(e3, true), T.DEBUG && console.log(e3.step, "EIF[]"));
          }, function(e3) {
            T.DEBUG && console.log(e3.step, "EIF[]");
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "AND[]", r3, i2), t3.push(r3 && i2 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "OR[]", r3, i2), t3.push(r3 || i2 ? 1 : 0);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "NOT[]", r3), t3.push(r3 ? 0 : 1);
          }, yr.bind(void 0, 1), function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "SDB[]", t3), e3.deltaBase = t3;
          }, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "SDS[]", t3), e3.deltaShift = Math.pow(0.5, t3);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "ADD[]", r3, i2), t3.push(i2 + r3);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "SUB[]", r3, i2), t3.push(i2 - r3);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "DIV[]", r3, i2), t3.push(64 * i2 / r3);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "MUL[]", r3, i2), t3.push(i2 * r3 / 64);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "ABS[]", r3), t3.push(Math.abs(r3));
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "NEG[]", r3), t3.push(-r3);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "FLOOR[]", r3), t3.push(64 * Math.floor(r3 / 64));
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop();
            T.DEBUG && console.log(e3.step, "CEILING[]", r3), t3.push(64 * Math.ceil(r3 / 64));
          }, gr.bind(void 0, 0), gr.bind(void 0, 1), gr.bind(void 0, 2), gr.bind(void 0, 3), void 0, void 0, void 0, void 0, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "WCVTF[]", r3, i2), e3.cvt[i2] = r3 * e3.ppem / e3.font.unitsPerEm;
          }, yr.bind(void 0, 2), yr.bind(void 0, 3), br.bind(void 0, 1), br.bind(void 0, 2), br.bind(void 0, 3), function(e3) {
            var t3, r3 = e3.stack.pop();
            switch (T.DEBUG && console.log(e3.step, "SROUND[]", r3), e3.round = Wt, 192 & r3) {
              case 0:
                t3 = 0.5;
                break;
              case 64:
                t3 = 1;
                break;
              case 128:
                t3 = 2;
                break;
              default:
                throw new Error("invalid SROUND value");
            }
            switch (e3.srPeriod = t3, 48 & r3) {
              case 0:
                e3.srPhase = 0;
                break;
              case 16:
                e3.srPhase = 0.25 * t3;
                break;
              case 32:
                e3.srPhase = 0.5 * t3;
                break;
              case 48:
                e3.srPhase = 0.75 * t3;
                break;
              default:
                throw new Error("invalid SROUND value");
            }
            r3 &= 15, e3.srThreshold = r3 === 0 ? 0 : (r3 / 8 - 0.5) * t3;
          }, function(e3) {
            var t3, r3 = e3.stack.pop();
            switch (T.DEBUG && console.log(e3.step, "S45ROUND[]", r3), e3.round = Wt, 192 & r3) {
              case 0:
                t3 = Math.sqrt(2) / 2;
                break;
              case 64:
                t3 = Math.sqrt(2);
                break;
              case 128:
                t3 = 2 * Math.sqrt(2);
                break;
              default:
                throw new Error("invalid S45ROUND value");
            }
            switch (e3.srPeriod = t3, 48 & r3) {
              case 0:
                e3.srPhase = 0;
                break;
              case 16:
                e3.srPhase = 0.25 * t3;
                break;
              case 32:
                e3.srPhase = 0.5 * t3;
                break;
              case 48:
                e3.srPhase = 0.75 * t3;
                break;
              default:
                throw new Error("invalid S45ROUND value");
            }
            r3 &= 15, e3.srThreshold = r3 === 0 ? 0 : (r3 / 8 - 0.5) * t3;
          }, void 0, void 0, function(e3) {
            T.DEBUG && console.log(e3.step, "ROFF[]"), e3.round = Bt;
          }, void 0, function(e3) {
            T.DEBUG && console.log(e3.step, "RUTG[]"), e3.round = zt;
          }, function(e3) {
            T.DEBUG && console.log(e3.step, "RDTG[]"), e3.round = Ht;
          }, sr, sr, void 0, void 0, void 0, void 0, void 0, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "SCANCTRL[]", t3);
          }, _r.bind(void 0, 0), _r.bind(void 0, 1), function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = 0;
            T.DEBUG && console.log(e3.step, "GETINFO[]", r3), 1 & r3 && (i2 = 35), 32 & r3 && (i2 |= 4096), t3.push(i2);
          }, void 0, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop(), n2 = t3.pop();
            T.DEBUG && console.log(e3.step, "ROLL[]"), t3.push(i2), t3.push(r3), t3.push(n2);
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "MAX[]", r3, i2), t3.push(Math.max(i2, r3));
          }, function(e3) {
            var t3 = e3.stack, r3 = t3.pop(), i2 = t3.pop();
            T.DEBUG && console.log(e3.step, "MIN[]", r3, i2), t3.push(Math.min(i2, r3));
          }, function(e3) {
            var t3 = e3.stack.pop();
            T.DEBUG && console.log(e3.step, "SCANTYPE[]", t3);
          }, function(e3) {
            var t3 = e3.stack.pop(), r3 = e3.stack.pop();
            switch (T.DEBUG && console.log(e3.step, "INSTCTRL[]", t3, r3), t3) {
              case 1:
                return void (e3.inhibitGridFit = !!r3);
              case 2:
                return void (e3.ignoreCvt = !!r3);
              default:
                throw new Error("invalid INSTCTRL[] selector");
            }
          }, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, xr.bind(void 0, 1), xr.bind(void 0, 2), xr.bind(void 0, 3), xr.bind(void 0, 4), xr.bind(void 0, 5), xr.bind(void 0, 6), xr.bind(void 0, 7), xr.bind(void 0, 8), wr.bind(void 0, 1), wr.bind(void 0, 2), wr.bind(void 0, 3), wr.bind(void 0, 4), wr.bind(void 0, 5), wr.bind(void 0, 6), wr.bind(void 0, 7), wr.bind(void 0, 8), Sr.bind(void 0, 0, 0, 0, 0, 0), Sr.bind(void 0, 0, 0, 0, 0, 1), Sr.bind(void 0, 0, 0, 0, 0, 2), Sr.bind(void 0, 0, 0, 0, 0, 3), Sr.bind(void 0, 0, 0, 0, 1, 0), Sr.bind(void 0, 0, 0, 0, 1, 1), Sr.bind(void 0, 0, 0, 0, 1, 2), Sr.bind(void 0, 0, 0, 0, 1, 3), Sr.bind(void 0, 0, 0, 1, 0, 0), Sr.bind(void 0, 0, 0, 1, 0, 1), Sr.bind(void 0, 0, 0, 1, 0, 2), Sr.bind(void 0, 0, 0, 1, 0, 3), Sr.bind(void 0, 0, 0, 1, 1, 0), Sr.bind(void 0, 0, 0, 1, 1, 1), Sr.bind(void 0, 0, 0, 1, 1, 2), Sr.bind(void 0, 0, 0, 1, 1, 3), Sr.bind(void 0, 0, 1, 0, 0, 0), Sr.bind(void 0, 0, 1, 0, 0, 1), Sr.bind(void 0, 0, 1, 0, 0, 2), Sr.bind(void 0, 0, 1, 0, 0, 3), Sr.bind(void 0, 0, 1, 0, 1, 0), Sr.bind(void 0, 0, 1, 0, 1, 1), Sr.bind(void 0, 0, 1, 0, 1, 2), Sr.bind(void 0, 0, 1, 0, 1, 3), Sr.bind(void 0, 0, 1, 1, 0, 0), Sr.bind(void 0, 0, 1, 1, 0, 1), Sr.bind(void 0, 0, 1, 1, 0, 2), Sr.bind(void 0, 0, 1, 1, 0, 3), Sr.bind(void 0, 0, 1, 1, 1, 0), Sr.bind(void 0, 0, 1, 1, 1, 1), Sr.bind(void 0, 0, 1, 1, 1, 2), Sr.bind(void 0, 0, 1, 1, 1, 3), Sr.bind(void 0, 1, 0, 0, 0, 0), Sr.bind(void 0, 1, 0, 0, 0, 1), Sr.bind(void 0, 1, 0, 0, 0, 2), Sr.bind(void 0, 1, 0, 0, 0, 3), Sr.bind(void 0, 1, 0, 0, 1, 0), Sr.bind(void 0, 1, 0, 0, 1, 1), Sr.bind(void 0, 1, 0, 0, 1, 2), Sr.bind(void 0, 1, 0, 0, 1, 3), Sr.bind(void 0, 1, 0, 1, 0, 0), Sr.bind(void 0, 1, 0, 1, 0, 1), Sr.bind(void 0, 1, 0, 1, 0, 2), Sr.bind(void 0, 1, 0, 1, 0, 3), Sr.bind(void 0, 1, 0, 1, 1, 0), Sr.bind(void 0, 1, 0, 1, 1, 1), Sr.bind(void 0, 1, 0, 1, 1, 2), Sr.bind(void 0, 1, 0, 1, 1, 3), Sr.bind(void 0, 1, 1, 0, 0, 0), Sr.bind(void 0, 1, 1, 0, 0, 1), Sr.bind(void 0, 1, 1, 0, 0, 2), Sr.bind(void 0, 1, 1, 0, 0, 3), Sr.bind(void 0, 1, 1, 0, 1, 0), Sr.bind(void 0, 1, 1, 0, 1, 1), Sr.bind(void 0, 1, 1, 0, 1, 2), Sr.bind(void 0, 1, 1, 0, 1, 3), Sr.bind(void 0, 1, 1, 1, 0, 0), Sr.bind(void 0, 1, 1, 1, 0, 1), Sr.bind(void 0, 1, 1, 1, 0, 2), Sr.bind(void 0, 1, 1, 1, 0, 3), Sr.bind(void 0, 1, 1, 1, 1, 0), Sr.bind(void 0, 1, 1, 1, 1, 1), Sr.bind(void 0, 1, 1, 1, 1, 2), Sr.bind(void 0, 1, 1, 1, 1, 3)];
          var Mr = Array.from || function(e3) {
            return e3.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
          };
          function Tr(e3) {
            (e3 = e3 || {}).empty || (Ct(e3.familyName, "When creating a new Font object, familyName is required."), Ct(e3.styleName, "When creating a new Font object, styleName is required."), Ct(e3.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), Ct(e3.ascender, "When creating a new Font object, ascender is required."), Ct(e3.descender, "When creating a new Font object, descender is required."), Ct(e3.descender < 0, "Descender should be negative (e.g. -512)."), this.names = {fontFamily: {en: e3.familyName || " "}, fontSubfamily: {en: e3.styleName || " "}, fullName: {en: e3.fullName || e3.familyName + " " + e3.styleName}, postScriptName: {en: e3.postScriptName || (e3.familyName + e3.styleName).replace(/\s/g, "")}, designer: {en: e3.designer || " "}, designerURL: {en: e3.designerURL || " "}, manufacturer: {en: e3.manufacturer || " "}, manufacturerURL: {en: e3.manufacturerURL || " "}, license: {en: e3.license || " "}, licenseURL: {en: e3.licenseURL || " "}, version: {en: e3.version || "Version 0.1"}, description: {en: e3.description || " "}, copyright: {en: e3.copyright || " "}, trademark: {en: e3.trademark || " "}}, this.unitsPerEm = e3.unitsPerEm || 1e3, this.ascender = e3.ascender, this.descender = e3.descender, this.createdTimestamp = e3.createdTimestamp, this.tables = {os2: {usWeightClass: e3.weightClass || this.usWeightClasses.MEDIUM, usWidthClass: e3.widthClass || this.usWidthClasses.MEDIUM, fsSelection: e3.fsSelection || this.fsSelectionValues.REGULAR}}), this.supported = true, this.glyphs = new xe.GlyphSet(this, e3.glyphs || []), this.encoding = new de(this), this.position = new wt(this), this.substitution = new St(this), this.tables = this.tables || {}, Object.defineProperty(this, "hinting", {get: function() {
              return this._hinting ? this._hinting : this.outlinesFormat === "truetype" ? this._hinting = new Ft(this) : void 0;
            }});
          }
          function Er(e3, t3) {
            var r3 = JSON.stringify(e3), i2 = 256;
            for (var n2 in t3) {
              var a2 = parseInt(n2);
              if (a2 && !(a2 < 256)) {
                if (JSON.stringify(t3[n2]) === r3)
                  return a2;
                i2 <= a2 && (i2 = a2 + 1);
              }
            }
            return t3[i2] = e3, i2;
          }
          function Cr(e3, t3, r3, i2) {
            for (var n2 = [{name: "nameID_" + e3, type: "USHORT", value: Er(t3.name, i2)}, {name: "flags_" + e3, type: "USHORT", value: 0}], a2 = 0; a2 < r3.length; ++a2) {
              var o2 = r3[a2].tag;
              n2.push({name: "axis_" + e3 + " " + o2, type: "FIXED", value: t3.coordinates[o2] << 16});
            }
            return n2;
          }
          function Lr(e3, t3, r3, i2) {
            var n2 = {}, a2 = new se.Parser(e3, t3);
            n2.name = i2[a2.parseUShort()] || {}, a2.skip("uShort", 1), n2.coordinates = {};
            for (var o2 = 0; o2 < r3.length; ++o2)
              n2.coordinates[r3[o2].tag] = a2.parseFixed();
            return n2;
          }
          Tr.prototype.hasChar = function(e3) {
            return this.encoding.charToGlyphIndex(e3) !== null;
          }, Tr.prototype.charToGlyphIndex = function(e3) {
            return this.encoding.charToGlyphIndex(e3);
          }, Tr.prototype.charToGlyph = function(e3) {
            var t3 = this.charToGlyphIndex(e3), r3 = this.glyphs.get(t3);
            return r3 = r3 || this.glyphs.get(0);
          }, Tr.prototype.stringToGlyphs = function(e3, t3) {
            t3 = t3 || this.defaultRenderOptions;
            for (var r3 = Mr(e3), i2 = [], n2 = 0; n2 < r3.length; n2 += 1) {
              var a2 = r3[n2];
              i2.push(this.charToGlyphIndex(a2));
            }
            var o2 = i2.length;
            if (t3.features) {
              var s2 = t3.script || this.substitution.getDefaultScriptName(), l2 = [];
              t3.features.liga && (l2 = l2.concat(this.substitution.getFeature("liga", s2, t3.language))), t3.features.rlig && (l2 = l2.concat(this.substitution.getFeature("rlig", s2, t3.language)));
              for (var u2 = 0; u2 < o2; u2 += 1)
                for (var h2 = 0; h2 < l2.length; h2++) {
                  for (var c2 = l2[h2], f2 = c2.sub, d2 = f2.length, p2 = 0; p2 < d2 && f2[p2] === i2[u2 + p2]; )
                    p2++;
                  p2 === d2 && (i2.splice(u2, d2, c2.by), o2 = o2 - d2 + 1);
                }
            }
            for (var m2 = new Array(o2), v2 = this.glyphs.get(0), y2 = 0; y2 < o2; y2 += 1)
              m2[y2] = this.glyphs.get(i2[y2]) || v2;
            return m2;
          }, Tr.prototype.nameToGlyphIndex = function(e3) {
            return this.glyphNames.nameToGlyphIndex(e3);
          }, Tr.prototype.nameToGlyph = function(e3) {
            var t3 = this.nameToGlyphIndex(e3), r3 = this.glyphs.get(t3);
            return r3 = r3 || this.glyphs.get(0);
          }, Tr.prototype.glyphIndexToName = function(e3) {
            return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e3) : "";
          }, Tr.prototype.getKerningValue = function(e3, t3) {
            e3 = e3.index || e3, t3 = t3.index || t3;
            var r3 = this.position.defaultKerningTables;
            return r3 ? this.position.getKerningValue(r3, e3, t3) : this.kerningPairs[e3 + "," + t3] || 0;
          }, Tr.prototype.defaultRenderOptions = {kerning: true, features: {liga: true, rlig: true}}, Tr.prototype.forEachGlyph = function(e3, t3, r3, i2, n2, a2) {
            t3 = t3 !== void 0 ? t3 : 0, r3 = r3 !== void 0 ? r3 : 0, i2 = i2 !== void 0 ? i2 : 72, n2 = n2 || this.defaultRenderOptions;
            var o2, s2 = 1 / this.unitsPerEm * i2, l2 = this.stringToGlyphs(e3, n2);
            if (n2.kerning) {
              var u2 = n2.script || this.position.getDefaultScriptName();
              o2 = this.position.getKerningTables(u2, n2.language);
            }
            for (var h2 = 0; h2 < l2.length; h2 += 1) {
              var c2 = l2[h2];
              if (a2.call(this, c2, t3, r3, i2, n2), c2.advanceWidth && (t3 += c2.advanceWidth * s2), n2.kerning && h2 < l2.length - 1)
                t3 += (o2 ? this.position.getKerningValue(o2, c2.index, l2[h2 + 1].index) : this.getKerningValue(c2, l2[h2 + 1])) * s2;
              n2.letterSpacing ? t3 += n2.letterSpacing * i2 : n2.tracking && (t3 += n2.tracking / 1e3 * i2);
            }
            return t3;
          }, Tr.prototype.getPath = function(e3, t3, r3, i2, a2) {
            var o2 = new I();
            return this.forEachGlyph(e3, t3, r3, i2, a2, function(e4, t4, r4, i3) {
              var n2 = e4.getPath(t4, r4, i3, a2, this);
              o2.extend(n2);
            }), o2;
          }, Tr.prototype.getPaths = function(e3, t3, r3, i2, a2) {
            var o2 = [];
            return this.forEachGlyph(e3, t3, r3, i2, a2, function(e4, t4, r4, i3) {
              var n2 = e4.getPath(t4, r4, i3, a2, this);
              o2.push(n2);
            }), o2;
          }, Tr.prototype.getAdvanceWidth = function(e3, t3, r3) {
            return this.forEachGlyph(e3, 0, 0, t3, r3, function() {
            });
          }, Tr.prototype.draw = function(e3, t3, r3, i2, n2, a2) {
            this.getPath(t3, r3, i2, n2, a2).draw(e3);
          }, Tr.prototype.drawPoints = function(n2, e3, t3, r3, i2, a2) {
            this.forEachGlyph(e3, t3, r3, i2, a2, function(e4, t4, r4, i3) {
              e4.drawPoints(n2, t4, r4, i3);
            });
          }, Tr.prototype.drawMetrics = function(n2, e3, t3, r3, i2, a2) {
            this.forEachGlyph(e3, t3, r3, i2, a2, function(e4, t4, r4, i3) {
              e4.drawMetrics(n2, t4, r4, i3);
            });
          }, Tr.prototype.getEnglishName = function(e3) {
            var t3 = this.names[e3];
            if (t3)
              return t3.en;
          }, Tr.prototype.validate = function() {
            var r3 = this;
            function e3(e4) {
              var t3 = r3.getEnglishName(e4);
              t3 && t3.trim().length;
            }
            e3("fontFamily"), e3("weightName"), e3("manufacturer"), e3("copyright"), e3("version"), this.unitsPerEm;
          }, Tr.prototype.toTables = function() {
            return yt.fontToTable(this);
          }, Tr.prototype.toBuffer = function() {
            return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
          }, Tr.prototype.toArrayBuffer = function() {
            for (var e3 = this.toTables().encode(), t3 = new ArrayBuffer(e3.length), r3 = new Uint8Array(t3), i2 = 0; i2 < e3.length; i2++)
              r3[i2] = e3[i2];
            return t3;
          }, Tr.prototype.download = function(t3) {
            var e3 = this.getEnglishName("fontFamily"), r3 = this.getEnglishName("fontSubfamily");
            t3 = t3 || e3.replace(/\s/g, "") + "-" + r3 + ".otf";
            var n2 = this.toArrayBuffer();
            if (typeof window != "undefined")
              window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, window.requestFileSystem(window.TEMPORARY, n2.byteLength, function(e4) {
                e4.root.getFile(t3, {create: true}, function(i3) {
                  i3.createWriter(function(e5) {
                    var t4 = new DataView(n2), r4 = new Blob([t4], {type: "font/opentype"});
                    e5.write(r4), e5.addEventListener("writeend", function() {
                      location.href = i3.toURL();
                    }, false);
                  });
                });
              }, function(e4) {
                throw new Error(e4.name + ": " + e4.message);
              });
            else {
              var i2 = jr("fs"), a2 = function(e4) {
                for (var t4 = new Gr(e4.byteLength), r4 = new Uint8Array(e4), i3 = 0; i3 < t4.length; ++i3)
                  t4[i3] = r4[i3];
                return t4;
              }(n2);
              i2.writeFileSync(t3, a2);
            }
          }, Tr.prototype.fsSelectionValues = {ITALIC: 1, UNDERSCORE: 2, NEGATIVE: 4, OUTLINED: 8, STRIKEOUT: 16, BOLD: 32, REGULAR: 64, USER_TYPO_METRICS: 128, WWS: 256, OBLIQUE: 512}, Tr.prototype.usWidthClasses = {ULTRA_CONDENSED: 1, EXTRA_CONDENSED: 2, CONDENSED: 3, SEMI_CONDENSED: 4, MEDIUM: 5, SEMI_EXPANDED: 6, EXPANDED: 7, EXTRA_EXPANDED: 8, ULTRA_EXPANDED: 9}, Tr.prototype.usWeightClasses = {THIN: 100, EXTRA_LIGHT: 200, LIGHT: 300, NORMAL: 400, MEDIUM: 500, SEMI_BOLD: 600, BOLD: 700, EXTRA_BOLD: 800, BLACK: 900};
          var Or = {make: function(e3, t3) {
            var r3, i2, n2, a2, o2 = new $.Table("fvar", [{name: "version", type: "ULONG", value: 65536}, {name: "offsetToData", type: "USHORT", value: 0}, {name: "countSizePairs", type: "USHORT", value: 2}, {name: "axisCount", type: "USHORT", value: e3.axes.length}, {name: "axisSize", type: "USHORT", value: 20}, {name: "instanceCount", type: "USHORT", value: e3.instances.length}, {name: "instanceSize", type: "USHORT", value: 4 + 4 * e3.axes.length}]);
            o2.offsetToData = o2.sizeOf();
            for (var s2 = 0; s2 < e3.axes.length; s2++)
              o2.fields = o2.fields.concat((r3 = s2, i2 = e3.axes[s2], n2 = t3, a2 = Er(i2.name, n2), [{name: "tag_" + r3, type: "TAG", value: i2.tag}, {name: "minValue_" + r3, type: "FIXED", value: i2.minValue << 16}, {name: "defaultValue_" + r3, type: "FIXED", value: i2.defaultValue << 16}, {name: "maxValue_" + r3, type: "FIXED", value: i2.maxValue << 16}, {name: "flags_" + r3, type: "USHORT", value: 0}, {name: "nameID_" + r3, type: "USHORT", value: a2}]));
            for (var l2 = 0; l2 < e3.instances.length; l2++)
              o2.fields = o2.fields.concat(Cr(l2, e3.instances[l2], e3.axes, t3));
            return o2;
          }, parse: function(e3, t3, r3) {
            var i2 = new se.Parser(e3, t3), n2 = i2.parseULong();
            P.argument(n2 === 65536, "Unsupported fvar table version.");
            var a2 = i2.parseOffset16();
            i2.skip("uShort", 1);
            for (var o2, s2, l2, u2, h2, c2 = i2.parseUShort(), f2 = i2.parseUShort(), d2 = i2.parseUShort(), p2 = i2.parseUShort(), m2 = [], v2 = 0; v2 < c2; v2++)
              m2.push((o2 = e3, s2 = t3 + a2 + v2 * f2, l2 = r3, h2 = u2 = void 0, u2 = {}, h2 = new se.Parser(o2, s2), u2.tag = h2.parseTag(), u2.minValue = h2.parseFixed(), u2.defaultValue = h2.parseFixed(), u2.maxValue = h2.parseFixed(), h2.skip("uShort", 1), u2.name = l2[h2.parseUShort()] || {}, u2));
            for (var y2 = [], g2 = t3 + a2 + c2 * f2, b2 = 0; b2 < d2; b2++)
              y2.push(Lr(e3, g2 + b2 * p2, m2, r3));
            return {axes: m2, instances: y2};
          }}, Pr = new Array(10);
          Pr[1] = function() {
            var e3 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            return t3 === 1 ? {posFormat: 1, coverage: this.parsePointer(ae.coverage), value: this.parseValueRecord()} : t3 === 2 ? {posFormat: 2, coverage: this.parsePointer(ae.coverage), values: this.parseValueRecordList()} : void P.assert(false, "0x" + e3.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
          }, Pr[2] = function() {
            var e3 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            P.assert(t3 === 1 || t3 === 2, "0x" + e3.toString(16) + ": GPOS lookup type 2 format must be 1 or 2.");
            var r3 = this.parsePointer(ae.coverage), i2 = this.parseUShort(), n2 = this.parseUShort();
            if (t3 === 1)
              return {posFormat: t3, coverage: r3, valueFormat1: i2, valueFormat2: n2, pairSets: this.parseList(ae.pointer(ae.list(function() {
                return {secondGlyph: this.parseUShort(), value1: this.parseValueRecord(i2), value2: this.parseValueRecord(n2)};
              })))};
            if (t3 === 2) {
              var a2 = this.parsePointer(ae.classDef), o2 = this.parsePointer(ae.classDef), s2 = this.parseUShort(), l2 = this.parseUShort();
              return {posFormat: t3, coverage: r3, valueFormat1: i2, valueFormat2: n2, classDef1: a2, classDef2: o2, class1Count: s2, class2Count: l2, classRecords: this.parseList(s2, ae.list(l2, function() {
                return {value1: this.parseValueRecord(i2), value2: this.parseValueRecord(n2)};
              }))};
            }
          }, Pr[3] = function() {
            return {error: "GPOS Lookup 3 not supported"};
          }, Pr[4] = function() {
            return {error: "GPOS Lookup 4 not supported"};
          }, Pr[5] = function() {
            return {error: "GPOS Lookup 5 not supported"};
          }, Pr[6] = function() {
            return {error: "GPOS Lookup 6 not supported"};
          }, Pr[7] = function() {
            return {error: "GPOS Lookup 7 not supported"};
          }, Pr[8] = function() {
            return {error: "GPOS Lookup 8 not supported"};
          }, Pr[9] = function() {
            return {error: "GPOS Lookup 9 not supported"};
          };
          var Rr = new Array(10);
          var Dr = {parse: function(e3, t3) {
            var r3 = new ae(e3, t3 = t3 || 0), i2 = r3.parseVersion(1);
            return P.argument(i2 === 1 || i2 === 1.1, "Unsupported GPOS table version " + i2), i2 === 1 ? {version: i2, scripts: r3.parseScriptList(), features: r3.parseFeatureList(), lookups: r3.parseLookupList(Pr)} : {version: i2, scripts: r3.parseScriptList(), features: r3.parseFeatureList(), lookups: r3.parseLookupList(Pr), variations: r3.parseFeatureVariationsList()};
          }, make: function(e3) {
            return new $.Table("GPOS", [{name: "version", type: "ULONG", value: 65536}, {name: "scripts", type: "TABLE", value: new $.ScriptList(e3.scripts)}, {name: "features", type: "TABLE", value: new $.FeatureList(e3.features)}, {name: "lookups", type: "TABLE", value: new $.LookupList(e3.lookups, Rr)}]);
          }};
          var kr = {parse: function(e3, t3) {
            var r3 = new se.Parser(e3, t3), i2 = r3.parseUShort();
            if (i2 === 0)
              return function(e4) {
                var t4 = {};
                e4.skip("uShort");
                var r4 = e4.parseUShort();
                P.argument(r4 === 0, "Unsupported kern sub-table version."), e4.skip("uShort", 2);
                var i3 = e4.parseUShort();
                e4.skip("uShort", 3);
                for (var n2 = 0; n2 < i3; n2 += 1) {
                  var a2 = e4.parseUShort(), o2 = e4.parseUShort(), s2 = e4.parseShort();
                  t4[a2 + "," + o2] = s2;
                }
                return t4;
              }(r3);
            if (i2 === 1)
              return function(e4) {
                var t4 = {};
                e4.skip("uShort"), 1 < e4.parseULong() && console.warn("Only the first kern subtable is supported."), e4.skip("uLong");
                var r4 = 255 & e4.parseUShort();
                if (e4.skip("uShort"), r4 == 0) {
                  var i3 = e4.parseUShort();
                  e4.skip("uShort", 3);
                  for (var n2 = 0; n2 < i3; n2 += 1) {
                    var a2 = e4.parseUShort(), o2 = e4.parseUShort(), s2 = e4.parseShort();
                    t4[a2 + "," + o2] = s2;
                  }
                }
                return t4;
              }(r3);
            throw new Error("Unsupported kern table version (" + i2 + ").");
          }};
          var Ar = {parse: function(e3, t3, r3, i2) {
            for (var n2 = new se.Parser(e3, t3), a2 = i2 ? n2.parseUShort : n2.parseULong, o2 = [], s2 = 0; s2 < r3 + 1; s2 += 1) {
              var l2 = a2.call(n2);
              i2 && (l2 *= 2), o2.push(l2);
            }
            return o2;
          }};
          function Ir(e3, r3) {
            jr("fs").readFile(e3, function(e4, t3) {
              if (e4)
                return r3(e4.message);
              r3(null, Et(t3));
            });
          }
          function Ur(e3, t3) {
            var r3 = new XMLHttpRequest();
            r3.open("get", e3, true), r3.responseType = "arraybuffer", r3.onload = function() {
              return r3.response ? t3(null, r3.response) : t3("Font could not be loaded: " + r3.statusText);
            }, r3.onerror = function() {
              t3("Font could not be loaded");
            }, r3.send();
          }
          function Nr(e3, t3) {
            for (var r3 = [], i2 = 12, n2 = 0; n2 < t3; n2 += 1) {
              var a2 = se.getTag(e3, i2), o2 = se.getULong(e3, i2 + 4), s2 = se.getULong(e3, i2 + 8), l2 = se.getULong(e3, i2 + 12);
              r3.push({tag: a2, checksum: o2, offset: s2, length: l2, compression: false}), i2 += 16;
            }
            return r3;
          }
          function Fr(e3, t3) {
            if (t3.compression !== "WOFF")
              return {data: e3, offset: t3.offset};
            var r3 = new Uint8Array(e3.buffer, t3.offset + 2, t3.compressedLength - 2), i2 = new Uint8Array(t3.length);
            if (n(r3, i2), i2.byteLength !== t3.length)
              throw new Error("Decompression error: " + t3.tag + " decompressed length doesn't match recorded length");
            return {data: new DataView(i2.buffer, 0), offset: 0};
          }
          function Br(e3) {
            var t3, r3, i2, n2, a2, o2, s2, l2, u2, h2, c2, f2, d2, p2, m2 = new Tr({empty: true}), v2 = new DataView(e3, 0), y2 = [], g2 = se.getTag(v2, 0);
            if (g2 === String.fromCharCode(0, 1, 0, 0) || g2 === "true" || g2 === "typ1")
              m2.outlinesFormat = "truetype", y2 = Nr(v2, i2 = se.getUShort(v2, 4));
            else if (g2 === "OTTO")
              m2.outlinesFormat = "cff", y2 = Nr(v2, i2 = se.getUShort(v2, 4));
            else {
              if (g2 !== "wOFF")
                throw new Error("Unsupported OpenType signature " + g2);
              var b2 = se.getTag(v2, 4);
              if (b2 === String.fromCharCode(0, 1, 0, 0))
                m2.outlinesFormat = "truetype";
              else {
                if (b2 !== "OTTO")
                  throw new Error("Unsupported OpenType flavor " + g2);
                m2.outlinesFormat = "cff";
              }
              y2 = function(e4, t4) {
                for (var r4 = [], i3 = 44, n3 = 0; n3 < t4; n3 += 1) {
                  var a3 = se.getTag(e4, i3), o3 = se.getULong(e4, i3 + 4), s3 = se.getULong(e4, i3 + 8), l3 = se.getULong(e4, i3 + 12), u3 = void 0;
                  u3 = s3 < l3 && "WOFF", r4.push({tag: a3, offset: o3, compression: u3, compressedLength: s3, length: l3}), i3 += 20;
                }
                return r4;
              }(v2, i2 = se.getUShort(v2, 12));
            }
            for (var _2 = 0; _2 < i2; _2 += 1) {
              var x2 = y2[_2], w2 = void 0;
              switch (x2.tag) {
                case "cmap":
                  w2 = Fr(v2, x2), m2.tables.cmap = le.parse(w2.data, w2.offset), m2.encoding = new pe(m2.tables.cmap);
                  break;
                case "cvt ":
                  w2 = Fr(v2, x2), p2 = new se.Parser(w2.data, w2.offset), m2.tables.cvt = p2.parseShortList(x2.length / 2);
                  break;
                case "fvar":
                  a2 = x2;
                  break;
                case "fpgm":
                  w2 = Fr(v2, x2), p2 = new se.Parser(w2.data, w2.offset), m2.tables.fpgm = p2.parseByteList(x2.length);
                  break;
                case "head":
                  w2 = Fr(v2, x2), m2.tables.head = Ge.parse(w2.data, w2.offset), m2.unitsPerEm = m2.tables.head.unitsPerEm, t3 = m2.tables.head.indexToLocFormat;
                  break;
                case "hhea":
                  w2 = Fr(v2, x2), m2.tables.hhea = je.parse(w2.data, w2.offset), m2.ascender = m2.tables.hhea.ascender, m2.descender = m2.tables.hhea.descender, m2.numberOfHMetrics = m2.tables.hhea.numberOfHMetrics;
                  break;
                case "hmtx":
                  u2 = x2;
                  break;
                case "ltag":
                  w2 = Fr(v2, x2), r3 = ze.parse(w2.data, w2.offset);
                  break;
                case "maxp":
                  w2 = Fr(v2, x2), m2.tables.maxp = He.parse(w2.data, w2.offset), m2.numGlyphs = m2.tables.maxp.numGlyphs;
                  break;
                case "name":
                  f2 = x2;
                  break;
                case "OS/2":
                  w2 = Fr(v2, x2), m2.tables.os2 = at.parse(w2.data, w2.offset);
                  break;
                case "post":
                  w2 = Fr(v2, x2), m2.tables.post = ot.parse(w2.data, w2.offset), m2.glyphNames = new ve(m2.tables.post);
                  break;
                case "prep":
                  w2 = Fr(v2, x2), p2 = new se.Parser(w2.data, w2.offset), m2.tables.prep = p2.parseByteList(x2.length);
                  break;
                case "glyf":
                  o2 = x2;
                  break;
                case "loca":
                  c2 = x2;
                  break;
                case "CFF ":
                  n2 = x2;
                  break;
                case "kern":
                  h2 = x2;
                  break;
                case "GPOS":
                  s2 = x2;
                  break;
                case "GSUB":
                  l2 = x2;
                  break;
                case "meta":
                  d2 = x2;
              }
            }
            var S2 = Fr(v2, f2);
            if (m2.tables.name = it.parse(S2.data, S2.offset, r3), m2.names = m2.tables.name, o2 && c2) {
              var M2 = t3 === 0, T2 = Fr(v2, c2), E2 = Ar.parse(T2.data, T2.offset, m2.numGlyphs, M2), C2 = Fr(v2, o2);
              m2.glyphs = Nt.parse(C2.data, C2.offset, E2, m2);
            } else {
              if (!n2)
                throw new Error("Font doesn't contain TrueType or CFF outlines.");
              var L2 = Fr(v2, n2);
              Be.parse(L2.data, L2.offset, m2);
            }
            var O2 = Fr(v2, u2);
            if (Ve.parse(O2.data, O2.offset, m2.numberOfHMetrics, m2.numGlyphs, m2.glyphs), function(e4) {
              for (var t4, r4 = e4.tables.cmap.glyphIndexMap, i3 = Object.keys(r4), n3 = 0; n3 < i3.length; n3 += 1) {
                var a3 = i3[n3], o3 = r4[a3];
                (t4 = e4.glyphs.get(o3)).addUnicode(parseInt(a3));
              }
              for (var s3 = 0; s3 < e4.glyphs.length; s3 += 1)
                t4 = e4.glyphs.get(s3), e4.cffEncoding ? e4.isCIDFont ? t4.name = "gid" + s3 : t4.name = e4.cffEncoding.charset[s3] : e4.glyphNames.names && (t4.name = e4.glyphNames.glyphIndexToName(s3));
            }(m2), h2) {
              var P2 = Fr(v2, h2);
              m2.kerningPairs = kr.parse(P2.data, P2.offset);
            } else
              m2.kerningPairs = {};
            if (s2) {
              var R2 = Fr(v2, s2);
              m2.tables.gpos = Dr.parse(R2.data, R2.offset), m2.position.init();
            }
            if (l2) {
              var D2 = Fr(v2, l2);
              m2.tables.gsub = ht.parse(D2.data, D2.offset);
            }
            if (a2) {
              var k2 = Fr(v2, a2);
              m2.tables.fvar = Or.parse(k2.data, k2.offset, m2.names);
            }
            if (d2) {
              var A2 = Fr(v2, d2);
              m2.tables.meta = ct.parse(A2.data, A2.offset), m2.metas = m2.tables.meta;
            }
            return m2;
          }
          T.Font = Tr, T.Glyph = ge, T.Path = I, T.BoundingBox = C, T._parse = se, T.parse = Br, T.load = function(e3, i2) {
            (typeof window == "undefined" ? Ir : Ur)(e3, function(e4, t3) {
              if (e4)
                return i2(e4);
              var r3;
              try {
                r3 = Br(t3);
              } catch (e5) {
                return i2(e5, null);
              }
              return i2(null, r3);
            });
          }, T.loadSync = function(e3) {
            return Br(Et(jr("fs").readFileSync(e3)));
          }, Object.defineProperty(T, "__esModule", {value: true});
        }(typeof r == "object" && t !== void 0 ? r : e.opentype = {});
      }).call(this, jr("buffer").Buffer);
    }, {buffer: 4, fs: 2}], 13: [function(e, t, u) {
      (function(n) {
        function a(e2, t2) {
          for (var r = 0, i2 = e2.length - 1; 0 <= i2; i2--) {
            var n2 = e2[i2];
            n2 === "." ? e2.splice(i2, 1) : n2 === ".." ? (e2.splice(i2, 1), r++) : r && (e2.splice(i2, 1), r--);
          }
          if (t2)
            for (; r--; )
              e2.unshift("..");
          return e2;
        }
        function o(e2, t2) {
          if (e2.filter)
            return e2.filter(t2);
          for (var r = [], i2 = 0; i2 < e2.length; i2++)
            t2(e2[i2], i2, e2) && r.push(e2[i2]);
          return r;
        }
        u.resolve = function() {
          for (var e2 = "", t2 = false, r = arguments.length - 1; -1 <= r && !t2; r--) {
            var i2 = 0 <= r ? arguments[r] : n.cwd();
            if (typeof i2 != "string")
              throw new TypeError("Arguments to path.resolve must be strings");
            i2 && (e2 = i2 + "/" + e2, t2 = i2.charAt(0) === "/");
          }
          return (t2 ? "/" : "") + (e2 = a(o(e2.split("/"), function(e3) {
            return !!e3;
          }), !t2).join("/")) || ".";
        }, u.normalize = function(e2) {
          var t2 = u.isAbsolute(e2), r = i(e2, -1) === "/";
          return (e2 = a(o(e2.split("/"), function(e3) {
            return !!e3;
          }), !t2).join("/")) || t2 || (e2 = "."), e2 && r && (e2 += "/"), (t2 ? "/" : "") + e2;
        }, u.isAbsolute = function(e2) {
          return e2.charAt(0) === "/";
        }, u.join = function() {
          var e2 = Array.prototype.slice.call(arguments, 0);
          return u.normalize(o(e2, function(e3, t2) {
            if (typeof e3 != "string")
              throw new TypeError("Arguments to path.join must be strings");
            return e3;
          }).join("/"));
        }, u.relative = function(e2, t2) {
          function r(e3) {
            for (var t3 = 0; t3 < e3.length && e3[t3] === ""; t3++)
              ;
            for (var r2 = e3.length - 1; 0 <= r2 && e3[r2] === ""; r2--)
              ;
            return r2 < t3 ? [] : e3.slice(t3, r2 - t3 + 1);
          }
          e2 = u.resolve(e2).substr(1), t2 = u.resolve(t2).substr(1);
          for (var i2 = r(e2.split("/")), n2 = r(t2.split("/")), a2 = Math.min(i2.length, n2.length), o2 = a2, s = 0; s < a2; s++)
            if (i2[s] !== n2[s]) {
              o2 = s;
              break;
            }
          var l = [];
          for (s = o2; s < i2.length; s++)
            l.push("..");
          return (l = l.concat(n2.slice(o2))).join("/");
        }, u.sep = "/", u.delimiter = ":", u.dirname = function(e2) {
          if (typeof e2 != "string" && (e2 += ""), e2.length === 0)
            return ".";
          for (var t2 = e2.charCodeAt(0), r = t2 === 47, i2 = -1, n2 = true, a2 = e2.length - 1; 1 <= a2; --a2)
            if ((t2 = e2.charCodeAt(a2)) === 47) {
              if (!n2) {
                i2 = a2;
                break;
              }
            } else
              n2 = false;
          return i2 === -1 ? r ? "/" : "." : r && i2 === 1 ? "/" : e2.slice(0, i2);
        }, u.basename = function(e2, t2) {
          var r = function(e3) {
            typeof e3 != "string" && (e3 += "");
            var t3, r2 = 0, i2 = -1, n2 = true;
            for (t3 = e3.length - 1; 0 <= t3; --t3)
              if (e3.charCodeAt(t3) === 47) {
                if (!n2) {
                  r2 = t3 + 1;
                  break;
                }
              } else
                i2 === -1 && (n2 = false, i2 = t3 + 1);
            return i2 === -1 ? "" : e3.slice(r2, i2);
          }(e2);
          return t2 && r.substr(-1 * t2.length) === t2 && (r = r.substr(0, r.length - t2.length)), r;
        }, u.extname = function(e2) {
          typeof e2 != "string" && (e2 += "");
          for (var t2 = -1, r = 0, i2 = -1, n2 = true, a2 = 0, o2 = e2.length - 1; 0 <= o2; --o2) {
            var s = e2.charCodeAt(o2);
            if (s === 47) {
              if (n2)
                continue;
              r = o2 + 1;
              break;
            }
            i2 === -1 && (n2 = false, i2 = o2 + 1), s === 46 ? t2 === -1 ? t2 = o2 : a2 !== 1 && (a2 = 1) : t2 !== -1 && (a2 = -1);
          }
          return t2 === -1 || i2 === -1 || a2 === 0 || a2 === 1 && t2 === i2 - 1 && t2 === r + 1 ? "" : e2.slice(t2, i2);
        };
        var i = "ab".substr(-1) === "b" ? function(e2, t2, r) {
          return e2.substr(t2, r);
        } : function(e2, t2, r) {
          return t2 < 0 && (t2 = e2.length + t2), e2.substr(t2, r);
        };
      }).call(this, e("_process"));
    }, {_process: 14}], 14: [function(e, t, r) {
      var i, n, a = t.exports = {};
      function o() {
        throw new Error("setTimeout has not been defined");
      }
      function s() {
        throw new Error("clearTimeout has not been defined");
      }
      function l(t2) {
        if (i === setTimeout)
          return setTimeout(t2, 0);
        if ((i === o || !i) && setTimeout)
          return i = setTimeout, setTimeout(t2, 0);
        try {
          return i(t2, 0);
        } catch (e2) {
          try {
            return i.call(null, t2, 0);
          } catch (e3) {
            return i.call(this, t2, 0);
          }
        }
      }
      !function() {
        try {
          i = typeof setTimeout == "function" ? setTimeout : o;
        } catch (e2) {
          i = o;
        }
        try {
          n = typeof clearTimeout == "function" ? clearTimeout : s;
        } catch (e2) {
          n = s;
        }
      }();
      var u, h = [], c = false, f = -1;
      function d() {
        c && u && (c = false, u.length ? h = u.concat(h) : f = -1, h.length && p());
      }
      function p() {
        if (!c) {
          var e2 = l(d);
          c = true;
          for (var t2 = h.length; t2; ) {
            for (u = h, h = []; ++f < t2; )
              u && u[f].run();
            f = -1, t2 = h.length;
          }
          u = null, c = false, function(t3) {
            if (n === clearTimeout)
              return clearTimeout(t3);
            if ((n === s || !n) && clearTimeout)
              return n = clearTimeout, clearTimeout(t3);
            try {
              n(t3);
            } catch (e3) {
              try {
                return n.call(null, t3);
              } catch (e4) {
                return n.call(this, t3);
              }
            }
          }(e2);
        }
      }
      function m(e2, t2) {
        this.fun = e2, this.array = t2;
      }
      function v() {
      }
      a.nextTick = function(e2) {
        var t2 = new Array(arguments.length - 1);
        if (1 < arguments.length)
          for (var r2 = 1; r2 < arguments.length; r2++)
            t2[r2 - 1] = arguments[r2];
        h.push(new m(e2, t2)), h.length !== 1 || c || l(p);
      }, m.prototype.run = function() {
        this.fun.apply(null, this.array);
      }, a.title = "browser", a.browser = true, a.env = {}, a.argv = [], a.version = "", a.versions = {}, a.on = v, a.addListener = v, a.once = v, a.off = v, a.removeListener = v, a.removeAllListeners = v, a.emit = v, a.prependListener = v, a.prependOnceListener = v, a.listeners = function(e2) {
        return [];
      }, a.binding = function(e2) {
        throw new Error("process.binding is not supported");
      }, a.cwd = function() {
        return "/";
      }, a.chdir = function(e2) {
        throw new Error("process.chdir is not supported");
      }, a.umask = function() {
        return 0;
      };
    }, {}], 15: [function(e, t, r) {
      !function(e2) {
        if (!e2.fetch) {
          var t2 = "URLSearchParams" in e2, r2 = "Symbol" in e2 && "iterator" in Symbol, o = "FileReader" in e2 && "Blob" in e2 && function() {
            try {
              return new Blob(), true;
            } catch (e3) {
              return false;
            }
          }(), i = "FormData" in e2, n = "ArrayBuffer" in e2;
          if (n)
            var a = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], s = function(e3) {
              return e3 && DataView.prototype.isPrototypeOf(e3);
            }, l = ArrayBuffer.isView || function(e3) {
              return e3 && -1 < a.indexOf(Object.prototype.toString.call(e3));
            };
          p.prototype.append = function(e3, t3) {
            e3 = c(e3), t3 = f(t3);
            var r3 = this.map[e3];
            this.map[e3] = r3 ? r3 + "," + t3 : t3;
          }, p.prototype.delete = function(e3) {
            delete this.map[c(e3)];
          }, p.prototype.get = function(e3) {
            return e3 = c(e3), this.has(e3) ? this.map[e3] : null;
          }, p.prototype.has = function(e3) {
            return this.map.hasOwnProperty(c(e3));
          }, p.prototype.set = function(e3, t3) {
            this.map[c(e3)] = f(t3);
          }, p.prototype.forEach = function(e3, t3) {
            for (var r3 in this.map)
              this.map.hasOwnProperty(r3) && e3.call(t3, this.map[r3], r3, this);
          }, p.prototype.keys = function() {
            var r3 = [];
            return this.forEach(function(e3, t3) {
              r3.push(t3);
            }), d(r3);
          }, p.prototype.values = function() {
            var t3 = [];
            return this.forEach(function(e3) {
              t3.push(e3);
            }), d(t3);
          }, p.prototype.entries = function() {
            var r3 = [];
            return this.forEach(function(e3, t3) {
              r3.push([t3, e3]);
            }), d(r3);
          }, r2 && (p.prototype[Symbol.iterator] = p.prototype.entries);
          var u = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
          _.prototype.clone = function() {
            return new _(this, {body: this._bodyInit});
          }, b.call(_.prototype), b.call(w.prototype), w.prototype.clone = function() {
            return new w(this._bodyInit, {status: this.status, statusText: this.statusText, headers: new p(this.headers), url: this.url});
          }, w.error = function() {
            var e3 = new w(null, {status: 0, statusText: ""});
            return e3.type = "error", e3;
          };
          var h = [301, 302, 303, 307, 308];
          w.redirect = function(e3, t3) {
            if (h.indexOf(t3) === -1)
              throw new RangeError("Invalid status code");
            return new w(null, {status: t3, headers: {location: e3}});
          }, e2.Headers = p, e2.Request = _, e2.Response = w, e2.fetch = function(r3, n2) {
            return new Promise(function(i2, e3) {
              var t3 = new _(r3, n2), a2 = new XMLHttpRequest();
              a2.onload = function() {
                var e4, n3, t4 = {status: a2.status, statusText: a2.statusText, headers: (e4 = a2.getAllResponseHeaders() || "", n3 = new p(), e4.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e5) {
                  var t5 = e5.split(":"), r5 = t5.shift().trim();
                  if (r5) {
                    var i3 = t5.join(":").trim();
                    n3.append(r5, i3);
                  }
                }), n3)};
                t4.url = "responseURL" in a2 ? a2.responseURL : t4.headers.get("X-Request-URL");
                var r4 = "response" in a2 ? a2.response : a2.responseText;
                i2(new w(r4, t4));
              }, a2.onerror = function() {
                e3(new TypeError("Network request failed"));
              }, a2.ontimeout = function() {
                e3(new TypeError("Network request failed"));
              }, a2.open(t3.method, t3.url, true), t3.credentials === "include" ? a2.withCredentials = true : t3.credentials === "omit" && (a2.withCredentials = false), "responseType" in a2 && o && (a2.responseType = "blob"), t3.headers.forEach(function(e4, t4) {
                a2.setRequestHeader(t4, e4);
              }), a2.send(t3._bodyInit === void 0 ? null : t3._bodyInit);
            });
          }, e2.fetch.polyfill = true;
        }
        function c(e3) {
          if (typeof e3 != "string" && (e3 = String(e3)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e3))
            throw new TypeError("Invalid character in header field name");
          return e3.toLowerCase();
        }
        function f(e3) {
          return typeof e3 != "string" && (e3 = String(e3)), e3;
        }
        function d(t3) {
          var e3 = {next: function() {
            var e4 = t3.shift();
            return {done: e4 === void 0, value: e4};
          }};
          return r2 && (e3[Symbol.iterator] = function() {
            return e3;
          }), e3;
        }
        function p(t3) {
          this.map = {}, t3 instanceof p ? t3.forEach(function(e3, t4) {
            this.append(t4, e3);
          }, this) : Array.isArray(t3) ? t3.forEach(function(e3) {
            this.append(e3[0], e3[1]);
          }, this) : t3 && Object.getOwnPropertyNames(t3).forEach(function(e3) {
            this.append(e3, t3[e3]);
          }, this);
        }
        function m(e3) {
          if (e3.bodyUsed)
            return Promise.reject(new TypeError("Already read"));
          e3.bodyUsed = true;
        }
        function v(r3) {
          return new Promise(function(e3, t3) {
            r3.onload = function() {
              e3(r3.result);
            }, r3.onerror = function() {
              t3(r3.error);
            };
          });
        }
        function y(e3) {
          var t3 = new FileReader(), r3 = v(t3);
          return t3.readAsArrayBuffer(e3), r3;
        }
        function g(e3) {
          if (e3.slice)
            return e3.slice(0);
          var t3 = new Uint8Array(e3.byteLength);
          return t3.set(new Uint8Array(e3)), t3.buffer;
        }
        function b() {
          return this.bodyUsed = false, this._initBody = function(e3) {
            if (this._bodyInit = e3)
              if (typeof e3 == "string")
                this._bodyText = e3;
              else if (o && Blob.prototype.isPrototypeOf(e3))
                this._bodyBlob = e3;
              else if (i && FormData.prototype.isPrototypeOf(e3))
                this._bodyFormData = e3;
              else if (t2 && URLSearchParams.prototype.isPrototypeOf(e3))
                this._bodyText = e3.toString();
              else if (n && o && s(e3))
                this._bodyArrayBuffer = g(e3.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer]);
              else {
                if (!n || !ArrayBuffer.prototype.isPrototypeOf(e3) && !l(e3))
                  throw new Error("unsupported BodyInit type");
                this._bodyArrayBuffer = g(e3);
              }
            else
              this._bodyText = "";
            this.headers.get("content-type") || (typeof e3 == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t2 && URLSearchParams.prototype.isPrototypeOf(e3) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, o && (this.blob = function() {
            var e3 = m(this);
            if (e3)
              return e3;
            if (this._bodyBlob)
              return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }, this.arrayBuffer = function() {
            return this._bodyArrayBuffer ? m(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(y);
          }), this.text = function() {
            var e3, t3, r3, i2 = m(this);
            if (i2)
              return i2;
            if (this._bodyBlob)
              return e3 = this._bodyBlob, t3 = new FileReader(), r3 = v(t3), t3.readAsText(e3), r3;
            if (this._bodyArrayBuffer)
              return Promise.resolve(function(e4) {
                for (var t4 = new Uint8Array(e4), r4 = new Array(t4.length), i3 = 0; i3 < t4.length; i3++)
                  r4[i3] = String.fromCharCode(t4[i3]);
                return r4.join("");
              }(this._bodyArrayBuffer));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, i && (this.formData = function() {
            return this.text().then(x);
          }), this.json = function() {
            return this.text().then(JSON.parse);
          }, this;
        }
        function _(e3, t3) {
          var r3, i2, n2 = (t3 = t3 || {}).body;
          if (e3 instanceof _) {
            if (e3.bodyUsed)
              throw new TypeError("Already read");
            this.url = e3.url, this.credentials = e3.credentials, t3.headers || (this.headers = new p(e3.headers)), this.method = e3.method, this.mode = e3.mode, n2 || e3._bodyInit == null || (n2 = e3._bodyInit, e3.bodyUsed = true);
          } else
            this.url = String(e3);
          if (this.credentials = t3.credentials || this.credentials || "omit", !t3.headers && this.headers || (this.headers = new p(t3.headers)), this.method = (r3 = t3.method || this.method || "GET", i2 = r3.toUpperCase(), -1 < u.indexOf(i2) ? i2 : r3), this.mode = t3.mode || this.mode || null, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && n2)
            throw new TypeError("Body not allowed for GET or HEAD requests");
          this._initBody(n2);
        }
        function x(e3) {
          var n2 = new FormData();
          return e3.trim().split("&").forEach(function(e4) {
            if (e4) {
              var t3 = e4.split("="), r3 = t3.shift().replace(/\+/g, " "), i2 = t3.join("=").replace(/\+/g, " ");
              n2.append(decodeURIComponent(r3), decodeURIComponent(i2));
            }
          }), n2;
        }
        function w(e3, t3) {
          t3 = t3 || {}, this.type = "default", this.status = t3.status === void 0 ? 200 : t3.status, this.ok = 200 <= this.status && this.status < 300, this.statusText = "statusText" in t3 ? t3.statusText : "OK", this.headers = new p(t3.headers), this.url = t3.url || "", this._initBody(e3);
        }
      }(typeof self != "undefined" ? self : this);
    }, {}], 16: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var l, i = a(e("../core/main")), n = a(e("../color/color_conversion"));
      function a(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      var u = [{h: 0, s: 0, b: 0.8275, name: "gray"}, {h: 0, s: 0, b: 0.8627, name: "gray"}, {h: 0, s: 0, b: 0.7529, name: "gray"}, {h: 0.0167, s: 0.1176, b: 1, name: "light pink"}], h = [{h: 0, s: 0, b: 0, name: "black"}, {h: 0, s: 0, b: 0.5, name: "gray"}, {h: 0, s: 0, b: 1, name: "white"}, {h: 0, s: 0.5, b: 0.5, name: "dark maroon"}, {h: 0, s: 0.5, b: 1, name: "salmon pink"}, {h: 0, s: 1, b: 0, name: "black"}, {h: 0, s: 1, b: 0.5, name: "dark red"}, {h: 0, s: 1, b: 1, name: "red"}, {h: 5, s: 0, b: 1, name: "very light peach"}, {h: 5, s: 0.5, b: 0.5, name: "brown"}, {h: 5, s: 0.5, b: 1, name: "peach"}, {h: 5, s: 1, b: 0.5, name: "brick red"}, {h: 5, s: 1, b: 1, name: "crimson"}, {h: 10, s: 0, b: 1, name: "light peach"}, {h: 10, s: 0.5, b: 0.5, name: "brown"}, {h: 10, s: 0.5, b: 1, name: "light orange"}, {h: 10, s: 1, b: 0.5, name: "brown"}, {h: 10, s: 1, b: 1, name: "orange"}, {h: 15, s: 0, b: 1, name: "very light yellow"}, {h: 15, s: 0.5, b: 0.5, name: "olive green"}, {h: 15, s: 0.5, b: 1, name: "light yellow"}, {h: 15, s: 1, b: 0, name: "dark olive green"}, {h: 15, s: 1, b: 0.5, name: "olive green"}, {h: 15, s: 1, b: 1, name: "yellow"}, {h: 20, s: 0, b: 1, name: "very light yellow"}, {h: 20, s: 0.5, b: 0.5, name: "olive green"}, {h: 20, s: 0.5, b: 1, name: "light yellow green"}, {h: 20, s: 1, b: 0, name: "dark olive green"}, {h: 20, s: 1, b: 0.5, name: "dark yellow green"}, {h: 20, s: 1, b: 1, name: "yellow green"}, {h: 25, s: 0.5, b: 0.5, name: "dark yellow green"}, {h: 25, s: 0.5, b: 1, name: "light green"}, {h: 25, s: 1, b: 0.5, name: "dark green"}, {h: 25, s: 1, b: 1, name: "green"}, {h: 30, s: 0.5, b: 1, name: "light green"}, {h: 30, s: 1, b: 0.5, name: "dark green"}, {h: 30, s: 1, b: 1, name: "green"}, {h: 35, s: 0, b: 0.5, name: "light green"}, {h: 35, s: 0, b: 1, name: "very light green"}, {h: 35, s: 0.5, b: 0.5, name: "dark green"}, {h: 35, s: 0.5, b: 1, name: "light green"}, {h: 35, s: 1, b: 0, name: "very dark green"}, {h: 35, s: 1, b: 0.5, name: "dark green"}, {h: 35, s: 1, b: 1, name: "green"}, {h: 40, s: 0, b: 1, name: "very light green"}, {h: 40, s: 0.5, b: 0.5, name: "dark green"}, {h: 40, s: 0.5, b: 1, name: "light green"}, {h: 40, s: 1, b: 0.5, name: "dark green"}, {h: 40, s: 1, b: 1, name: "green"}, {h: 45, s: 0.5, b: 1, name: "light turquoise"}, {h: 45, s: 1, b: 0.5, name: "dark turquoise"}, {h: 45, s: 1, b: 1, name: "turquoise"}, {h: 50, s: 0, b: 1, name: "light sky blue"}, {h: 50, s: 0.5, b: 0.5, name: "dark cyan"}, {h: 50, s: 0.5, b: 1, name: "light cyan"}, {h: 50, s: 1, b: 0.5, name: "dark cyan"}, {h: 50, s: 1, b: 1, name: "cyan"}, {h: 55, s: 0, b: 1, name: "light sky blue"}, {h: 55, s: 0.5, b: 1, name: "light sky blue"}, {h: 55, s: 1, b: 0.5, name: "dark blue"}, {h: 55, s: 1, b: 1, name: "sky blue"}, {h: 60, s: 0, b: 0.5, name: "gray"}, {h: 60, s: 0, b: 1, name: "very light blue"}, {h: 60, s: 0.5, b: 0.5, name: "blue"}, {h: 60, s: 0.5, b: 1, name: "light blue"}, {h: 60, s: 1, b: 0.5, name: "navy blue"}, {h: 60, s: 1, b: 1, name: "blue"}, {h: 65, s: 0, b: 1, name: "lavender"}, {h: 65, s: 0.5, b: 0.5, name: "navy blue"}, {h: 65, s: 0.5, b: 1, name: "light purple"}, {h: 65, s: 1, b: 0.5, name: "dark navy blue"}, {h: 65, s: 1, b: 1, name: "blue"}, {h: 70, s: 0, b: 1, name: "lavender"}, {h: 70, s: 0.5, b: 0.5, name: "navy blue"}, {h: 70, s: 0.5, b: 1, name: "lavender blue"}, {h: 70, s: 1, b: 0.5, name: "dark navy blue"}, {h: 70, s: 1, b: 1, name: "blue"}, {h: 75, s: 0.5, b: 1, name: "lavender"}, {h: 75, s: 1, b: 0.5, name: "dark purple"}, {h: 75, s: 1, b: 1, name: "purple"}, {h: 80, s: 0.5, b: 1, name: "pinkish purple"}, {h: 80, s: 1, b: 0.5, name: "dark purple"}, {h: 80, s: 1, b: 1, name: "purple"}, {h: 85, s: 0, b: 1, name: "light pink"}, {h: 85, s: 0.5, b: 0.5, name: "purple"}, {h: 85, s: 0.5, b: 1, name: "light fuchsia"}, {h: 85, s: 1, b: 0.5, name: "dark fuchsia"}, {h: 85, s: 1, b: 1, name: "fuchsia"}, {h: 90, s: 0.5, b: 0.5, name: "dark fuchsia"}, {h: 90, s: 0.5, b: 1, name: "hot pink"}, {h: 90, s: 1, b: 0.5, name: "dark fuchsia"}, {h: 90, s: 1, b: 1, name: "fuchsia"}, {h: 95, s: 0, b: 1, name: "pink"}, {h: 95, s: 0.5, b: 1, name: "light pink"}, {h: 95, s: 1, b: 0.5, name: "dark magenta"}, {h: 95, s: 1, b: 1, name: "magenta"}];
      i.default.prototype._rgbColorName = function(e2) {
        var t2 = n.default._rgbaToHSBA(e2);
        return function(e3) {
          var t3;
          if (e3[0] !== 0) {
            e3[0] = Math.round(100 * e3[0]);
            var r2 = e3[0].toString().split(""), i2 = r2.length - 1;
            r2[i2] = parseInt(r2[i2]), r2[i2] < 2.5 ? r2[i2] = 0 : 2.5 <= r2[i2] && r2[i2] < 7.5 && (r2[i2] = 5), r2.length === 2 ? (r2[0] = parseInt(r2[0]), 7.5 <= r2[i2] && (r2[i2] = 0, r2[0] = r2[0] + 1), e3[0] = 10 * r2[0] + r2[1]) : 7.5 <= r2[i2] ? e3[0] = 10 : e3[0] = r2[i2];
          }
          e3[2] = e3[2] / 255;
          for (var n2 = e3.length - 1; 1 <= n2; n2--)
            e3[n2] <= 0.25 ? e3[n2] = 0 : 0.25 < e3[n2] && e3[n2] < 0.75 ? e3[n2] = 0.5 : e3[n2] = 1;
          if (e3[0] === 0 && e3[1] === 0 && e3[2] === 1) {
            for (var a2 = 2; 0 <= a2; a2--)
              l[a2] = Math.round(1e4 * l[a2]) / 1e4;
            for (var o2 = 0; o2 < u.length; o2++) {
              if (u[o2].h === l[0] && u[o2].s === l[1] && u[o2].b === l[2]) {
                t3 = u[o2].name;
                break;
              }
              t3 = "white";
            }
          } else
            for (var s = 0; s < h.length; s++)
              if (h[s].h === e3[0] && h[s].s === e3[1] && h[s].b === e3[2]) {
                t3 = h[s].name;
                break;
              }
          return t3;
        }([(l = t2)[0], t2[1], t2[2]]);
      };
      var o = i.default;
      r.default = o;
    }, {"../color/color_conversion": 22, "../core/main": 36}], 17: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, o = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      var l = "_Description", u = "_fallbackDesc", h = "_fallbackTable", c = "_Label", f = "_labelDesc", d = "_labelTable";
      function s(e2) {
        if (e2 === "label" || e2 === "fallback")
          throw new Error("description should not be LABEL or FALLBACK");
        return e2.endsWith(".") || e2.endsWith(";") || e2.endsWith(",") || e2.endsWith("?") || e2.endsWith("!") || (e2 += "."), e2;
      }
      o.default.prototype.describe = function(e2, t2) {
        if (o.default._validateParameters("describe", arguments), typeof e2 == "string") {
          var r2 = this.canvas.id;
          e2 = s(e2), this.dummyDOM || (this.dummyDOM = document.getElementById(r2).parentNode), this.descriptions || (this.descriptions = {}), this.descriptions.fallback ? this.descriptions.fallback.innerHTML !== e2 && (this.descriptions.fallback.innerHTML = e2) : this._describeHTML("fallback", e2), t2 === this.LABEL && (this.descriptions.label ? this.descriptions.label.innerHTML !== e2 && (this.descriptions.label.innerHTML = e2) : this._describeHTML("label", e2));
        }
      }, o.default.prototype.describeElement = function(e2, t2, r2) {
        if (o.default._validateParameters("describeElement", arguments), typeof t2 == "string" && typeof e2 == "string") {
          var i2 = this.canvas.id;
          t2 = s(t2);
          var n2 = function(e3) {
            if (e3 === "label" || e3 === "fallback")
              throw new Error("element name should not be LABEL or FALLBACK");
            e3.endsWith(".") || e3.endsWith(";") || e3.endsWith(",") ? e3 = e3.replace(/.$/, ":") : e3.endsWith(":") || (e3 += ":");
            return e3;
          }(e2);
          e2 = e2.replace(/[^a-zA-Z0-9 ]/g, "");
          var a = '<th scope="row">'.concat(n2, "</th><td>").concat(t2, "</td>");
          this.dummyDOM || (this.dummyDOM = document.getElementById(i2).parentNode), this.descriptions ? this.descriptions.fallbackElements || (this.descriptions.fallbackElements = {}) : this.descriptions = {fallbackElements: {}}, this.descriptions.fallbackElements[e2] ? this.descriptions.fallbackElements[e2].innerHTML !== a && (this.descriptions.fallbackElements[e2].innerHTML = a) : this._describeElementHTML("fallback", e2, a), r2 === this.LABEL && (this.descriptions.labelElements || (this.descriptions.labelElements = {}), this.descriptions.labelElements[e2] ? this.descriptions.labelElements[e2].innerHTML !== a && (this.descriptions.labelElements[e2].innerHTML = a) : this._describeElementHTML("label", e2, a));
        }
      }, o.default.prototype._describeHTML = function(e2, t2) {
        var r2 = this.canvas.id;
        if (e2 === "fallback") {
          if (this.dummyDOM.querySelector("#".concat(r2 + l)))
            this.dummyDOM.querySelector("#" + r2 + h).insertAdjacentHTML("beforebegin", '<p id="'.concat(r2 + u, '"></p>'));
          else {
            var i2 = '<div id="'.concat(r2).concat(l, '" role="region" aria-label="Canvas Description"><p id="').concat(r2).concat(u, '"></p></div>');
            this.dummyDOM.querySelector("#".concat(r2, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(r2, "accessibleOutput")).insertAdjacentHTML("beforebegin", i2) : this.dummyDOM.querySelector("#".concat(r2)).innerHTML = i2;
          }
          return this.descriptions.fallback = this.dummyDOM.querySelector("#".concat(r2).concat(u)), void (this.descriptions.fallback.innerHTML = t2);
        }
        if (e2 === "label") {
          if (this.dummyDOM.querySelector("#".concat(r2 + c)))
            this.dummyDOM.querySelector("#".concat(r2 + d)) && this.dummyDOM.querySelector("#".concat(r2 + d)).insertAdjacentHTML("beforebegin", '<p id="'.concat(r2).concat(f, '"></p>'));
          else {
            var n2 = '<div id="'.concat(r2).concat(c, '" class="p5Label"><p id="').concat(r2).concat(f, '"></p></div>');
            this.dummyDOM.querySelector("#".concat(r2, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(r2, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", n2) : this.dummyDOM.querySelector("#" + r2).insertAdjacentHTML("afterend", n2);
          }
          return this.descriptions.label = this.dummyDOM.querySelector("#" + r2 + f), void (this.descriptions.label.innerHTML = t2);
        }
      }, o.default.prototype._describeElementHTML = function(e2, t2, r2) {
        var i2 = this.canvas.id;
        if (e2 === "fallback") {
          if (this.dummyDOM.querySelector("#".concat(i2 + l)))
            this.dummyDOM.querySelector("#" + i2 + h) || this.dummyDOM.querySelector("#" + i2 + u).insertAdjacentHTML("afterend", '<table id="'.concat(i2).concat(h, '"><caption>Canvas elements and their descriptions</caption></table>'));
          else {
            var n2 = '<div id="'.concat(i2).concat(l, '" role="region" aria-label="Canvas Description"><table id="').concat(i2).concat(h, '"><caption>Canvas elements and their descriptions</caption></table></div>');
            this.dummyDOM.querySelector("#".concat(i2, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(i2, "accessibleOutput")).insertAdjacentHTML("beforebegin", n2) : this.dummyDOM.querySelector("#" + i2).innerHTML = n2;
          }
          var a = document.createElement("tr");
          return a.id = i2 + "_fte_" + t2, this.dummyDOM.querySelector("#" + i2 + h).appendChild(a), this.descriptions.fallbackElements[t2] = this.dummyDOM.querySelector("#".concat(i2).concat("_fte_").concat(t2)), void (this.descriptions.fallbackElements[t2].innerHTML = r2);
        }
        if (e2 === "label") {
          if (this.dummyDOM.querySelector("#".concat(i2 + c)))
            this.dummyDOM.querySelector("#".concat(i2 + d)) || this.dummyDOM.querySelector("#" + i2 + f).insertAdjacentHTML("afterend", '<table id="'.concat(i2 + d, '"></table>'));
          else {
            var o2 = '<div id="'.concat(i2).concat(c, '" class="p5Label"><table id="').concat(i2).concat(d, '"></table></div>');
            this.dummyDOM.querySelector("#".concat(i2, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(i2, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", o2) : this.dummyDOM.querySelector("#" + i2).insertAdjacentHTML("afterend", o2);
          }
          var s2 = document.createElement("tr");
          s2.id = i2 + "_lte_" + t2, this.dummyDOM.querySelector("#" + i2 + d).appendChild(s2), this.descriptions.labelElements[t2] = this.dummyDOM.querySelector("#".concat(i2).concat("_lte_").concat(t2)), this.descriptions.labelElements[t2].innerHTML = r2;
        }
      };
      var n = o.default;
      r.default = n;
    }, {"../core/main": 36}], 18: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype._updateGridOutput = function(e2) {
        if (this.dummyDOM.querySelector("#".concat(e2, "_summary"))) {
          var t2 = this._accessibleOutputs[e2], r2 = function(e3, t3) {
            var r3 = "", i3 = "", n3 = 0;
            for (var a2 in t3) {
              var o = 0;
              for (var s in t3[a2]) {
                var l = '<li id="'.concat(e3, "shape").concat(n3, '">').concat(t3[a2][s].color, " ").concat(a2, ",");
                a2 === "line" ? l += " location = ".concat(t3[a2][s].pos, ", length = ").concat(t3[a2][s].length, " pixels") : (l += " location = ".concat(t3[a2][s].pos), a2 !== "point" && (l += ", area = ".concat(t3[a2][s].area, " %")), l += "</li>"), r3 += l, o++, n3++;
              }
              i3 = 1 < o ? "".concat(i3, " ").concat(o, " ").concat(a2, "s") : "".concat(i3, " ").concat(o, " ").concat(a2);
            }
            return {numShapes: [n3, i3], details: r3};
          }(e2, this.ingredients.shapes), i2 = function(e3, t3, r3, i3) {
            var n3 = "".concat(t3, " canvas, ").concat(r3, " by ").concat(i3, " pixels, contains ").concat(e3[0]);
            n3 = e3[0] === 1 ? "".concat(n3, " shape: ").concat(e3[1]) : "".concat(n3, " shapes: ").concat(e3[1]);
            return n3;
          }(r2.numShapes, this.ingredients.colors.background, this.width, this.height), n2 = function(e3, t3) {
            var r3 = 0, i3 = "", n3 = Array.apply(null, Array(10)).map(function() {
            });
            for (var a2 in n3)
              n3[a2] = Array.apply(null, Array(10)).map(function() {
              });
            for (var o in t3)
              for (var s in t3[o]) {
                var l = void 0;
                l = o !== "line" ? '<a href="#'.concat(e3, "shape").concat(r3, '">').concat(t3[o][s].color, " ").concat(o, "</a>") : '<a href="#'.concat(e3, "shape").concat(r3, '">').concat(t3[o][s].color, " ").concat(o, " midpoint</a>"), n3[t3[o][s].loc.locY][t3[o][s].loc.locX] ? n3[t3[o][s].loc.locY][t3[o][s].loc.locX] = n3[t3[o][s].loc.locY][t3[o][s].loc.locX] + "  " + l : n3[t3[o][s].loc.locY][t3[o][s].loc.locX] = l, r3++;
              }
            for (var u in n3) {
              var h = "<tr>";
              for (var c in n3[u])
                h += "<td>", n3[u][c] !== void 0 && (h += n3[u][c]), h += "</td>";
              i3 = i3 + h + "</tr>";
            }
            return i3;
          }(e2, this.ingredients.shapes);
          i2 !== t2.summary.innerHTML && (t2.summary.innerHTML = i2), n2 !== t2.map.innerHTML && (t2.map.innerHTML = n2), r2.details !== t2.shapeDetails.innerHTML && (t2.shapeDetails.innerHTML = r2.details), this._accessibleOutputs[e2] = t2;
        }
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 19: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function l(e2, t2, r2) {
        return e2[0] < 0.4 * t2 ? e2[1] < 0.4 * r2 ? "top left" : e2[1] > 0.6 * r2 ? "bottom left" : "mid left" : e2[0] > 0.6 * t2 ? e2[1] < 0.4 * r2 ? "top right" : e2[1] > 0.6 * r2 ? "bottom right" : "mid right" : e2[1] < 0.4 * r2 ? "top middle" : e2[1] > 0.6 * r2 ? "bottom middle" : "middle";
      }
      function u(e2, t2, r2) {
        var i2 = Math.floor(e2[0] / t2 * 10), n2 = Math.floor(e2[1] / r2 * 10);
        return i2 === 10 && --i2, n2 === 10 && --n2, {locX: i2, locY: n2};
      }
      n.default.prototype.textOutput = function(e2) {
        n.default._validateParameters("textOutput", arguments), this._accessibleOutputs.text || (this._accessibleOutputs.text = true, this._createOutput("textOutput", "Fallback"), e2 === this.LABEL && (this._accessibleOutputs.textLabel = true, this._createOutput("textOutput", "Label")));
      }, n.default.prototype.gridOutput = function(e2) {
        n.default._validateParameters("gridOutput", arguments), this._accessibleOutputs.grid || (this._accessibleOutputs.grid = true, this._createOutput("gridOutput", "Fallback"), e2 === this.LABEL && (this._accessibleOutputs.gridLabel = true, this._createOutput("gridOutput", "Label")));
      }, n.default.prototype._addAccsOutput = function() {
        return this._accessibleOutputs || (this._accessibleOutputs = {text: false, grid: false, textLabel: false, gridLabel: false}), this._accessibleOutputs.grid || this._accessibleOutputs.text;
      }, n.default.prototype._createOutput = function(e2, t2) {
        var r2, i2, n2, a2 = this.canvas.id;
        this.ingredients || (this.ingredients = {shapes: {}, colors: {background: "white", fill: "white", stroke: "black"}, pShapes: ""}), this.dummyDOM || (this.dummyDOM = document.getElementById(a2).parentNode);
        var o = "";
        t2 === "Fallback" ? (r2 = a2 + e2, i2 = a2 + "accessibleOutput", this.dummyDOM.querySelector("#".concat(i2)) || (this.dummyDOM.querySelector("#".concat(a2, "_Description")) ? this.dummyDOM.querySelector("#".concat(a2, "_Description")).insertAdjacentHTML("afterend", '<div id="'.concat(i2, '" role="region" aria-label="Canvas Outputs"></div>')) : this.dummyDOM.querySelector("#".concat(a2)).innerHTML = '<div id="'.concat(i2, '" role="region" aria-label="Canvas Outputs"></div>'))) : t2 === "Label" && (r2 = a2 + e2 + (o = t2), i2 = a2 + "accessibleOutput" + t2, this.dummyDOM.querySelector("#".concat(i2)) || (this.dummyDOM.querySelector("#".concat(a2, "_Label")) ? this.dummyDOM.querySelector("#".concat(a2, "_Label")).insertAdjacentHTML("afterend", '<div id="'.concat(i2, '"></div>')) : this.dummyDOM.querySelector("#".concat(a2)).insertAdjacentHTML("afterend", '<div id="'.concat(i2, '"></div>')))), this._accessibleOutputs[r2] = {}, e2 === "textOutput" ? (o = "#".concat(a2, "gridOutput").concat(o), n2 = '<div id="'.concat(r2, '">Text Output<div id="').concat(r2, 'Summary" aria-label="text output summary"><p id="').concat(r2, '_summary"></p><ul id="').concat(r2, '_list"></ul></div><table id="').concat(r2, '_shapeDetails" summary="text output shape details"></table></div>'), this.dummyDOM.querySelector(o) ? this.dummyDOM.querySelector(o).insertAdjacentHTML("beforebegin", n2) : this.dummyDOM.querySelector("#".concat(i2)).innerHTML = n2, this._accessibleOutputs[r2].list = this.dummyDOM.querySelector("#".concat(r2, "_list"))) : e2 === "gridOutput" && (o = "#".concat(a2, "textOutput").concat(o), n2 = '<div id="'.concat(r2, '">Grid Output<p id="').concat(r2, '_summary" aria-label="grid output summary"><table id="').concat(r2, '_map" summary="grid output content"></table><ul id="').concat(r2, '_shapeDetails" aria-label="grid output shape details"></ul></div>'), this.dummyDOM.querySelector(o) ? this.dummyDOM.querySelector(o).insertAdjacentHTML("afterend", n2) : this.dummyDOM.querySelector("#".concat(i2)).innerHTML = n2, this._accessibleOutputs[r2].map = this.dummyDOM.querySelector("#".concat(r2, "_map"))), this._accessibleOutputs[r2].shapeDetails = this.dummyDOM.querySelector("#".concat(r2, "_shapeDetails")), this._accessibleOutputs[r2].summary = this.dummyDOM.querySelector("#".concat(r2, "_summary"));
      }, n.default.prototype._updateAccsOutput = function() {
        var e2 = this.canvas.id;
        JSON.stringify(this.ingredients.shapes) !== this.ingredients.pShapes && (this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this._accessibleOutputs.text && this._updateTextOutput(e2 + "textOutput"), this._accessibleOutputs.grid && this._updateGridOutput(e2 + "gridOutput"), this._accessibleOutputs.textLabel && this._updateTextOutput(e2 + "textOutputLabel"), this._accessibleOutputs.gridLabel && this._updateGridOutput(e2 + "gridOutputLabel"));
      }, n.default.prototype._accsBackground = function(e2) {
        this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this.ingredients.shapes = {}, this.ingredients.colors.backgroundRGBA !== e2 && (this.ingredients.colors.backgroundRGBA = e2, this.ingredients.colors.background = this._rgbColorName(e2));
      }, n.default.prototype._accsCanvasColors = function(e2, t2) {
        e2 === "fill" ? this.ingredients.colors.fillRGBA !== t2 && (this.ingredients.colors.fillRGBA = t2, this.ingredients.colors.fill = this._rgbColorName(t2)) : e2 === "stroke" && this.ingredients.colors.strokeRGBA !== t2 && (this.ingredients.colors.strokeRGBA = t2, this.ingredients.colors.stroke = this._rgbColorName(t2));
      }, n.default.prototype._accsOutput = function(e2, t2) {
        e2 === "ellipse" && t2[2] === t2[3] ? e2 = "circle" : e2 === "rectangle" && t2[2] === t2[3] && (e2 = "square");
        var r2 = {}, i2 = true, n2 = function(e3, t3) {
          var r3, i3;
          i3 = e3 === "rectangle" || e3 === "ellipse" || e3 === "arc" || e3 === "circle" || e3 === "square" ? (r3 = Math.round(t3[0] + t3[2] / 2), Math.round(t3[1] + t3[3] / 2)) : e3 === "triangle" ? (r3 = (t3[0] + t3[2] + t3[4]) / 3, (t3[1] + t3[3] + t3[5]) / 3) : e3 === "quadrilateral" ? (r3 = (t3[0] + t3[2] + t3[4] + t3[6]) / 4, (t3[1] + t3[3] + t3[5] + t3[7]) / 4) : e3 === "line" ? (r3 = (t3[0] + t3[2]) / 2, (t3[1] + t3[3]) / 2) : (r3 = t3[0], t3[1]);
          return [r3, i3];
        }(e2, t2);
        if (e2 === "line") {
          r2.color = this.ingredients.colors.stroke, r2.length = Math.round(this.dist(t2[0], t2[1], t2[2], t2[3]));
          var a2 = l([t2[0], [1]], this.width, this.height), o = l([t2[2], [3]], this.width, this.height);
          r2.loc = u(n2, this.width, this.height), r2.pos = a2 === o ? "at ".concat(a2) : "from ".concat(a2, " to ").concat(o);
        } else
          e2 === "point" ? r2.color = this.ingredients.colors.stroke : (r2.color = this.ingredients.colors.fill, r2.area = function(e3, t3, r3, i3) {
            var n3 = 0;
            if (e3 === "arc") {
              var a3 = ((t3[5] - t3[4]) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI);
              if (n3 = a3 * t3[2] * t3[3] / 8, t3[6] === "open" || t3[6] === "chord") {
                var o2 = t3[0], s2 = t3[1], l2 = t3[0] + t3[2] / 2 * Math.cos(t3[4]).toFixed(2), u2 = t3[1] + t3[3] / 2 * Math.sin(t3[4]).toFixed(2), h = t3[0] + t3[2] / 2 * Math.cos(t3[5]).toFixed(2), c = t3[1] + t3[3] / 2 * Math.sin(t3[5]).toFixed(2), f = Math.abs(o2 * (u2 - c) + l2 * (c - s2) + h * (s2 - u2)) / 2;
                a3 > Math.PI ? n3 += f : n3 -= f;
              }
            } else
              e3 === "ellipse" || e3 === "circle" ? n3 = 3.14 * t3[2] / 2 * t3[3] / 2 : e3 === "line" ? n3 = 0 : e3 === "point" ? n3 = 0 : e3 === "quadrilateral" ? n3 = Math.abs((t3[6] + t3[0]) * (t3[7] - t3[1]) + (t3[0] + t3[2]) * (t3[1] - t3[3]) + (t3[2] + t3[4]) * (t3[3] - t3[5]) + (t3[4] + t3[6]) * (t3[5] - t3[7])) / 2 : e3 === "rectangle" || e3 === "square" ? n3 = t3[2] * t3[3] : e3 === "triangle" && (n3 = Math.abs(t3[0] * (t3[3] - t3[5]) + t3[2] * (t3[5] - t3[1]) + t3[4] * (t3[1] - t3[3])) / 2);
            return Math.round(100 * n3 / (r3 * i3));
          }(e2, t2, this.width, this.height)), r2.pos = l(n2, this.width, this.height), r2.loc = u(n2, this.width, this.height);
        if (this.ingredients.shapes[e2]) {
          if (this.ingredients.shapes[e2] !== [r2]) {
            for (var s in this.ingredients.shapes[e2])
              JSON.stringify(this.ingredients.shapes[e2][s]) === JSON.stringify(r2) && (i2 = false);
            i2 === true && this.ingredients.shapes[e2].push(r2);
          }
        } else
          this.ingredients.shapes[e2] = [r2];
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 20: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype._updateTextOutput = function(e2) {
        if (this.dummyDOM.querySelector("#".concat(e2, "_summary"))) {
          var t2 = this._accessibleOutputs[e2], r2 = function(e3, t3) {
            var r3 = "", i3 = 0;
            for (var n3 in t3)
              for (var a2 in t3[n3]) {
                var o = '<li><a href="#'.concat(e3, "shape").concat(i3, '">').concat(t3[n3][a2].color, " ").concat(n3, "</a>");
                n3 === "line" ? o += ", ".concat(t3[n3][a2].pos, ", ").concat(t3[n3][a2].length, " pixels long.</li>") : (o += ", at ".concat(t3[n3][a2].pos), n3 !== "point" && (o += ", covering ".concat(t3[n3][a2].area, "% of the canvas")), o += ".</li>"), r3 += o, i3++;
              }
            return {numShapes: i3, listShapes: r3};
          }(e2, this.ingredients.shapes), i2 = function(e3, t3, r3, i3) {
            var n3 = "Your output is a, ".concat(r3, " by ").concat(i3, " pixels, ").concat(t3, " canvas containing the following");
            n3 = e3 === 1 ? "".concat(n3, " shape:") : "".concat(n3, " ").concat(e3, " shapes:");
            return n3;
          }(r2.numShapes, this.ingredients.colors.background, this.width, this.height), n2 = function(e3, t3) {
            var r3 = "", i3 = 0;
            for (var n3 in t3)
              for (var a2 in t3[n3]) {
                var o = '<tr id="'.concat(e3, "shape").concat(i3, '"><th>').concat(t3[n3][a2].color, " ").concat(n3, "</th>");
                n3 === "line" ? o += "<td>location = ".concat(t3[n3][a2].pos, "</td><td>length = ").concat(t3[n3][a2].length, " pixels</td></tr>") : (o += "<td>location = ".concat(t3[n3][a2].pos, "</td>"), n3 !== "point" && (o += "<td> area = ".concat(t3[n3][a2].area, "%</td>")), o += "</tr>"), r3 += o, i3++;
              }
            return r3;
          }(e2, this.ingredients.shapes);
          i2 !== t2.summary.innerHTML && (t2.summary.innerHTML = i2), r2.listShapes !== t2.list.innerHTML && (t2.list.innerHTML = r2.listShapes), n2 !== t2.shapeDetails.innerHTML && (t2.shapeDetails.innerHTML = n2), this._accessibleOutputs[e2] = t2;
        }
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 21: [function(e, t, r) {
      var i, n = (i = e("./core/main")) && i.__esModule ? i : {default: i};
      e("./core/constants"), e("./core/environment"), e("./core/friendly_errors/stacktrace"), e("./core/friendly_errors/validate_params"), e("./core/friendly_errors/file_errors"), e("./core/friendly_errors/fes_core"), e("./core/helpers"), e("./core/legacy"), e("./core/preload"), e("./core/p5.Element"), e("./core/p5.Graphics"), e("./core/p5.Renderer"), e("./core/p5.Renderer2D"), e("./core/rendering"), e("./core/shim"), e("./core/structure"), e("./core/transform"), e("./core/shape/2d_primitives"), e("./core/shape/attributes"), e("./core/shape/curves"), e("./core/shape/vertex"), e("./accessibility/outputs"), e("./accessibility/textOutput"), e("./accessibility/gridOutput"), e("./accessibility/color_namer"), e("./color/color_conversion"), e("./color/creating_reading"), e("./color/p5.Color"), e("./color/setting"), e("./data/p5.TypedDict"), e("./data/local_storage.js"), e("./dom/dom"), e("./accessibility/describe"), e("./events/acceleration"), e("./events/keyboard"), e("./events/mouse"), e("./events/touch"), e("./image/filters"), e("./image/image"), e("./image/loading_displaying"), e("./image/p5.Image"), e("./image/pixels"), e("./io/files"), e("./io/p5.Table"), e("./io/p5.TableRow"), e("./io/p5.XML"), e("./math/calculation"), e("./math/math"), e("./math/noise"), e("./math/p5.Vector"), e("./math/random"), e("./math/trigonometry"), e("./typography/attributes"), e("./typography/loading_displaying"), e("./typography/p5.Font"), e("./utilities/array_functions"), e("./utilities/conversion"), e("./utilities/string_functions"), e("./utilities/time_date"), e("./webgl/3d_primitives"), e("./webgl/interaction"), e("./webgl/light"), e("./webgl/loading"), e("./webgl/material"), e("./webgl/p5.Camera"), e("./webgl/p5.Geometry"), e("./webgl/p5.Matrix"), e("./webgl/p5.RendererGL.Immediate"), e("./webgl/p5.RendererGL"), e("./webgl/p5.RendererGL.Retained"), e("./webgl/p5.Shader"), e("./webgl/p5.RenderBuffer"), e("./webgl/p5.Texture"), e("./webgl/text"), e("./core/init"), t.exports = n.default;
    }, {"./accessibility/color_namer": 16, "./accessibility/describe": 17, "./accessibility/gridOutput": 18, "./accessibility/outputs": 19, "./accessibility/textOutput": 20, "./color/color_conversion": 22, "./color/creating_reading": 23, "./color/p5.Color": 24, "./color/setting": 25, "./core/constants": 26, "./core/environment": 27, "./core/friendly_errors/fes_core": 28, "./core/friendly_errors/file_errors": 29, "./core/friendly_errors/stacktrace": 30, "./core/friendly_errors/validate_params": 31, "./core/helpers": 32, "./core/init": 33, "./core/legacy": 35, "./core/main": 36, "./core/p5.Element": 37, "./core/p5.Graphics": 38, "./core/p5.Renderer": 39, "./core/p5.Renderer2D": 40, "./core/preload": 41, "./core/rendering": 42, "./core/shape/2d_primitives": 43, "./core/shape/attributes": 44, "./core/shape/curves": 45, "./core/shape/vertex": 46, "./core/shim": 47, "./core/structure": 48, "./core/transform": 49, "./data/local_storage.js": 50, "./data/p5.TypedDict": 51, "./dom/dom": 52, "./events/acceleration": 53, "./events/keyboard": 54, "./events/mouse": 55, "./events/touch": 56, "./image/filters": 57, "./image/image": 58, "./image/loading_displaying": 59, "./image/p5.Image": 60, "./image/pixels": 61, "./io/files": 62, "./io/p5.Table": 63, "./io/p5.TableRow": 64, "./io/p5.XML": 65, "./math/calculation": 66, "./math/math": 67, "./math/noise": 68, "./math/p5.Vector": 69, "./math/random": 70, "./math/trigonometry": 71, "./typography/attributes": 72, "./typography/loading_displaying": 73, "./typography/p5.Font": 74, "./utilities/array_functions": 75, "./utilities/conversion": 76, "./utilities/string_functions": 77, "./utilities/time_date": 78, "./webgl/3d_primitives": 79, "./webgl/interaction": 80, "./webgl/light": 81, "./webgl/loading": 82, "./webgl/material": 83, "./webgl/p5.Camera": 84, "./webgl/p5.Geometry": 85, "./webgl/p5.Matrix": 86, "./webgl/p5.RenderBuffer": 87, "./webgl/p5.RendererGL": 90, "./webgl/p5.RendererGL.Immediate": 88, "./webgl/p5.RendererGL.Retained": 89, "./webgl/p5.Shader": 91, "./webgl/p5.Texture": 92, "./webgl/text": 93}], 22: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.ColorConversion = {}, n.default.ColorConversion._hsbaToHSLA = function(e2) {
        var t2 = e2[0], r2 = e2[1], i2 = e2[2], n2 = (2 - r2) * i2 / 2;
        return n2 != 0 && (n2 == 1 ? r2 = 0 : n2 < 0.5 ? r2 /= 2 - r2 : r2 = r2 * i2 / (2 - 2 * n2)), [t2, r2, n2, e2[3]];
      }, n.default.ColorConversion._hsbaToRGBA = function(e2) {
        var t2 = 6 * e2[0], r2 = e2[1], i2 = e2[2], n2 = [];
        if (r2 === 0)
          n2 = [i2, i2, i2, e2[3]];
        else {
          var a2, o, s, l = Math.floor(t2), u = i2 * (1 - r2), h = i2 * (1 - r2 * (t2 - l)), c = i2 * (1 - r2 * (1 + l - t2));
          s = l === 1 ? (a2 = h, o = i2, u) : l === 2 ? (a2 = u, o = i2, c) : l === 3 ? (a2 = u, o = h, i2) : l === 4 ? (a2 = c, o = u, i2) : l === 5 ? (a2 = i2, o = u, h) : (a2 = i2, o = c, u), n2 = [a2, o, s, e2[3]];
        }
        return n2;
      }, n.default.ColorConversion._hslaToHSBA = function(e2) {
        var t2, r2 = e2[0], i2 = e2[1], n2 = e2[2];
        return [r2, i2 = 2 * ((t2 = n2 < 0.5 ? (1 + i2) * n2 : n2 + i2 - n2 * i2) - n2) / t2, t2, e2[3]];
      }, n.default.ColorConversion._hslaToRGBA = function(e2) {
        var t2 = 6 * e2[0], r2 = e2[1], i2 = e2[2], n2 = [];
        if (r2 === 0)
          n2 = [i2, i2, i2, e2[3]];
        else {
          var a2, o = 2 * i2 - (a2 = i2 < 0.5 ? (1 + r2) * i2 : i2 + r2 - i2 * r2), s = function(e3, t3, r3) {
            return e3 < 0 ? e3 += 6 : 6 <= e3 && (e3 -= 6), e3 < 1 ? t3 + (r3 - t3) * e3 : e3 < 3 ? r3 : e3 < 4 ? t3 + (r3 - t3) * (4 - e3) : t3;
          };
          n2 = [s(2 + t2, o, a2), s(t2, o, a2), s(t2 - 2, o, a2), e2[3]];
        }
        return n2;
      }, n.default.ColorConversion._rgbaToHSBA = function(e2) {
        var t2, r2, i2 = e2[0], n2 = e2[1], a2 = e2[2], o = Math.max(i2, n2, a2), s = o - Math.min(i2, n2, a2);
        return s == 0 ? r2 = t2 = 0 : (r2 = s / o, i2 === o ? t2 = (n2 - a2) / s : n2 === o ? t2 = 2 + (a2 - i2) / s : a2 === o && (t2 = 4 + (i2 - n2) / s), t2 < 0 ? t2 += 6 : 6 <= t2 && (t2 -= 6)), [t2 / 6, r2, o, e2[3]];
      }, n.default.ColorConversion._rgbaToHSLA = function(e2) {
        var t2, r2, i2 = e2[0], n2 = e2[1], a2 = e2[2], o = Math.max(i2, n2, a2), s = Math.min(i2, n2, a2), l = o + s, u = o - s;
        return u == 0 ? r2 = t2 = 0 : (r2 = l < 1 ? u / l : u / (2 - l), i2 === o ? t2 = (n2 - a2) / u : n2 === o ? t2 = 2 + (a2 - i2) / u : a2 === o && (t2 = 4 + (i2 - n2) / u), t2 < 0 ? t2 += 6 : 6 <= t2 && (t2 -= 6)), [t2 / 6, r2, l / 2, e2[3]];
      };
      var a = n.default.ColorConversion;
      r.default = a;
    }, {"../core/main": 36}], 23: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, c = (i = e("../core/main")) && i.__esModule ? i : {default: i}, f = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      e("./p5.Color"), e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), c.default.prototype.alpha = function(e2) {
        return c.default._validateParameters("alpha", arguments), this.color(e2)._getAlpha();
      }, c.default.prototype.blue = function(e2) {
        return c.default._validateParameters("blue", arguments), this.color(e2)._getBlue();
      }, c.default.prototype.brightness = function(e2) {
        return c.default._validateParameters("brightness", arguments), this.color(e2)._getBrightness();
      }, c.default.prototype.color = function() {
        if (c.default._validateParameters("color", arguments), arguments[0] instanceof c.default.Color)
          return arguments[0];
        var e2 = arguments[0] instanceof Array ? arguments[0] : arguments;
        return new c.default.Color(this, e2);
      }, c.default.prototype.green = function(e2) {
        return c.default._validateParameters("green", arguments), this.color(e2)._getGreen();
      }, c.default.prototype.hue = function(e2) {
        return c.default._validateParameters("hue", arguments), this.color(e2)._getHue();
      }, c.default.prototype.lerpColor = function(e2, t2, r2) {
        c.default._validateParameters("lerpColor", arguments);
        var i2, n2, a, o2, s2, l, u = this._colorMode, h = this._colorMaxes;
        if (u === f.RGB)
          s2 = e2.levels.map(function(e3) {
            return e3 / 255;
          }), l = t2.levels.map(function(e3) {
            return e3 / 255;
          });
        else if (u === f.HSB)
          e2._getBrightness(), t2._getBrightness(), s2 = e2.hsba, l = t2.hsba;
        else {
          if (u !== f.HSL)
            throw new Error("".concat(u, "cannot be used for interpolation."));
          e2._getLightness(), t2._getLightness(), s2 = e2.hsla, l = t2.hsla;
        }
        return r2 = Math.max(Math.min(r2, 1), 0), this.lerp === void 0 && (this.lerp = function(e3, t3, r3) {
          return r3 * (t3 - e3) + e3;
        }), i2 = this.lerp(s2[0], l[0], r2), n2 = this.lerp(s2[1], l[1], r2), a = this.lerp(s2[2], l[2], r2), o2 = this.lerp(s2[3], l[3], r2), i2 *= h[u][0], n2 *= h[u][1], a *= h[u][2], o2 *= h[u][3], this.color(i2, n2, a, o2);
      }, c.default.prototype.lightness = function(e2) {
        return c.default._validateParameters("lightness", arguments), this.color(e2)._getLightness();
      }, c.default.prototype.red = function(e2) {
        return c.default._validateParameters("red", arguments), this.color(e2)._getRed();
      }, c.default.prototype.saturation = function(e2) {
        return c.default._validateParameters("saturation", arguments), this.color(e2)._getSaturation();
      };
      var n = c.default;
      r.default = n;
    }, {"../core/constants": 26, "../core/friendly_errors/fes_core": 28, "../core/friendly_errors/file_errors": 29, "../core/friendly_errors/validate_params": 31, "../core/main": 36, "./p5.Color": 24}], 24: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var c = i(e("../core/main")), f = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants")), d = i(e("./color_conversion"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      function i(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      c.default.Color = function(e2, t2) {
        if (this._storeModeAndMaxes(e2._colorMode, e2._colorMaxes), this.mode !== f.RGB && this.mode !== f.HSL && this.mode !== f.HSB)
          throw new Error("".concat(this.mode, " is an invalid colorMode."));
        return this._array = c.default.Color._parseInputs.apply(this, t2), this._calculateLevels(), this;
      }, c.default.Color.prototype.toString = function(e2) {
        var t2 = this.levels, r2 = this._array, i2 = r2[3];
        switch (e2) {
          case "#rrggbb":
            return "#".concat(t2[0] < 16 ? "0".concat(t2[0].toString(16)) : t2[0].toString(16), t2[1] < 16 ? "0".concat(t2[1].toString(16)) : t2[1].toString(16), t2[2] < 16 ? "0".concat(t2[2].toString(16)) : t2[2].toString(16));
          case "#rrggbbaa":
            return "#".concat(t2[0] < 16 ? "0".concat(t2[0].toString(16)) : t2[0].toString(16), t2[1] < 16 ? "0".concat(t2[1].toString(16)) : t2[1].toString(16), t2[2] < 16 ? "0".concat(t2[2].toString(16)) : t2[2].toString(16), t2[3] < 16 ? "0".concat(t2[2].toString(16)) : t2[3].toString(16));
          case "#rgb":
            return "#".concat(Math.round(15 * r2[0]).toString(16), Math.round(15 * r2[1]).toString(16), Math.round(15 * r2[2]).toString(16));
          case "#rgba":
            return "#".concat(Math.round(15 * r2[0]).toString(16), Math.round(15 * r2[1]).toString(16), Math.round(15 * r2[2]).toString(16), Math.round(15 * r2[3]).toString(16));
          case "rgb":
            return "rgb(".concat(t2[0], ", ", t2[1], ", ", t2[2], ")");
          case "rgb%":
            return "rgb(".concat((100 * r2[0]).toPrecision(3), "%, ", (100 * r2[1]).toPrecision(3), "%, ", (100 * r2[2]).toPrecision(3), "%)");
          case "rgba%":
            return "rgba(".concat((100 * r2[0]).toPrecision(3), "%, ", (100 * r2[1]).toPrecision(3), "%, ", (100 * r2[2]).toPrecision(3), "%, ", (100 * r2[3]).toPrecision(3), "%)");
          case "hsb":
          case "hsv":
            return this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)), "hsb(".concat(this.hsba[0] * this.maxes[f.HSB][0], ", ", this.hsba[1] * this.maxes[f.HSB][1], ", ", this.hsba[2] * this.maxes[f.HSB][2], ")");
          case "hsb%":
          case "hsv%":
            return this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)), "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");
          case "hsba":
          case "hsva":
            return this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)), "hsba(".concat(this.hsba[0] * this.maxes[f.HSB][0], ", ", this.hsba[1] * this.maxes[f.HSB][1], ", ", this.hsba[2] * this.maxes[f.HSB][2], ", ", i2, ")");
          case "hsba%":
          case "hsva%":
            return this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)), "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * i2).toPrecision(3), "%)");
          case "hsl":
            return this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)), "hsl(".concat(this.hsla[0] * this.maxes[f.HSL][0], ", ", this.hsla[1] * this.maxes[f.HSL][1], ", ", this.hsla[2] * this.maxes[f.HSL][2], ")");
          case "hsl%":
            return this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");
          case "hsla":
            return this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)), "hsla(".concat(this.hsla[0] * this.maxes[f.HSL][0], ", ", this.hsla[1] * this.maxes[f.HSL][1], ", ", this.hsla[2] * this.maxes[f.HSL][2], ", ", i2, ")");
          case "hsla%":
            return this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * i2).toPrecision(3), "%)");
          case "rgba":
          default:
            return "rgba(".concat(t2[0], ",", t2[1], ",", t2[2], ",", i2, ")");
        }
      }, c.default.Color.prototype.setRed = function(e2) {
        this._array[0] = e2 / this.maxes[f.RGB][0], this._calculateLevels();
      }, c.default.Color.prototype.setGreen = function(e2) {
        this._array[1] = e2 / this.maxes[f.RGB][1], this._calculateLevels();
      }, c.default.Color.prototype.setBlue = function(e2) {
        this._array[2] = e2 / this.maxes[f.RGB][2], this._calculateLevels();
      }, c.default.Color.prototype.setAlpha = function(e2) {
        this._array[3] = e2 / this.maxes[this.mode][3], this._calculateLevels();
      }, c.default.Color.prototype._calculateLevels = function() {
        for (var e2 = this._array, t2 = this.levels = new Array(e2.length), r2 = e2.length - 1; 0 <= r2; --r2)
          t2[r2] = Math.round(255 * e2[r2]);
      }, c.default.Color.prototype._getAlpha = function() {
        return this._array[3] * this.maxes[this.mode][3];
      }, c.default.Color.prototype._storeModeAndMaxes = function(e2, t2) {
        this.mode = e2, this.maxes = t2;
      }, c.default.Color.prototype._getMode = function() {
        return this.mode;
      }, c.default.Color.prototype._getMaxes = function() {
        return this.maxes;
      }, c.default.Color.prototype._getBlue = function() {
        return this._array[2] * this.maxes[f.RGB][2];
      }, c.default.Color.prototype._getBrightness = function() {
        return this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[f.HSB][2];
      }, c.default.Color.prototype._getGreen = function() {
        return this._array[1] * this.maxes[f.RGB][1];
      }, c.default.Color.prototype._getHue = function() {
        return this.mode === f.HSB ? (this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)), this.hsba[0] * this.maxes[f.HSB][0]) : (this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)), this.hsla[0] * this.maxes[f.HSL][0]);
      }, c.default.Color.prototype._getLightness = function() {
        return this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[f.HSL][2];
      }, c.default.Color.prototype._getRed = function() {
        return this._array[0] * this.maxes[f.RGB][0];
      }, c.default.Color.prototype._getSaturation = function() {
        return this.mode === f.HSB ? (this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)), this.hsba[1] * this.maxes[f.HSB][1]) : (this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)), this.hsla[1] * this.maxes[f.HSL][1]);
      };
      var p = {aliceblue: "#f0f8ff", antiquewhite: "#faebd7", aqua: "#00ffff", aquamarine: "#7fffd4", azure: "#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000000", blanchedalmond: "#ffebcd", blue: "#0000ff", blueviolet: "#8a2be2", brown: "#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", darkkhaki: "#bdb76b", darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: "#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: "#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: "#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: "#696969", dimgrey: "#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: "#fffaf0", forestgreen: "#228b22", fuchsia: "#ff00ff", gainsboro: "#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gray: "#808080", green: "#008000", greenyellow: "#adff2f", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", ivory: "#fffff0", khaki: "#f0e68c", lavender: "#e6e6fa", lavenderblush: "#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: "#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", lightgoldenrodyellow: "#fafad2", lightgray: "#d3d3d3", lightgreen: "#90ee90", lightgrey: "#d3d3d3", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", lightslategray: "#778899", lightslategrey: "#778899", lightsteelblue: "#b0c4de", lightyellow: "#ffffe0", lime: "#00ff00", limegreen: "#32cd32", linen: "#faf0e6", magenta: "#ff00ff", maroon: "#800000", mediumaquamarine: "#66cdaa", mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370db", mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: "#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: "#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: "#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", paleturquoise: "#afeeee", palevioletred: "#db7093", papayawhip: "#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: "#dda0dd", powderblue: "#b0e0e6", purple: "#800080", rebeccapurple: "#663399", red: "#ff0000", rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: "#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", slateblue: "#6a5acd", slategray: "#708090", slategrey: "#708090", snow: "#fffafa", springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: "#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", violet: "#ee82ee", wheat: "#f5deb3", white: "#ffffff", whitesmoke: "#f5f5f5", yellow: "#ffff00", yellowgreen: "#9acd32"}, n = /\s*/, a = /(\d{1,3})/, l = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/, u = new RegExp("".concat(l.source, "%")), m = {HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, RGB: new RegExp(["^rgb\\(", a.source, ",", a.source, ",", a.source, "\\)$"].join(n.source), "i"), RGB_PERCENT: new RegExp(["^rgb\\(", u.source, ",", u.source, ",", u.source, "\\)$"].join(n.source), "i"), RGBA: new RegExp(["^rgba\\(", a.source, ",", a.source, ",", a.source, ",", l.source, "\\)$"].join(n.source), "i"), RGBA_PERCENT: new RegExp(["^rgba\\(", u.source, ",", u.source, ",", u.source, ",", l.source, "\\)$"].join(n.source), "i"), HSL: new RegExp(["^hsl\\(", a.source, ",", u.source, ",", u.source, "\\)$"].join(n.source), "i"), HSLA: new RegExp(["^hsla\\(", a.source, ",", u.source, ",", u.source, ",", l.source, "\\)$"].join(n.source), "i"), HSB: new RegExp(["^hsb\\(", a.source, ",", u.source, ",", u.source, "\\)$"].join(n.source), "i"), HSBA: new RegExp(["^hsba\\(", a.source, ",", u.source, ",", u.source, ",", l.source, "\\)$"].join(n.source), "i")};
      c.default.Color._parseInputs = function(e2, t2, r2, i2) {
        var n2, a2 = arguments.length, o2 = this.mode, s2 = this.maxes[o2], l2 = [];
        if (3 <= a2) {
          for (l2[0] = e2 / s2[0], l2[1] = t2 / s2[1], l2[2] = r2 / s2[2], l2[3] = typeof i2 == "number" ? i2 / s2[3] : 1, n2 = l2.length - 1; 0 <= n2; --n2) {
            var u2 = l2[n2];
            u2 < 0 ? l2[n2] = 0 : 1 < u2 && (l2[n2] = 1);
          }
          return o2 === f.HSL ? d.default._hslaToRGBA(l2) : o2 === f.HSB ? d.default._hsbaToRGBA(l2) : l2;
        }
        if (a2 === 1 && typeof e2 == "string") {
          var h2 = e2.trim().toLowerCase();
          if (p[h2])
            return c.default.Color._parseInputs.call(this, p[h2]);
          if (m.HEX3.test(h2))
            return (l2 = m.HEX3.exec(h2).slice(1).map(function(e3) {
              return parseInt(e3 + e3, 16) / 255;
            }))[3] = 1, l2;
          if (m.HEX6.test(h2))
            return (l2 = m.HEX6.exec(h2).slice(1).map(function(e3) {
              return parseInt(e3, 16) / 255;
            }))[3] = 1, l2;
          if (m.HEX4.test(h2))
            return l2 = m.HEX4.exec(h2).slice(1).map(function(e3) {
              return parseInt(e3 + e3, 16) / 255;
            });
          if (m.HEX8.test(h2))
            return l2 = m.HEX8.exec(h2).slice(1).map(function(e3) {
              return parseInt(e3, 16) / 255;
            });
          if (m.RGB.test(h2))
            return (l2 = m.RGB.exec(h2).slice(1).map(function(e3) {
              return e3 / 255;
            }))[3] = 1, l2;
          if (m.RGB_PERCENT.test(h2))
            return (l2 = m.RGB_PERCENT.exec(h2).slice(1).map(function(e3) {
              return parseFloat(e3) / 100;
            }))[3] = 1, l2;
          if (m.RGBA.test(h2))
            return l2 = m.RGBA.exec(h2).slice(1).map(function(e3, t3) {
              return t3 === 3 ? parseFloat(e3) : e3 / 255;
            });
          if (m.RGBA_PERCENT.test(h2))
            return l2 = m.RGBA_PERCENT.exec(h2).slice(1).map(function(e3, t3) {
              return t3 === 3 ? parseFloat(e3) : parseFloat(e3) / 100;
            });
          if (m.HSL.test(h2) ? (l2 = m.HSL.exec(h2).slice(1).map(function(e3, t3) {
            return t3 === 0 ? parseInt(e3, 10) / 360 : parseInt(e3, 10) / 100;
          }))[3] = 1 : m.HSLA.test(h2) && (l2 = m.HSLA.exec(h2).slice(1).map(function(e3, t3) {
            return t3 === 0 ? parseInt(e3, 10) / 360 : t3 === 3 ? parseFloat(e3) : parseInt(e3, 10) / 100;
          })), (l2 = l2.map(function(e3) {
            return Math.max(Math.min(e3, 1), 0);
          })).length)
            return d.default._hslaToRGBA(l2);
          if (m.HSB.test(h2) ? (l2 = m.HSB.exec(h2).slice(1).map(function(e3, t3) {
            return t3 === 0 ? parseInt(e3, 10) / 360 : parseInt(e3, 10) / 100;
          }))[3] = 1 : m.HSBA.test(h2) && (l2 = m.HSBA.exec(h2).slice(1).map(function(e3, t3) {
            return t3 === 0 ? parseInt(e3, 10) / 360 : t3 === 3 ? parseFloat(e3) : parseInt(e3, 10) / 100;
          })), l2.length) {
            for (n2 = l2.length - 1; 0 <= n2; --n2)
              l2[n2] = Math.max(Math.min(l2[n2], 1), 0);
            return d.default._hsbaToRGBA(l2);
          }
          l2 = [1, 1, 1, 1];
        } else {
          if (a2 !== 1 && a2 !== 2 || typeof e2 != "number")
            throw new Error("".concat(arguments, "is not a valid color representation."));
          l2[0] = e2 / s2[2], l2[1] = e2 / s2[2], l2[2] = e2 / s2[2], l2[3] = typeof t2 == "number" ? t2 / s2[3] : 1, l2 = l2.map(function(e3) {
            return Math.max(Math.min(e3, 1), 0);
          });
        }
        return l2;
      };
      var h = c.default.Color;
      r.default = h;
    }, {"../core/constants": 26, "../core/main": 36, "./color_conversion": 22}], 25: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, s = (i = e("../core/main")) && i.__esModule ? i : {default: i}, l = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = u();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function u() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return u = function() {
          return e2;
        }, e2;
      }
      e("./p5.Color"), s.default.prototype.background = function() {
        var e2;
        return (e2 = this._renderer).background.apply(e2, arguments), this;
      }, s.default.prototype.clear = function() {
        return this._renderer.clear(), this;
      }, s.default.prototype.colorMode = function(e2, t2, r2, i2, n2) {
        if (s.default._validateParameters("colorMode", arguments), e2 === l.RGB || e2 === l.HSB || e2 === l.HSL) {
          this._colorMode = e2;
          var a = this._colorMaxes[e2];
          arguments.length === 2 ? (a[0] = t2, a[1] = t2, a[2] = t2, a[3] = t2) : arguments.length === 4 ? (a[0] = t2, a[1] = r2, a[2] = i2) : arguments.length === 5 && (a[0] = t2, a[1] = r2, a[2] = i2, a[3] = n2);
        }
        return this;
      }, s.default.prototype.fill = function() {
        var e2;
        return this._renderer._setProperty("_fillSet", true), this._renderer._setProperty("_doFill", true), (e2 = this._renderer).fill.apply(e2, arguments), this;
      }, s.default.prototype.noFill = function() {
        return this._renderer._setProperty("_doFill", false), this;
      }, s.default.prototype.noStroke = function() {
        return this._renderer._setProperty("_doStroke", false), this;
      }, s.default.prototype.stroke = function() {
        var e2;
        return this._renderer._setProperty("_strokeSet", true), this._renderer._setProperty("_doStroke", true), (e2 = this._renderer).stroke.apply(e2, arguments), this;
      }, s.default.prototype.erase = function() {
        var e2 = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : 255, t2 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 255;
        return this._renderer.erase(e2, t2), this;
      }, s.default.prototype.noErase = function() {
        return this._renderer.noErase(), this;
      };
      var n = s.default;
      r.default = n;
    }, {"../core/constants": 26, "../core/main": 36, "./p5.Color": 24}], 26: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.FILL = r.STROKE = r.CURVE = r.BEZIER = r.QUADRATIC = r.LINEAR = r._CTX_MIDDLE = r._DEFAULT_LEADMULT = r._DEFAULT_TEXT_FILL = r.BOLDITALIC = r.BOLD = r.ITALIC = r.NORMAL = r.BLUR = r.ERODE = r.DILATE = r.POSTERIZE = r.INVERT = r.OPAQUE = r.GRAY = r.THRESHOLD = r.BURN = r.DODGE = r.SOFT_LIGHT = r.HARD_LIGHT = r.OVERLAY = r.REPLACE = r.SCREEN = r.MULTIPLY = r.EXCLUSION = r.SUBTRACT = r.DIFFERENCE = r.LIGHTEST = r.DARKEST = r.ADD = r.REMOVE = r.BLEND = r.UP_ARROW = r.TAB = r.SHIFT = r.RIGHT_ARROW = r.RETURN = r.OPTION = r.LEFT_ARROW = r.ESCAPE = r.ENTER = r.DOWN_ARROW = r.DELETE = r.CONTROL = r.BACKSPACE = r.ALT = r.AUTO = r.HSL = r.HSB = r.RGB = r.MITER = r.BEVEL = r.ROUND = r.SQUARE = r.PROJECT = r.PIE = r.CHORD = r.OPEN = r.CLOSE = r.TESS = r.QUAD_STRIP = r.QUADS = r.TRIANGLE_STRIP = r.TRIANGLE_FAN = r.TRIANGLES = r.LINE_LOOP = r.LINE_STRIP = r.LINES = r.POINTS = r.BASELINE = r.BOTTOM = r.TOP = r.CENTER = r.LEFT = r.RIGHT = r.RADIUS = r.CORNERS = r.CORNER = r.RAD_TO_DEG = r.DEG_TO_RAD = r.RADIANS = r.DEGREES = r.TWO_PI = r.TAU = r.QUARTER_PI = r.PI = r.HALF_PI = r.WAIT = r.TEXT = r.MOVE = r.HAND = r.CROSS = r.ARROW = r.WEBGL = r.P2D = void 0, r.FALLBACK = r.LABEL = r.AXES = r.GRID = r._DEFAULT_FILL = r._DEFAULT_STROKE = r.PORTRAIT = r.LANDSCAPE = r.MIRROR = r.CLAMP = r.REPEAT = r.NEAREST = r.IMAGE = r.IMMEDIATE = r.TEXTURE = void 0;
      var i = Math.PI;
      r.P2D = "p2d";
      r.WEBGL = "webgl";
      r.ARROW = "default";
      r.CROSS = "crosshair";
      r.HAND = "pointer";
      r.MOVE = "move";
      r.TEXT = "text";
      r.WAIT = "wait";
      var n = i / 2;
      r.HALF_PI = n;
      var a = i;
      r.PI = a;
      var o = i / 4;
      r.QUARTER_PI = o;
      var s = 2 * i;
      r.TAU = s;
      var l = 2 * i;
      r.TWO_PI = l;
      r.DEGREES = "degrees";
      r.RADIANS = "radians";
      var u = i / 180;
      r.DEG_TO_RAD = u;
      var h = 180 / i;
      r.RAD_TO_DEG = h;
      r.CORNER = "corner";
      r.CORNERS = "corners";
      r.RADIUS = "radius";
      r.RIGHT = "right";
      r.LEFT = "left";
      r.CENTER = "center";
      r.TOP = "top";
      r.BOTTOM = "bottom";
      r.BASELINE = "alphabetic";
      r.POINTS = 0;
      r.LINES = 1;
      r.LINE_STRIP = 3;
      r.LINE_LOOP = 2;
      r.TRIANGLES = 4;
      r.TRIANGLE_FAN = 6;
      r.TRIANGLE_STRIP = 5;
      r.QUADS = "quads";
      r.QUAD_STRIP = "quad_strip";
      r.TESS = "tess";
      r.CLOSE = "close";
      r.OPEN = "open";
      r.CHORD = "chord";
      r.PIE = "pie";
      r.PROJECT = "square";
      r.SQUARE = "butt";
      r.ROUND = "round";
      r.BEVEL = "bevel";
      r.MITER = "miter";
      r.RGB = "rgb";
      r.HSB = "hsb";
      r.HSL = "hsl";
      r.AUTO = "auto";
      r.ALT = 18;
      r.BACKSPACE = 8;
      r.CONTROL = 17;
      r.DELETE = 46;
      r.DOWN_ARROW = 40;
      r.ENTER = 13;
      r.ESCAPE = 27;
      r.LEFT_ARROW = 37;
      r.OPTION = 18;
      r.RETURN = 13;
      r.RIGHT_ARROW = 39;
      r.SHIFT = 16;
      r.TAB = 9;
      r.UP_ARROW = 38;
      r.BLEND = "source-over";
      r.REMOVE = "destination-out";
      r.ADD = "lighter";
      r.DARKEST = "darken";
      r.LIGHTEST = "lighten";
      r.DIFFERENCE = "difference";
      r.SUBTRACT = "subtract";
      r.EXCLUSION = "exclusion";
      r.MULTIPLY = "multiply";
      r.SCREEN = "screen";
      r.REPLACE = "copy";
      r.OVERLAY = "overlay";
      r.HARD_LIGHT = "hard-light";
      r.SOFT_LIGHT = "soft-light";
      r.DODGE = "color-dodge";
      r.BURN = "color-burn";
      r.THRESHOLD = "threshold";
      r.GRAY = "gray";
      r.OPAQUE = "opaque";
      r.INVERT = "invert";
      r.POSTERIZE = "posterize";
      r.DILATE = "dilate";
      r.ERODE = "erode";
      r.BLUR = "blur";
      r.NORMAL = "normal";
      r.ITALIC = "italic";
      r.BOLD = "bold";
      r.BOLDITALIC = "bold italic";
      r._DEFAULT_TEXT_FILL = "#000000";
      r._DEFAULT_LEADMULT = 1.25;
      r._CTX_MIDDLE = "middle";
      r.LINEAR = "linear";
      r.QUADRATIC = "quadratic";
      r.BEZIER = "bezier";
      r.CURVE = "curve";
      r.STROKE = "stroke";
      r.FILL = "fill";
      r.TEXTURE = "texture";
      r.IMMEDIATE = "immediate";
      r.IMAGE = "image";
      r.NEAREST = "nearest";
      r.REPEAT = "repeat";
      r.CLAMP = "clamp";
      r.MIRROR = "mirror";
      r.LANDSCAPE = "landscape";
      r.PORTRAIT = "portrait";
      r._DEFAULT_STROKE = "#000000";
      r._DEFAULT_FILL = "#FFFFFF";
      r.GRID = "grid";
      r.AXES = "axes";
      r.LABEL = "label";
      r.FALLBACK = "fallback";
    }, {}], 27: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("./main")) && i.__esModule ? i : {default: i}, a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("./constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      var l = [a.ARROW, a.CROSS, a.HAND, a.MOVE, a.TEXT, a.WAIT];
      n.default.prototype._frameRate = 0, n.default.prototype._lastFrameTime = window.performance.now(), n.default.prototype._targetFrameRate = 60;
      var u = window.print;
      function h() {
        return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
      }
      function c() {
        return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
      }
      n.default.prototype.print = function() {
        var e2;
        arguments.length ? (e2 = console).log.apply(e2, arguments) : u();
      }, n.default.prototype.frameCount = 0, n.default.prototype.deltaTime = 0, n.default.prototype.focused = document.hasFocus(), n.default.prototype.cursor = function(e2, t2, r2) {
        var i2 = "auto", n2 = this._curElement.elt;
        if (l.includes(e2))
          i2 = e2;
        else if (typeof e2 == "string") {
          var a2 = "";
          t2 && r2 && typeof t2 == "number" && typeof r2 == "number" && (a2 = "".concat(t2, " ").concat(r2)), i2 = e2.substring(0, 7) === "http://" || e2.substring(0, 8) === "https://" ? "url(".concat(e2, ") ").concat(a2, ", auto") : /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e2) ? "url(".concat(e2, ") ").concat(a2, ", auto") : e2;
        }
        n2.style.cursor = i2;
      }, n.default.prototype.frameRate = function(e2) {
        return n.default._validateParameters("frameRate", arguments), typeof e2 != "number" || e2 < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e2), e2 === 0 && this._setProperty("_frameRate", e2), this);
      }, n.default.prototype.getFrameRate = function() {
        return this.frameRate();
      }, n.default.prototype.setFrameRate = function(e2) {
        return this.frameRate(e2);
      }, n.default.prototype.noCursor = function() {
        this._curElement.elt.style.cursor = "none";
      }, n.default.prototype.displayWidth = screen.width, n.default.prototype.displayHeight = screen.height, n.default.prototype.windowWidth = h(), n.default.prototype.windowHeight = c(), n.default.prototype._onresize = function(e2) {
        this._setProperty("windowWidth", h()), this._setProperty("windowHeight", c());
        var t2, r2 = this._isGlobal ? window : this;
        typeof r2.windowResized == "function" && ((t2 = r2.windowResized(e2)) === void 0 || t2 || e2.preventDefault());
      }, n.default.prototype.width = 0, n.default.prototype.height = 0, n.default.prototype.fullscreen = function(e2) {
        if (n.default._validateParameters("fullscreen", arguments), e2 === void 0)
          return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
        e2 ? function(e3) {
          if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled))
            throw new Error("Fullscreen not enabled in this browser.");
          e3.requestFullscreen ? e3.requestFullscreen() : e3.mozRequestFullScreen ? e3.mozRequestFullScreen() : e3.webkitRequestFullscreen ? e3.webkitRequestFullscreen() : e3.msRequestFullscreen && e3.msRequestFullscreen();
        }(document.documentElement) : document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
      }, n.default.prototype.pixelDensity = function(e2) {
        var t2;
        return n.default._validateParameters("pixelDensity", arguments), typeof e2 == "number" ? (e2 !== this._pixelDensity && (this._pixelDensity = e2), (t2 = this).resizeCanvas(this.width, this.height, true)) : t2 = this._pixelDensity, t2;
      }, n.default.prototype.displayDensity = function() {
        return window.devicePixelRatio;
      }, n.default.prototype.getURL = function() {
        return location.href;
      }, n.default.prototype.getURLPath = function() {
        return location.pathname.split("/").filter(function(e2) {
          return e2 !== "";
        });
      }, n.default.prototype.getURLParams = function() {
        for (var e2, t2 = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, r2 = {}; (e2 = t2.exec(location.search)) != null; )
          e2.index === t2.lastIndex && t2.lastIndex++, r2[e2[1]] = e2[2];
        return r2;
      };
      var f = n.default;
      r.default = f;
    }, {"./constants": 26, "./main": 36}], 28: [function(r, e, t) {
      Object.defineProperty(t, "__esModule", {value: true}), t.default = void 0;
      var i, n = (i = r("../main")) && i.__esModule ? i : {default: i};
      r("../internationalization");
      var a = null, o = null;
      n.default._friendlyError = n.default._checkForUserDefinedFunctions = n.default._fesErrorMonitor = function() {
      }, a = null;
      var s = "https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup";
      o = function() {
        function e2(r2) {
          return Object.getOwnPropertyNames(r2).filter(function(e3) {
            return e3[0] !== "_" && (!(e3 in t2) && (t2[e3] = true));
          }).map(function(e3) {
            var t3;
            return t3 = typeof r2[e3] == "function" ? "function" : e3 === e3.toUpperCase() ? "constant" : "variable", {name: e3, type: t3};
          });
        }
        var t2 = {};
        (a = [].concat(e2(n.default.prototype), e2(r("../constants")))).sort(function(e3, t3) {
          return t3.name.length - e3.name.length;
        });
      };
      function l(r2, i2) {
        i2 = i2 || console.log.bind(console), a || o(), a.some(function(e2) {
          if (r2.message && r2.message.match("\\W?".concat(e2.name, "\\W")) !== null) {
            var t2 = e2.type === "function" ? "".concat(e2.name, "()") : e2.name;
            return i2("Did you just try to use p5.js's ".concat(t2, " ").concat(e2.type, "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(s)), true;
          }
        });
      }
      n.default.prototype._helpForMisusedAtTopLevelCode = l, document.readyState !== "complete" && (window.addEventListener("error", l, false), window.addEventListener("load", function() {
        window.removeEventListener("error", l, false);
      }));
      var u = n.default;
      t.default = u;
    }, {"../constants": 26, "../internationalization": 34, "../main": 36, "./browser_errors": void 0}], 29: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../main")) && i.__esModule ? i : {default: i};
      e("../internationalization");
      n.default._friendlyFileLoadError = function() {
      };
      var a = n.default;
      r.default = a;
    }, {"../internationalization": 34, "../main": 36}], 30: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../main")) && i.__esModule ? i : {default: i};
      function a() {
        var t2 = /(^|@)\S+:\d+/, r2 = /^\s*at .*(\S+:\d+|\(native\))/m, i2 = /^(eval@)?(\[native code])?$/;
        return {parse: function(e2) {
          return e2.stacktrace !== void 0 || e2["opera#sourceloc"] !== void 0 ? this.parseOpera(e2) : e2.stack && e2.stack.match(r2) ? this.parseV8OrIE(e2) : e2.stack ? this.parseFFOrSafari(e2) : void 0;
        }, extractLocation: function(e2) {
          if (e2.indexOf(":") === -1)
            return [e2];
          var t3 = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e2.replace(/[()]/g, ""));
          return [t3[1], t3[2] || void 0, t3[3] || void 0];
        }, parseV8OrIE: function(e2) {
          return e2.stack.split("\n").filter(function(e3) {
            return !!e3.match(r2);
          }, this).map(function(e3) {
            -1 < e3.indexOf("(eval ") && (e3 = e3.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, ""));
            var t3 = e3.replace(/^\s+/, "").replace(/\(eval code/g, "("), r3 = t3.match(/ (\((.+):(\d+):(\d+)\)$)/), i3 = (t3 = r3 ? t3.replace(r3[0], "") : t3).split(/\s+/).slice(1), n2 = this.extractLocation(r3 ? r3[1] : i3.pop());
            return {functionName: i3.join(" ") || void 0, fileName: -1 < ["eval", "<anonymous>"].indexOf(n2[0]) ? void 0 : n2[0], lineNumber: n2[1], columnNumber: n2[2], source: e3};
          }, this);
        }, parseFFOrSafari: function(e2) {
          return e2.stack.split("\n").filter(function(e3) {
            return !e3.match(i2);
          }, this).map(function(e3) {
            if (-1 < e3.indexOf(" > eval") && (e3 = e3.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1")), e3.indexOf("@") === -1 && e3.indexOf(":") === -1)
              return {functionName: e3};
            var t3 = /((.*".+"[^@]*)?[^@]*)(?:@)/, r3 = e3.match(t3), i3 = r3 && r3[1] ? r3[1] : void 0, n2 = this.extractLocation(e3.replace(t3, ""));
            return {functionName: i3, fileName: n2[0], lineNumber: n2[1], columnNumber: n2[2], source: e3};
          }, this);
        }, parseOpera: function(e2) {
          return !e2.stacktrace || -1 < e2.message.indexOf("\n") && e2.message.split("\n").length > e2.stacktrace.split("\n").length ? this.parseOpera9(e2) : e2.stack ? this.parseOpera11(e2) : this.parseOpera10(e2);
        }, parseOpera9: function(e2) {
          for (var t3 = /Line (\d+).*script (?:in )?(\S+)/i, r3 = e2.message.split("\n"), i3 = [], n2 = 2, a2 = r3.length; n2 < a2; n2 += 2) {
            var o2 = t3.exec(r3[n2]);
            o2 && i3.push({fileName: o2[2], lineNumber: o2[1], source: r3[n2]});
          }
          return i3;
        }, parseOpera10: function(e2) {
          for (var t3 = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, r3 = e2.stacktrace.split("\n"), i3 = [], n2 = 0, a2 = r3.length; n2 < a2; n2 += 2) {
            var o2 = t3.exec(r3[n2]);
            o2 && i3.push({functionName: o2[3] || void 0, fileName: o2[2], lineNumber: o2[1], source: r3[n2]});
          }
          return i3;
        }, parseOpera11: function(e2) {
          return e2.stack.split("\n").filter(function(e3) {
            return !!e3.match(t2) && !e3.match(/^Error created at/);
          }, this).map(function(e3) {
            var t3, r3 = e3.split("@"), i3 = this.extractLocation(r3.pop()), n2 = r3.shift() || "", a2 = n2.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0;
            return n2.match(/\(([^)]*)\)/) && (t3 = n2.replace(/^[^(]+\(([^)]*)\)$/, "$1")), {functionName: a2, args: t3 === void 0 || t3 === "[arguments not available]" ? void 0 : t3.split(","), fileName: i3[0], lineNumber: i3[1], columnNumber: i3[2], source: e3};
          }, this);
        }};
      }
      n.default._getErrorStackParser = function() {
        return new a();
      };
      var o = n.default;
      r.default = o;
    }, {"../main": 36}], 31: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../main")) && i.__esModule ? i : {default: i};
      (function(e2) {
        if (e2 && e2.__esModule)
          return;
        if (e2 === null || s(e2) !== "object" && typeof e2 != "function")
          return;
        var t2 = o();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
      })(e("../constants")), e("../internationalization");
      function o() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return o = function() {
          return e2;
        }, e2;
      }
      function s(e2) {
        return (s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      n.default._validateParameters = n.default._clearValidateParamsCache = function() {
      };
      var a = n.default;
      r.default = a;
    }, {"../../../docs/parameterData.json": void 0, "../constants": 26, "../internationalization": 34, "../main": 36}], 32: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n, a2) : r2[n] = e2[n];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("./constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      var i = {modeAdjust: function(e2, t2, r2, i2, n) {
        return n === a.CORNER ? {x: e2, y: t2, w: r2, h: i2} : n === a.CORNERS ? {x: e2, y: t2, w: r2 - e2, h: i2 - t2} : n === a.RADIUS ? {x: e2 - r2, y: t2 - i2, w: 2 * r2, h: 2 * i2} : n === a.CENTER ? {x: e2 - 0.5 * r2, y: t2 - 0.5 * i2, w: r2, h: i2} : void 0;
      }};
      r.default = i;
    }, {"./constants": 26}], 33: [function(e, t, r) {
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      e("./internationalization");
      var a = Promise.resolve();
      Promise.all([new Promise(function(e2, t2) {
        document.readyState === "complete" ? e2() : window.addEventListener("load", e2, false);
      }), a]).then(function() {
        window._setupDone === void 0 ? window.mocha || (window.setup && typeof window.setup == "function" || window.draw && typeof window.draw == "function") && !n.default.instance && new n.default() : console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import");
      });
    }, {"../core/main": 36, "./internationalization": 34}], 34: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.initialize = r.translator = void 0;
      var a, o, i = s(e("i18next")), n = s(e("i18next-browser-languagedetector"));
      function s(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      function l(e2, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var i2 = t2[r2];
          i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(e2, i2.key, i2);
        }
      }
      var u = function() {
        function r2(e3, t3) {
          !function(e4, t4) {
            if (!(e4 instanceof t4))
              throw new TypeError("Cannot call a class as a function");
          }(this, r2), this.init(e3, t3);
        }
        var e2, t2;
        return e2 = r2, (t2 = [{key: "fetchWithTimeout", value: function(e3, t3, r3) {
          var i2 = 2 < arguments.length && r3 !== void 0 ? r3 : 2e3;
          return Promise.race([fetch(e3, t3), new Promise(function(e4, t4) {
            return setTimeout(function() {
              return t4(new Error("timeout"));
            }, i2);
          })]);
        }}, {key: "init", value: function(e3, t3) {
          var r3 = 1 < arguments.length && t3 !== void 0 ? t3 : {};
          this.services = e3, this.options = r3;
        }}, {key: "read", value: function(e3, t3, r3) {
          var i2 = this.options.loadPath;
          if (e3 === this.options.fallback)
            r3(null, a[e3][t3]);
          else if (o.includes(e3)) {
            var n2 = this.services.interpolator.interpolate(i2, {lng: e3, ns: t3});
            this.loadUrl(n2, r3);
          } else
            r3("Not found", false);
        }}, {key: "loadUrl", value: function(t3, r3) {
          this.fetchWithTimeout(t3).then(function(e3) {
            if (!e3.ok)
              throw new Error("failed loading ".concat(t3));
            return e3.json();
          }, function() {
            throw new Error("failed loading ".concat(t3));
          }).then(function(e3) {
            return r3(null, e3);
          }).catch(r3);
        }}]) && l(e2.prototype, t2), r2;
      }();
      u.type = "backend";
      var h = function(e2, t2) {
        console.debug("p5.js translator called before translations were loaded"), i.default.t(e2, t2);
      };
      r.translator = h;
      r.initialize = function() {
        return i.default.use(n.default).use(u).init({fallbackLng: "en", nestingPrefix: "$tr(", nestingSuffix: ")", defaultNS: "translation", returnEmptyString: false, interpolation: {escapeValue: false}, detection: {checkWhitelist: false, order: ["querystring", "navigator", "htmlTag", "path", "subdomain"], caches: []}, backend: {fallback: "en", loadPath: "https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json"}, partialBundledLanguages: true, resources: a}).then(function(e2) {
          r.translator = h = e2;
        }, function(e2) {
          return console.debug("Translations failed to load (".concat(e2, ")"));
        });
      };
    }, {"../../translations": void 0, "../../translations/dev": void 0, i18next: 3, "i18next-browser-languagedetector": 3}], 35: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("./main")) && i.__esModule ? i : {default: i};
      n.default.prototype.pushStyle = function() {
        throw new Error("pushStyle() not used, see push()");
      }, n.default.prototype.popStyle = function() {
        throw new Error("popStyle() not used, see pop()");
      }, n.default.prototype.popMatrix = function() {
        throw new Error("popMatrix() not used, see pop()");
      }, n.default.prototype.pushMatrix = function() {
        throw new Error("pushMatrix() not used, see push()");
      };
      var a = n.default;
      r.default = a;
    }, {"./main": 36}], 36: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0, e("./shim");
      var i = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("./constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      function n(e2, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var i2 = t2[r2];
          i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(e2, i2.key, i2);
        }
      }
      var a = function() {
        function _(e3, t3, r2) {
          var f = this;
          !function(e4, t4) {
            if (!(e4 instanceof t4))
              throw new TypeError("Cannot call a class as a function");
          }(this, _), this._accessibleOutputs = {text: false, grid: false, textLabel: false, gridLabel: false}, this._setupDone = false, this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._userNode = t3, this._curElement = null, this._elements = [], this._glAttributes = null, this._requestAnimId = 0, this._preloadCount = 0, this._isGlobal = false, this._loop = true, this._initializeInstanceVariables(), this._defaultCanvasSize = {width: 100, height: 100}, this._events = {mousemove: null, mousedown: null, mouseup: null, dragend: null, dragover: null, click: null, dblclick: null, mouseover: null, mouseout: null, keydown: null, keyup: null, keypress: null, touchstart: null, touchmove: null, touchend: null, resize: null, blur: null}, this._millisStart = -1, this._lcg_random_state = null, this._gaussian_previous = false, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};
          var i2 = Object.getOwnPropertyNames(_.prototype._registeredMethods), n2 = true, a2 = false, o2 = void 0;
          try {
            for (var s2, l2 = i2[Symbol.iterator](); !(n2 = (s2 = l2.next()).done); n2 = true) {
              var u2 = s2.value;
              this._registeredMethods[u2] = _.prototype._registeredMethods[u2].slice();
            }
          } catch (e4) {
            a2 = true, o2 = e4;
          } finally {
            try {
              n2 || l2.return == null || l2.return();
            } finally {
              if (a2)
                throw o2;
            }
          }
          window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), this._start = function() {
            f._userNode && typeof f._userNode == "string" && (f._userNode = document.getElementById(f._userNode));
            var e4 = f._isGlobal ? window : f;
            if (e4.preload) {
              var t4 = document.getElementById(f._loadingScreenId);
              if (!t4)
                (t4 = document.createElement("div")).innerHTML = "Loading...", t4.style.position = "absolute", t4.id = f._loadingScreenId, (f._userNode || document.body).appendChild(t4);
              var r3 = f._preloadMethods;
              for (var i3 in r3) {
                r3[i3] = r3[i3] || _;
                var n3 = r3[i3];
                n3 !== _.prototype && n3 !== _ || (f._isGlobal && (window[i3] = f._wrapPreload(f, i3)), n3 = f), f._registeredPreloadMethods[i3] = n3[i3], n3[i3] = f._wrapPreload(n3, i3);
              }
              e4.preload(), f._runIfPreloadsAreDone();
            } else
              f._setup(), f._draw();
          }, this._runIfPreloadsAreDone = function() {
            var e4 = this._isGlobal ? window : this;
            if (e4._preloadCount === 0) {
              var t4 = document.getElementById(e4._loadingScreenId);
              t4 && t4.parentNode.removeChild(t4), this._setupDone || (this._lastFrameTime = window.performance.now(), e4._setup(), e4._draw());
            }
          }, this._decrementPreload = function() {
            var e4 = this._isGlobal ? window : this;
            typeof e4.preload == "function" && (e4._setProperty("_preloadCount", e4._preloadCount - 1), e4._runIfPreloadsAreDone());
          }, this._wrapPreload = function(i3, n3) {
            var a3 = this;
            return function() {
              a3._incrementPreload();
              for (var e4 = arguments.length, t4 = new Array(e4), r3 = 0; r3 < e4; r3++)
                t4[r3] = arguments[r3];
              return a3._registeredPreloadMethods[n3].apply(i3, t4);
            };
          }, this._incrementPreload = function() {
            var e4 = this._isGlobal ? window : this;
            e4._setProperty("_preloadCount", e4._preloadCount + 1);
          }, this._setup = function() {
            f.createCanvas(f._defaultCanvasSize.width, f._defaultCanvasSize.height, "p2d");
            var e4 = f._isGlobal ? window : f;
            if (typeof e4.preload == "function")
              for (var t4 in f._preloadMethods)
                e4[t4] = f._preloadMethods[t4][t4], e4[t4] && f && (e4[t4] = e4[t4].bind(f));
            f._millisStart = window.performance.now(), typeof e4.setup == "function" && e4.setup();
            var r3 = document.getElementsByTagName("canvas"), i3 = true, n3 = false, a3 = void 0;
            try {
              for (var o3, s3 = r3[Symbol.iterator](); !(i3 = (o3 = s3.next()).done); i3 = true) {
                var l3 = o3.value;
                l3.dataset.hidden === "true" && (l3.style.visibility = "", delete l3.dataset.hidden);
              }
            } catch (e5) {
              n3 = true, a3 = e5;
            } finally {
              try {
                i3 || s3.return == null || s3.return();
              } finally {
                if (n3)
                  throw a3;
              }
            }
            f._lastFrameTime = window.performance.now(), f._setupDone = true, (f._accessibleOutputs.grid || f._accessibleOutputs.text) && f._updateAccsOutput();
          }, this._draw = function() {
            var e4 = window.performance.now(), t4 = e4 - f._lastFrameTime, r3 = 1e3 / f._targetFrameRate;
            (!f._loop || r3 - 5 <= t4) && (f.redraw(), f._frameRate = 1e3 / (e4 - f._lastFrameTime), f.deltaTime = e4 - f._lastFrameTime, f._setProperty("deltaTime", f.deltaTime), f._lastFrameTime = e4, f._updateMouseCoords !== void 0 && (f._updateMouseCoords(), f._setProperty("movedX", 0), f._setProperty("movedY", 0))), f._loop && (f._requestAnimId = window.requestAnimationFrame(f._draw));
          }, this._setProperty = function(e4, t4) {
            f[e4] = t4, f._isGlobal && (window[e4] = t4);
          }, this.remove = function() {
            var e4 = document.getElementById(f._loadingScreenId);
            if (e4 && (e4.parentNode.removeChild(e4), f._incrementPreload()), f._curElement) {
              for (var t4 in f._loop = false, f._requestAnimId && window.cancelAnimationFrame(f._requestAnimId), f._events)
                window.removeEventListener(t4, f._events[t4]);
              var r3 = true, i3 = false, n3 = void 0;
              try {
                for (var a3, o3 = f._elements[Symbol.iterator](); !(r3 = (a3 = o3.next()).done); r3 = true) {
                  var s3 = a3.value;
                  for (var l3 in s3.elt && s3.elt.parentNode && s3.elt.parentNode.removeChild(s3.elt), s3._events)
                    s3.elt.removeEventListener(l3, s3._events[l3]);
                }
              } catch (e5) {
                i3 = true, n3 = e5;
              } finally {
                try {
                  r3 || o3.return == null || o3.return();
                } finally {
                  if (i3)
                    throw n3;
                }
              }
              var u3 = f;
              f._registeredMethods.remove.forEach(function(e5) {
                e5 !== void 0 && e5.call(u3);
              });
            }
            if (f._isGlobal) {
              for (var h2 in _.prototype)
                try {
                  delete window[h2];
                } catch (e5) {
                  window[h2] = void 0;
                }
              for (var c2 in f)
                if (f.hasOwnProperty(c2))
                  try {
                    delete window[c2];
                  } catch (e5) {
                    window[c2] = void 0;
                  }
              _.instance = null;
            }
          }, this._registeredMethods.init.forEach(function(e4) {
            e4 !== void 0 && e4.call(this);
          }, this), this._setupPromisePreloads();
          var h = this._createFriendlyGlobalFunctionBinder();
          if (e3)
            e3(this), _._checkForUserDefinedFunctions(this);
          else {
            for (var c in this._isGlobal = true, _.instance = this, _.prototype)
              if (typeof _.prototype[c] == "function") {
                var d = c.substring(2);
                this._events.hasOwnProperty(d) || (Math.hasOwnProperty(c) && Math[c] === _.prototype[c] ? h(c, _.prototype[c]) : h(c, _.prototype[c].bind(this)));
              } else
                h(c, _.prototype[c]);
            for (var p in this)
              this.hasOwnProperty(p) && h(p, this[p]);
          }
          for (var m in this._events) {
            var v = this["_on".concat(m)];
            if (v) {
              var y = v.bind(this);
              window.addEventListener(m, y, {passive: false}), this._events[m] = y;
            }
          }
          function g() {
            f._setProperty("focused", true);
          }
          function b() {
            f._setProperty("focused", false);
          }
          window.addEventListener("focus", g), window.addEventListener("blur", b), this.registerMethod("remove", function() {
            window.removeEventListener("focus", g), window.removeEventListener("blur", b);
          }), document.readyState === "complete" ? this._start() : window.addEventListener("load", this._start.bind(this), false);
        }
        var e2, t2;
        return e2 = _, (t2 = [{key: "_initializeInstanceVariables", value: function() {
          this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = i.RGB, this._colorMaxes = {rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1]}, this._downKeys = {};
        }}, {key: "registerPreloadMethod", value: function(e3, t3) {
          _.prototype._preloadMethods.hasOwnProperty(e3) || (_.prototype._preloadMethods[e3] = t3);
        }}, {key: "registerMethod", value: function(e3, t3) {
          var r2 = this || _.prototype;
          r2._registeredMethods.hasOwnProperty(e3) || (r2._registeredMethods[e3] = []), r2._registeredMethods[e3].push(t3);
        }}, {key: "_createFriendlyGlobalFunctionBinder", value: function(e3) {
          var t3 = 0 < arguments.length && e3 !== void 0 ? e3 : {}, r2 = t3.globalObject || window;
          t3.log || console.log.bind(console);
          return function(e4, t4) {
            r2[e4] = t4;
          };
        }}]) && n(e2.prototype, t2), _;
      }();
      for (var l in a.instance = null, a.disableFriendlyErrors = false, i)
        a.prototype[l] = i[l];
      a.prototype._preloadMethods = {loadJSON: a.prototype, loadImage: a.prototype, loadStrings: a.prototype, loadXML: a.prototype, loadBytes: a.prototype, loadTable: a.prototype, loadFont: a.prototype, loadModel: a.prototype, loadShader: a.prototype}, a.prototype._registeredMethods = {init: [], pre: [], post: [], remove: []}, a.prototype._registeredPreloadMethods = {};
      var u = a;
      r.default = u;
    }, {"./constants": 26, "./shim": 47}], 37: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("./main")) && i.__esModule ? i : {default: i};
      n.default.Element = function(e2, t2) {
        this.elt = e2, this._pInst = this._pixelsState = t2, this._events = {}, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight;
      }, n.default.Element.prototype.parent = function(e2) {
        return e2 === void 0 ? this.elt.parentNode : (typeof e2 == "string" ? (e2[0] === "#" && (e2 = e2.substring(1)), e2 = document.getElementById(e2)) : e2 instanceof n.default.Element && (e2 = e2.elt), e2.appendChild(this.elt), this);
      }, n.default.Element.prototype.id = function(e2) {
        return e2 === void 0 ? this.elt.id : (this.elt.id = e2, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this);
      }, n.default.Element.prototype.class = function(e2) {
        return e2 === void 0 ? this.elt.className : (this.elt.className = e2, this);
      }, n.default.Element.prototype.mousePressed = function(t2) {
        return n.default.Element._adjustListener("mousedown", function(e2) {
          return this._pInst._setProperty("mouseIsPressed", true), this._pInst._setMouseButton(e2), t2.call(this);
        }, this), this;
      }, n.default.Element.prototype.doubleClicked = function(e2) {
        return n.default.Element._adjustListener("dblclick", e2, this), this;
      }, n.default.Element.prototype.mouseWheel = function(e2) {
        return n.default.Element._adjustListener("wheel", e2, this), this;
      }, n.default.Element.prototype.mouseReleased = function(e2) {
        return n.default.Element._adjustListener("mouseup", e2, this), this;
      }, n.default.Element.prototype.mouseClicked = function(e2) {
        return n.default.Element._adjustListener("click", e2, this), this;
      }, n.default.Element.prototype.mouseMoved = function(e2) {
        return n.default.Element._adjustListener("mousemove", e2, this), this;
      }, n.default.Element.prototype.mouseOver = function(e2) {
        return n.default.Element._adjustListener("mouseover", e2, this), this;
      }, n.default.Element.prototype.mouseOut = function(e2) {
        return n.default.Element._adjustListener("mouseout", e2, this), this;
      }, n.default.Element.prototype.touchStarted = function(e2) {
        return n.default.Element._adjustListener("touchstart", e2, this), this;
      }, n.default.Element.prototype.touchMoved = function(e2) {
        return n.default.Element._adjustListener("touchmove", e2, this), this;
      }, n.default.Element.prototype.touchEnded = function(e2) {
        return n.default.Element._adjustListener("touchend", e2, this), this;
      }, n.default.Element.prototype.dragOver = function(e2) {
        return n.default.Element._adjustListener("dragover", e2, this), this;
      }, n.default.Element.prototype.dragLeave = function(e2) {
        return n.default.Element._adjustListener("dragleave", e2, this), this;
      }, n.default.Element._adjustListener = function(e2, t2, r2) {
        return t2 === false ? n.default.Element._detachListener(e2, r2) : n.default.Element._attachListener(e2, t2, r2), this;
      }, n.default.Element._attachListener = function(e2, t2, r2) {
        r2._events[e2] && n.default.Element._detachListener(e2, r2);
        var i2 = t2.bind(r2);
        r2.elt.addEventListener(e2, i2, false), r2._events[e2] = i2;
      }, n.default.Element._detachListener = function(e2, t2) {
        var r2 = t2._events[e2];
        t2.elt.removeEventListener(e2, r2, false), t2._events[e2] = null;
      }, n.default.Element.prototype._setProperty = function(e2, t2) {
        this[e2] = t2;
      };
      var a = n.default.Element;
      r.default = a;
    }, {"./main": 36}], 38: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, s = (i = e("./main")) && i.__esModule ? i : {default: i}, l = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = u();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("./constants"));
      function u() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return u = function() {
          return e2;
        }, e2;
      }
      s.default.Graphics = function(e2, t2, r2, i2) {
        var n2 = r2 || l.P2D;
        this.canvas = document.createElement("canvas");
        var a = i2._userNode || document.body;
        for (var o2 in a.appendChild(this.canvas), s.default.Element.call(this, this.canvas, i2), s.default.prototype)
          this[o2] || (typeof s.default.prototype[o2] == "function" ? this[o2] = s.default.prototype[o2].bind(this) : this[o2] = s.default.prototype[o2]);
        return s.default.prototype._initializeInstanceVariables.apply(this), this.width = e2, this.height = t2, this._pixelDensity = i2._pixelDensity, n2 === l.WEBGL ? this._renderer = new s.default.RendererGL(this.canvas, this, false) : this._renderer = new s.default.Renderer2D(this.canvas, this, false), i2._elements.push(this), Object.defineProperty(this, "deltaTime", {get: function() {
          return this._pInst.deltaTime;
        }}), this._renderer.resize(e2, t2), this._renderer._applyDefaults(), this;
      }, s.default.Graphics.prototype = Object.create(s.default.Element.prototype), s.default.Graphics.prototype.reset = function() {
        this._renderer.resetMatrix(), this._renderer.isP3D && this._renderer._update();
      }, s.default.Graphics.prototype.remove = function() {
        this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
        var e2 = this._pInst._elements.indexOf(this);
        for (var t2 in e2 !== -1 && this._pInst._elements.splice(e2, 1), this._events)
          this.elt.removeEventListener(t2, this._events[t2]);
      };
      var n = s.default.Graphics;
      r.default = n;
    }, {"./constants": 26, "./main": 36}], 39: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, l = (i = e("./main")) && i.__esModule ? i : {default: i}, T = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || s(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = o();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function o() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return o = function() {
          return e2;
        }, e2;
      }
      function s(e2) {
        return (s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      function u(e2) {
        var t2 = 0, r2 = 0;
        if (e2.offsetParent)
          for (; t2 += e2.offsetLeft, r2 += e2.offsetTop, e2 = e2.offsetParent; )
            ;
        else
          t2 += e2.offsetLeft, r2 += e2.offsetTop;
        return [t2, r2];
      }
      l.default.Renderer = function(e2, t2, r2) {
        l.default.Element.call(this, e2, t2), this.canvas = e2, this._pixelsState = t2, r2 ? (this._isMainCanvas = true, this._pInst._setProperty("_curElement", this), this._pInst._setProperty("canvas", this.canvas), this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height)) : (this.canvas.style.display = "none", this._styles = []), this._textSize = 12, this._textLeading = 15, this._textFont = "sans-serif", this._textStyle = T.NORMAL, this._textAscent = null, this._textDescent = null, this._textAlign = T.LEFT, this._textBaseline = T.BASELINE, this._rectMode = T.CORNER, this._ellipseMode = T.CENTER, this._curveTightness = 0, this._imageMode = T.CORNER, this._tint = null, this._doStroke = true, this._doFill = true, this._strokeSet = false, this._fillSet = false;
      }, l.default.Renderer.prototype = Object.create(l.default.Element.prototype), l.default.Renderer.prototype.push = function() {
        return {properties: {_doStroke: this._doStroke, _strokeSet: this._strokeSet, _doFill: this._doFill, _fillSet: this._fillSet, _tint: this._tint, _imageMode: this._imageMode, _rectMode: this._rectMode, _ellipseMode: this._ellipseMode, _textFont: this._textFont, _textLeading: this._textLeading, _textSize: this._textSize, _textAlign: this._textAlign, _textBaseline: this._textBaseline, _textStyle: this._textStyle}};
      }, l.default.Renderer.prototype.pop = function(e2) {
        e2.properties && Object.assign(this, e2.properties);
      }, l.default.Renderer.prototype.resize = function(e2, t2) {
        this.width = e2, this.height = t2, this.elt.width = e2 * this._pInst._pixelDensity, this.elt.height = t2 * this._pInst._pixelDensity, this.elt.style.width = "".concat(e2, "px"), this.elt.style.height = "".concat(t2, "px"), this._isMainCanvas && (this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height));
      }, l.default.Renderer.prototype.get = function(e2, t2, r2, i2) {
        var n2 = this._pixelsState, a = n2._pixelDensity, o2 = this.canvas;
        if (e2 === void 0 && t2 === void 0)
          e2 = t2 = 0, r2 = n2.width, i2 = n2.height;
        else if (e2 *= a, t2 *= a, r2 === void 0 && i2 === void 0)
          return e2 < 0 || t2 < 0 || e2 >= o2.width || t2 >= o2.height ? [0, 0, 0, 0] : this._getPixel(e2, t2);
        var s2 = new l.default.Image(r2, i2);
        return s2.canvas.getContext("2d").drawImage(o2, e2, t2, r2 * a, i2 * a, 0, 0, r2, i2), s2;
      }, l.default.Renderer.prototype.textLeading = function(e2) {
        return typeof e2 == "number" ? (this._setProperty("_textLeading", e2), this._pInst) : this._textLeading;
      }, l.default.Renderer.prototype.textSize = function(e2) {
        return typeof e2 == "number" ? (this._setProperty("_textSize", e2), this._setProperty("_textLeading", e2 * T._DEFAULT_LEADMULT), this._applyTextProperties()) : this._textSize;
      }, l.default.Renderer.prototype.textStyle = function(e2) {
        return e2 ? (e2 !== T.NORMAL && e2 !== T.ITALIC && e2 !== T.BOLD && e2 !== T.BOLDITALIC || this._setProperty("_textStyle", e2), this._applyTextProperties()) : this._textStyle;
      }, l.default.Renderer.prototype.textAscent = function() {
        return this._textAscent === null && this._updateTextMetrics(), this._textAscent;
      }, l.default.Renderer.prototype.textDescent = function() {
        return this._textDescent === null && this._updateTextMetrics(), this._textDescent;
      }, l.default.Renderer.prototype.textAlign = function(e2, t2) {
        return e2 !== void 0 ? (this._setProperty("_textAlign", e2), t2 !== void 0 && this._setProperty("_textBaseline", t2), this._applyTextProperties()) : {horizontal: this._textAlign, vertical: this._textBaseline};
      }, l.default.Renderer.prototype.text = function(e2, t2, r2, i2, n2) {
        var a, o2, s2, l2, u2, h, c, f, d, p = this._pInst, m = Number.MAX_VALUE;
        if ((this._doFill || this._doStroke) && e2 !== void 0) {
          if (typeof e2 != "string" && (e2 = e2.toString()), a = (e2 = e2.replace(/(\t)/g, "  ")).split("\n"), i2 !== void 0) {
            for (s2 = f = 0; s2 < a.length; s2++) {
              for (u2 = "", c = a[s2].split(" "), o2 = 0; o2 < c.length; o2++)
                if (h = "".concat(u2 + c[o2], " "), i2 < this.textWidth(h)) {
                  for (var v = c[o2], y = 0; y < v.length; y++)
                    h = "".concat(u2 + v[y]), i2 < this.textWidth(h) && 0 < u2.length ? (u2 = "".concat(v[y]), f += p.textLeading()) : u2 = h;
                  u2 = "".concat(u2, " ");
                } else
                  u2 = h;
              s2 < a.length - 1 && (f += p.textLeading());
            }
            switch (this._rectMode === T.CENTER && (t2 -= i2 / 2, r2 -= n2 / 2), this._textAlign) {
              case T.CENTER:
                t2 += i2 / 2;
                break;
              case T.RIGHT:
                t2 += i2;
            }
            var g = false;
            if (n2 !== void 0) {
              switch (this._textBaseline) {
                case T.BOTTOM:
                  d = r2 + (n2 - f), r2 = Math.max(d, r2);
                  break;
                case T.CENTER:
                  d = r2 + (n2 - f) / 2, r2 = Math.max(d, r2);
                  break;
                case T.BASELINE:
                  g = true, this._textBaseline = T.TOP;
              }
              m = r2 + n2 - p.textAscent();
            }
            for (s2 = 0; s2 < a.length; s2++) {
              for (u2 = "", c = a[s2].split(" "), o2 = 0; o2 < c.length; o2++)
                if (h = "".concat(u2 + c[o2], " "), i2 < this.textWidth(h)) {
                  for (var b = c[o2], _ = 0; _ < b.length; _++)
                    if (h = "".concat(u2 + b[_]), i2 < this.textWidth(h) && 0 < u2.length) {
                      var x = u2.slice(-1), w = x !== "\n" && x !== " ";
                      u2 = "".concat(u2).concat(w ? "-" : ""), this._renderText(p, u2, t2, r2, m), r2 += p.textLeading(), u2 = "".concat(b[_]);
                    } else
                      u2 = h;
                  u2 = "".concat(u2, " ");
                } else
                  u2 = h;
              this._renderText(p, u2, t2, r2, m), r2 += p.textLeading(), g && (this._textBaseline = T.BASELINE);
            }
          } else {
            var S = 0, M = p.textAlign().vertical;
            for (M === T.CENTER ? S = (a.length - 1) * p.textLeading() / 2 : M === T.BOTTOM && (S = (a.length - 1) * p.textLeading()), l2 = 0; l2 < a.length; l2++)
              this._renderText(p, a[l2], t2, r2 - S, m), r2 += p.textLeading();
          }
          return p;
        }
      }, l.default.Renderer.prototype._applyDefaults = function() {
        return this;
      }, l.default.Renderer.prototype._isOpenType = function() {
        var e2 = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : this._textFont;
        return s(e2) === "object" && e2.font && e2.font.supported;
      }, l.default.Renderer.prototype._updateTextMetrics = function() {
        if (this._isOpenType())
          return this._setProperty("_textAscent", this._textFont._textAscent()), this._setProperty("_textDescent", this._textFont._textDescent()), this;
        var e2 = document.createElement("span");
        e2.style.fontFamily = this._textFont, e2.style.fontSize = "".concat(this._textSize, "px"), e2.innerHTML = "ABCjgq|";
        var t2 = document.createElement("div");
        t2.style.display = "inline-block", t2.style.width = "1px", t2.style.height = "0px";
        var r2 = document.createElement("div");
        r2.appendChild(e2), r2.appendChild(t2), r2.style.height = "0px", r2.style.overflow = "hidden", document.body.appendChild(r2), t2.style.verticalAlign = "baseline";
        var i2 = u(t2), n2 = u(e2), a = i2[1] - n2[1];
        t2.style.verticalAlign = "bottom", i2 = u(t2), n2 = u(e2);
        var o2 = i2[1] - n2[1] - a;
        return document.body.removeChild(r2), this._setProperty("_textAscent", a), this._setProperty("_textDescent", o2), this;
      };
      var n = l.default.Renderer;
      r.default = n;
    }, {"../core/constants": 26, "./main": 36}], 40: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var c = i(e("./main")), p = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("./constants")), f = i(e("../image/filters"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      function i(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      e("./p5.Renderer");
      var v = "rgba(0,0,0,0)";
      c.default.Renderer2D = function(e2, t2, r2) {
        return c.default.Renderer.call(this, e2, t2, r2), this.drawingContext = this.canvas.getContext("2d"), this._pInst._setProperty("drawingContext", this.drawingContext), this;
      }, c.default.Renderer2D.prototype = Object.create(c.default.Renderer.prototype), c.default.Renderer2D.prototype._applyDefaults = function() {
        this._cachedFillStyle = this._cachedStrokeStyle = void 0, this._cachedBlendMode = p.BLEND, this._setFill(p._DEFAULT_FILL), this._setStroke(p._DEFAULT_STROKE), this.drawingContext.lineCap = p.ROUND, this.drawingContext.font = "normal 12px sans-serif";
      }, c.default.Renderer2D.prototype.resize = function(e2, t2) {
        c.default.Renderer.prototype.resize.call(this, e2, t2), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
      }, c.default.Renderer2D.prototype.background = function() {
        if (this.drawingContext.save(), this.resetMatrix(), (arguments.length <= 0 ? void 0 : arguments[0]) instanceof c.default.Image)
          this._pInst.image(arguments.length <= 0 ? void 0 : arguments[0], 0, 0, this.width, this.height);
        else {
          var e2, t2 = this._getFill(), r2 = (e2 = this._pInst).color.apply(e2, arguments);
          this._pInst._addAccsOutput() && this._pInst._accsBackground(r2.levels);
          var i2 = r2.toString();
          this._setFill(i2), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(t2), this._isErasing && this._pInst.erase();
        }
        this.drawingContext.restore();
      }, c.default.Renderer2D.prototype.clear = function() {
        this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), this.drawingContext.restore();
      }, c.default.Renderer2D.prototype.fill = function() {
        var e2, t2 = (e2 = this._pInst).color.apply(e2, arguments);
        this._setFill(t2.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("fill", t2.levels);
      }, c.default.Renderer2D.prototype.stroke = function() {
        var e2, t2 = (e2 = this._pInst).color.apply(e2, arguments);
        this._setStroke(t2.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("stroke", t2.levels);
      }, c.default.Renderer2D.prototype.erase = function(e2, t2) {
        if (!this._isErasing) {
          this._cachedFillStyle = this.drawingContext.fillStyle;
          var r2 = this._pInst.color(255, e2).toString();
          this.drawingContext.fillStyle = r2, this._cachedStrokeStyle = this.drawingContext.strokeStyle;
          var i2 = this._pInst.color(255, t2).toString();
          this.drawingContext.strokeStyle = i2;
          var n2 = this._cachedBlendMode;
          this.blendMode(p.REMOVE), this._cachedBlendMode = n2, this._isErasing = true;
        }
      }, c.default.Renderer2D.prototype.noErase = function() {
        this._isErasing && (this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode), this._isErasing = false);
      }, c.default.Renderer2D.prototype.image = function(e2, t2, r2, i2, n2, a, o2, s2, l) {
        var u;
        e2.gifProperties && e2._animateGif(this._pInst);
        try {
          this._tint && (c.default.MediaElement && e2 instanceof c.default.MediaElement && e2.loadPixels(), e2.canvas && (u = this._getTintedImageCanvas(e2))), u = u || (e2.canvas || e2.elt);
          var h = 1;
          e2.width && 0 < e2.width && (h = u.width / e2.width), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.drawImage(u, h * t2, h * r2, h * i2, h * n2, a, o2, s2, l), this._isErasing && this._pInst.erase();
        } catch (e3) {
          if (e3.name !== "NS_ERROR_NOT_AVAILABLE")
            throw e3;
        }
      }, c.default.Renderer2D.prototype._getTintedImageCanvas = function(e2) {
        if (!e2.canvas)
          return e2;
        var t2 = f.default._toPixels(e2.canvas), r2 = document.createElement("canvas");
        r2.width = e2.canvas.width, r2.height = e2.canvas.height;
        for (var i2 = r2.getContext("2d"), n2 = i2.createImageData(e2.canvas.width, e2.canvas.height), a = n2.data, o2 = 0; o2 < t2.length; o2 += 4) {
          var s2 = t2[o2], l = t2[o2 + 1], u = t2[o2 + 2], h = t2[o2 + 3];
          a[o2] = s2 * this._tint[0] / 255, a[o2 + 1] = l * this._tint[1] / 255, a[o2 + 2] = u * this._tint[2] / 255, a[o2 + 3] = h * this._tint[3] / 255;
        }
        return i2.putImageData(n2, 0, 0), r2;
      }, c.default.Renderer2D.prototype.blendMode = function(e2) {
        if (e2 === p.SUBTRACT)
          console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");
        else {
          if (e2 !== p.BLEND && e2 !== p.REMOVE && e2 !== p.DARKEST && e2 !== p.LIGHTEST && e2 !== p.DIFFERENCE && e2 !== p.MULTIPLY && e2 !== p.EXCLUSION && e2 !== p.SCREEN && e2 !== p.REPLACE && e2 !== p.OVERLAY && e2 !== p.HARD_LIGHT && e2 !== p.SOFT_LIGHT && e2 !== p.DODGE && e2 !== p.BURN && e2 !== p.ADD)
            throw new Error("Mode ".concat(e2, " not recognized."));
          this._cachedBlendMode = e2, this.drawingContext.globalCompositeOperation = e2;
        }
      }, c.default.Renderer2D.prototype.blend = function() {
        for (var e2 = this.drawingContext.globalCompositeOperation, t2 = arguments.length, r2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r2[i2] = arguments[i2];
        var n2 = r2[r2.length - 1], a = Array.prototype.slice.call(r2, 0, r2.length - 1);
        this.drawingContext.globalCompositeOperation = n2, c.default.prototype.copy.apply(this, a), this.drawingContext.globalCompositeOperation = e2;
      }, c.default.Renderer2D.prototype._getPixel = function(e2, t2) {
        var r2;
        return [(r2 = this.drawingContext.getImageData(e2, t2, 1, 1).data)[0], r2[1], r2[2], r2[3]];
      }, c.default.Renderer2D.prototype.loadPixels = function() {
        var e2 = this._pixelsState, t2 = e2._pixelDensity, r2 = this.width * t2, i2 = this.height * t2, n2 = this.drawingContext.getImageData(0, 0, r2, i2);
        e2._setProperty("imageData", n2), e2._setProperty("pixels", n2.data);
      }, c.default.Renderer2D.prototype.set = function(e2, t2, r2) {
        e2 = Math.floor(e2), t2 = Math.floor(t2);
        var i2 = this._pixelsState;
        if (r2 instanceof c.default.Image)
          this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(i2._pixelDensity, i2._pixelDensity), this.drawingContext.clearRect(e2, t2, r2.width, r2.height), this.drawingContext.drawImage(r2.canvas, e2, t2), this.drawingContext.restore();
        else {
          var n2 = 0, a = 0, o2 = 0, s2 = 0, l = 4 * (t2 * i2._pixelDensity * (this.width * i2._pixelDensity) + e2 * i2._pixelDensity);
          if (i2.imageData || i2.loadPixels.call(i2), typeof r2 == "number")
            l < i2.pixels.length && (o2 = a = n2 = r2, s2 = 255);
          else if (r2 instanceof Array) {
            if (r2.length < 4)
              throw new Error("pixel array must be of the form [R, G, B, A]");
            l < i2.pixels.length && (n2 = r2[0], a = r2[1], o2 = r2[2], s2 = r2[3]);
          } else
            r2 instanceof c.default.Color && l < i2.pixels.length && (n2 = r2.levels[0], a = r2.levels[1], o2 = r2.levels[2], s2 = r2.levels[3]);
          for (var u = 0; u < i2._pixelDensity; u++)
            for (var h = 0; h < i2._pixelDensity; h++)
              l = 4 * ((t2 * i2._pixelDensity + h) * this.width * i2._pixelDensity + (e2 * i2._pixelDensity + u)), i2.pixels[l] = n2, i2.pixels[l + 1] = a, i2.pixels[l + 2] = o2, i2.pixels[l + 3] = s2;
        }
      }, c.default.Renderer2D.prototype.updatePixels = function(e2, t2, r2, i2) {
        var n2 = this._pixelsState, a = n2._pixelDensity;
        e2 === void 0 && t2 === void 0 && r2 === void 0 && i2 === void 0 && (t2 = e2 = 0, r2 = this.width, i2 = this.height), e2 *= a, t2 *= a, r2 *= a, i2 *= a, this.gifProperties && (this.gifProperties.frames[this.gifProperties.displayIndex].image = n2.imageData), this.drawingContext.putImageData(n2.imageData, e2, t2, 0, 0, r2, i2);
      }, c.default.Renderer2D.prototype._acuteArcToBezier = function(e2, t2) {
        var r2 = t2 / 2, i2 = Math.cos(r2), n2 = Math.sin(r2), a = 1 / Math.tan(r2), o2 = e2 + r2, s2 = Math.cos(o2), l = Math.sin(o2), u = (4 - i2) / 3, h = n2 + (i2 - u) * a;
        return {ax: Math.cos(e2).toFixed(7), ay: Math.sin(e2).toFixed(7), bx: (u * s2 + h * l).toFixed(7), by: (u * l - h * s2).toFixed(7), cx: (u * s2 - h * l).toFixed(7), cy: (u * l + h * s2).toFixed(7), dx: Math.cos(e2 + t2).toFixed(7), dy: Math.sin(e2 + t2).toFixed(7)};
      }, c.default.Renderer2D.prototype.arc = function(r2, i2, e2, t2, n2, a, o2) {
        var s2 = this.drawingContext, l = e2 / 2, u = t2 / 2, h = 0, c2 = [];
        for (r2 += l, i2 += u; 1e-5 <= a - n2; )
          h = Math.min(a - n2, p.HALF_PI), c2.push(this._acuteArcToBezier(n2, h)), n2 += h;
        return this._doFill && (s2.beginPath(), c2.forEach(function(e3, t3) {
          t3 === 0 && s2.moveTo(r2 + e3.ax * l, i2 + e3.ay * u), s2.bezierCurveTo(r2 + e3.bx * l, i2 + e3.by * u, r2 + e3.cx * l, i2 + e3.cy * u, r2 + e3.dx * l, i2 + e3.dy * u);
        }), o2 !== p.PIE && o2 != null || s2.lineTo(r2, i2), s2.closePath(), s2.fill()), this._doStroke && (s2.beginPath(), c2.forEach(function(e3, t3) {
          t3 === 0 && s2.moveTo(r2 + e3.ax * l, i2 + e3.ay * u), s2.bezierCurveTo(r2 + e3.bx * l, i2 + e3.by * u, r2 + e3.cx * l, i2 + e3.cy * u, r2 + e3.dx * l, i2 + e3.dy * u);
        }), o2 === p.PIE ? (s2.lineTo(r2, i2), s2.closePath()) : o2 === p.CHORD && s2.closePath(), s2.stroke()), this;
      }, c.default.Renderer2D.prototype.ellipse = function(e2) {
        var t2 = this.drawingContext, r2 = this._doFill, i2 = this._doStroke, n2 = parseFloat(e2[0]), a = parseFloat(e2[1]), o2 = parseFloat(e2[2]), s2 = parseFloat(e2[3]);
        if (r2 && !i2) {
          if (this._getFill() === v)
            return this;
        } else if (!r2 && i2 && this._getStroke() === v)
          return this;
        var l = o2 / 2 * 0.5522847498, u = s2 / 2 * 0.5522847498, h = n2 + o2, c2 = a + s2, f2 = n2 + o2 / 2, d = a + s2 / 2;
        t2.beginPath(), t2.moveTo(n2, d), t2.bezierCurveTo(n2, d - u, f2 - l, a, f2, a), t2.bezierCurveTo(f2 + l, a, h, d - u, h, d), t2.bezierCurveTo(h, d + u, f2 + l, c2, f2, c2), t2.bezierCurveTo(f2 - l, c2, n2, d + u, n2, d), r2 && t2.fill(), i2 && t2.stroke();
      }, c.default.Renderer2D.prototype.line = function(e2, t2, r2, i2) {
        var n2 = this.drawingContext;
        return this._doStroke && (this._getStroke() === v || (n2.beginPath(), n2.moveTo(e2, t2), n2.lineTo(r2, i2), n2.stroke())), this;
      }, c.default.Renderer2D.prototype.point = function(e2, t2) {
        var r2 = this.drawingContext;
        if (!this._doStroke)
          return this;
        if (this._getStroke() === v)
          return this;
        var i2 = this._getStroke(), n2 = this._getFill();
        e2 = Math.round(e2), t2 = Math.round(t2), this._setFill(i2), 1 < r2.lineWidth ? (r2.beginPath(), r2.arc(e2, t2, r2.lineWidth / 2, 0, p.TWO_PI, false), r2.fill()) : r2.fillRect(e2, t2, 1, 1), this._setFill(n2);
      }, c.default.Renderer2D.prototype.quad = function(e2, t2, r2, i2, n2, a, o2, s2) {
        var l = this.drawingContext, u = this._doFill, h = this._doStroke;
        if (u && !h) {
          if (this._getFill() === v)
            return this;
        } else if (!u && h && this._getStroke() === v)
          return this;
        return l.beginPath(), l.moveTo(e2, t2), l.lineTo(r2, i2), l.lineTo(n2, a), l.lineTo(o2, s2), l.closePath(), u && l.fill(), h && l.stroke(), this;
      }, c.default.Renderer2D.prototype.rect = function(e2) {
        var t2 = e2[0], r2 = e2[1], i2 = e2[2], n2 = e2[3], a = e2[4], o2 = e2[5], s2 = e2[6], l = e2[7], u = this.drawingContext, h = this._doFill, c2 = this._doStroke;
        if (h && !c2) {
          if (this._getFill() === v)
            return this;
        } else if (!h && c2 && this._getStroke() === v)
          return this;
        if (u.beginPath(), a === void 0)
          u.rect(t2, r2, i2, n2);
        else {
          o2 === void 0 && (o2 = a), s2 === void 0 && (s2 = o2), l === void 0 && (l = s2);
          var f2 = Math.abs(i2), d = Math.abs(n2), p2 = f2 / 2, m = d / 2;
          f2 < 2 * a && (a = p2), d < 2 * a && (a = m), f2 < 2 * o2 && (o2 = p2), d < 2 * o2 && (o2 = m), f2 < 2 * s2 && (s2 = p2), d < 2 * s2 && (s2 = m), f2 < 2 * l && (l = p2), d < 2 * l && (l = m), u.beginPath(), u.moveTo(t2 + a, r2), u.arcTo(t2 + i2, r2, t2 + i2, r2 + n2, o2), u.arcTo(t2 + i2, r2 + n2, t2, r2 + n2, s2), u.arcTo(t2, r2 + n2, t2, r2, l), u.arcTo(t2, r2, t2 + i2, r2, a), u.closePath();
        }
        return this._doFill && u.fill(), this._doStroke && u.stroke(), this;
      }, c.default.Renderer2D.prototype.triangle = function(e2) {
        var t2 = this.drawingContext, r2 = this._doFill, i2 = this._doStroke, n2 = e2[0], a = e2[1], o2 = e2[2], s2 = e2[3], l = e2[4], u = e2[5];
        if (r2 && !i2) {
          if (this._getFill() === v)
            return this;
        } else if (!r2 && i2 && this._getStroke() === v)
          return this;
        t2.beginPath(), t2.moveTo(n2, a), t2.lineTo(o2, s2), t2.lineTo(l, u), t2.closePath(), r2 && t2.fill(), i2 && t2.stroke();
      }, c.default.Renderer2D.prototype.endShape = function(e2, t2, r2, i2, n2, a, o2) {
        if (t2.length === 0)
          return this;
        if (!this._doStroke && !this._doFill)
          return this;
        var s2, l, u, h = e2 === p.CLOSE;
        h && !a && t2.push(t2[0]);
        var c2 = t2.length;
        if (!r2 || o2 !== p.POLYGON && o2 !== null)
          if (!i2 || o2 !== p.POLYGON && o2 !== null)
            if (!n2 || o2 !== p.POLYGON && o2 !== null)
              if (o2 === p.POINTS)
                for (l = 0; l < c2; l++)
                  s2 = t2[l], this._doStroke && this._pInst.stroke(s2[6]), this._pInst.point(s2[0], s2[1]);
              else if (o2 === p.LINES)
                for (l = 0; l + 1 < c2; l += 2)
                  s2 = t2[l], this._doStroke && this._pInst.stroke(t2[l + 1][6]), this._pInst.line(s2[0], s2[1], t2[l + 1][0], t2[l + 1][1]);
              else if (o2 === p.TRIANGLES)
                for (l = 0; l + 2 < c2; l += 3)
                  s2 = t2[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(s2[0], s2[1]), this.drawingContext.lineTo(t2[l + 1][0], t2[l + 1][1]), this.drawingContext.lineTo(t2[l + 2][0], t2[l + 2][1]), this.drawingContext.closePath(), this._doFill && (this._pInst.fill(t2[l + 2][5]), this.drawingContext.fill()), this._doStroke && (this._pInst.stroke(t2[l + 2][6]), this.drawingContext.stroke());
              else if (o2 === p.TRIANGLE_STRIP)
                for (l = 0; l + 1 < c2; l++)
                  s2 = t2[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(t2[l + 1][0], t2[l + 1][1]), this.drawingContext.lineTo(s2[0], s2[1]), this._doStroke && this._pInst.stroke(t2[l + 1][6]), this._doFill && this._pInst.fill(t2[l + 1][5]), l + 2 < c2 && (this.drawingContext.lineTo(t2[l + 2][0], t2[l + 2][1]), this._doStroke && this._pInst.stroke(t2[l + 2][6]), this._doFill && this._pInst.fill(t2[l + 2][5])), this._doFillStrokeClose(h);
              else if (o2 === p.TRIANGLE_FAN) {
                if (2 < c2) {
                  for (this.drawingContext.beginPath(), l = 2; l < c2; l++)
                    s2 = t2[l], this.drawingContext.moveTo(t2[0][0], t2[0][1]), this.drawingContext.lineTo(t2[l - 1][0], t2[l - 1][1]), this.drawingContext.lineTo(s2[0], s2[1]), this.drawingContext.lineTo(t2[0][0], t2[0][1]), l < c2 - 1 && (this._doFill && s2[5] !== t2[l + 1][5] || this._doStroke && s2[6] !== t2[l + 1][6]) && (this._doFill && (this._pInst.fill(s2[5]), this.drawingContext.fill(), this._pInst.fill(t2[l + 1][5])), this._doStroke && (this._pInst.stroke(s2[6]), this.drawingContext.stroke(), this._pInst.stroke(t2[l + 1][6])), this.drawingContext.closePath(), this.drawingContext.beginPath());
                  this._doFillStrokeClose(h);
                }
              } else if (o2 === p.QUADS)
                for (l = 0; l + 3 < c2; l += 4) {
                  for (s2 = t2[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(s2[0], s2[1]), u = 1; u < 4; u++)
                    this.drawingContext.lineTo(t2[l + u][0], t2[l + u][1]);
                  this.drawingContext.lineTo(s2[0], s2[1]), this._doFill && this._pInst.fill(t2[l + 3][5]), this._doStroke && this._pInst.stroke(t2[l + 3][6]), this._doFillStrokeClose(h);
                }
              else if (o2 === p.QUAD_STRIP) {
                if (3 < c2)
                  for (l = 0; l + 1 < c2; l += 2)
                    s2 = t2[l], this.drawingContext.beginPath(), l + 3 < c2 ? (this.drawingContext.moveTo(t2[l + 2][0], t2[l + 2][1]), this.drawingContext.lineTo(s2[0], s2[1]), this.drawingContext.lineTo(t2[l + 1][0], t2[l + 1][1]), this.drawingContext.lineTo(t2[l + 3][0], t2[l + 3][1]), this._doFill && this._pInst.fill(t2[l + 3][5]), this._doStroke && this._pInst.stroke(t2[l + 3][6])) : (this.drawingContext.moveTo(s2[0], s2[1]), this.drawingContext.lineTo(t2[l + 1][0], t2[l + 1][1])), this._doFillStrokeClose(h);
              } else {
                for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t2[0][0], t2[0][1]), l = 1; l < c2; l++)
                  (s2 = t2[l]).isVert && (s2.moveTo ? this.drawingContext.moveTo(s2[0], s2[1]) : this.drawingContext.lineTo(s2[0], s2[1]));
                this._doFillStrokeClose(h);
              }
            else {
              for (this.drawingContext.beginPath(), l = 0; l < c2; l++)
                t2[l].isVert ? t2[l].moveTo ? this.drawingContext.moveTo(t2[l][0], t2[l][1]) : this.drawingContext.lineTo(t2[l][0], t2[l][1]) : this.drawingContext.quadraticCurveTo(t2[l][0], t2[l][1], t2[l][2], t2[l][3]);
              this._doFillStrokeClose(h);
            }
          else {
            for (this.drawingContext.beginPath(), l = 0; l < c2; l++)
              t2[l].isVert ? t2[l].moveTo ? this.drawingContext.moveTo(t2[l][0], t2[l][1]) : this.drawingContext.lineTo(t2[l][0], t2[l][1]) : this.drawingContext.bezierCurveTo(t2[l][0], t2[l][1], t2[l][2], t2[l][3], t2[l][4], t2[l][5]);
            this._doFillStrokeClose(h);
          }
        else if (3 < c2) {
          var f2 = [], d = 1 - this._curveTightness;
          for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t2[1][0], t2[1][1]), l = 1; l + 2 < c2; l++)
            s2 = t2[l], f2[0] = [s2[0], s2[1]], f2[1] = [s2[0] + (d * t2[l + 1][0] - d * t2[l - 1][0]) / 6, s2[1] + (d * t2[l + 1][1] - d * t2[l - 1][1]) / 6], f2[2] = [t2[l + 1][0] + (d * t2[l][0] - d * t2[l + 2][0]) / 6, t2[l + 1][1] + (d * t2[l][1] - d * t2[l + 2][1]) / 6], f2[3] = [t2[l + 1][0], t2[l + 1][1]], this.drawingContext.bezierCurveTo(f2[1][0], f2[1][1], f2[2][0], f2[2][1], f2[3][0], f2[3][1]);
          h && this.drawingContext.lineTo(t2[l + 1][0], t2[l + 1][1]), this._doFillStrokeClose(h);
        }
        return a = n2 = i2 = r2 = false, h && t2.pop(), this;
      }, c.default.Renderer2D.prototype.strokeCap = function(e2) {
        return e2 !== p.ROUND && e2 !== p.SQUARE && e2 !== p.PROJECT || (this.drawingContext.lineCap = e2), this;
      }, c.default.Renderer2D.prototype.strokeJoin = function(e2) {
        return e2 !== p.ROUND && e2 !== p.BEVEL && e2 !== p.MITER || (this.drawingContext.lineJoin = e2), this;
      }, c.default.Renderer2D.prototype.strokeWeight = function(e2) {
        return this.drawingContext.lineWidth = e2 === void 0 || e2 === 0 ? 1e-4 : e2, this;
      }, c.default.Renderer2D.prototype._getFill = function() {
        return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), this._cachedFillStyle;
      }, c.default.Renderer2D.prototype._setFill = function(e2) {
        e2 !== this._cachedFillStyle && (this.drawingContext.fillStyle = e2, this._cachedFillStyle = e2);
      }, c.default.Renderer2D.prototype._getStroke = function() {
        return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), this._cachedStrokeStyle;
      }, c.default.Renderer2D.prototype._setStroke = function(e2) {
        e2 !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e2, this._cachedStrokeStyle = e2);
      }, c.default.Renderer2D.prototype.bezier = function(e2, t2, r2, i2, n2, a, o2, s2) {
        return this._pInst.beginShape(), this._pInst.vertex(e2, t2), this._pInst.bezierVertex(r2, i2, n2, a, o2, s2), this._pInst.endShape(), this;
      }, c.default.Renderer2D.prototype.curve = function(e2, t2, r2, i2, n2, a, o2, s2) {
        return this._pInst.beginShape(), this._pInst.curveVertex(e2, t2), this._pInst.curveVertex(r2, i2), this._pInst.curveVertex(n2, a), this._pInst.curveVertex(o2, s2), this._pInst.endShape(), this;
      }, c.default.Renderer2D.prototype._doFillStrokeClose = function(e2) {
        e2 && this.drawingContext.closePath(), this._doFill && this.drawingContext.fill(), this._doStroke && this.drawingContext.stroke();
      }, c.default.Renderer2D.prototype.applyMatrix = function(e2, t2, r2, i2, n2, a) {
        this.drawingContext.transform(e2, t2, r2, i2, n2, a);
      }, c.default.Renderer2D.prototype.resetMatrix = function() {
        return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), this;
      }, c.default.Renderer2D.prototype.rotate = function(e2) {
        this.drawingContext.rotate(e2);
      }, c.default.Renderer2D.prototype.scale = function(e2, t2) {
        return this.drawingContext.scale(e2, t2), this;
      }, c.default.Renderer2D.prototype.translate = function(e2, t2) {
        return e2 instanceof c.default.Vector && (t2 = e2.y, e2 = e2.x), this.drawingContext.translate(e2, t2), this;
      }, c.default.Renderer2D.prototype.text = function(e2, t2, r2, i2, n2) {
        var a;
        i2 !== void 0 && this.drawingContext.textBaseline === p.BASELINE && (a = true, this.drawingContext.textBaseline = p.TOP);
        var o2 = c.default.Renderer.prototype.text.apply(this, arguments);
        return a && (this.drawingContext.textBaseline = p.BASELINE), o2;
      }, c.default.Renderer2D.prototype._renderText = function(e2, t2, r2, i2, n2) {
        if (!(n2 <= i2))
          return e2.push(), this._isOpenType() ? this._textFont._renderPath(t2, r2, i2, {renderer: this}) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t2, r2, i2), this._doFill && (this._fillSet || this._setFill(p._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t2, r2, i2))), e2.pop(), e2;
      }, c.default.Renderer2D.prototype.textWidth = function(e2) {
        return this._isOpenType() ? this._textFont._textWidth(e2, this._textSize) : this.drawingContext.measureText(e2).width;
      }, c.default.Renderer2D.prototype._applyTextProperties = function() {
        var e2, t2 = this._pInst;
        return this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), e2 = this._textFont, this._isOpenType() && (e2 = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), this.drawingContext.font = "".concat(this._textStyle || "normal", " ").concat(this._textSize || 12, "px ").concat(e2 || "sans-serif"), this.drawingContext.textAlign = this._textAlign, this._textBaseline === p.CENTER ? this.drawingContext.textBaseline = p._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, t2;
      }, c.default.Renderer2D.prototype.push = function() {
        return this.drawingContext.save(), c.default.Renderer.prototype.push.apply(this);
      }, c.default.Renderer2D.prototype.pop = function(e2) {
        this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, this._cachedStrokeStyle = this.drawingContext.strokeStyle, c.default.Renderer.prototype.pop.call(this, e2);
      };
      var n = c.default.Renderer2D;
      r.default = n;
    }, {"../image/filters": 57, "./constants": 26, "./main": 36, "./p5.Renderer": 39}], 41: [function(e, t, r) {
      var i, f = (i = e("./main")) && i.__esModule ? i : {default: i};
      f.default.prototype._promisePreloads = [];
      var d = !(f.default.prototype.registerPromisePreload = function(e2) {
        f.default.prototype._promisePreloads.push(e2);
      });
      f.default.prototype._setupPromisePreloads = function() {
        var e2 = true, t2 = false, r2 = void 0;
        try {
          for (var i2, n = this._promisePreloads[Symbol.iterator](); !(e2 = (i2 = n.next()).done); e2 = true) {
            var a2 = i2.value, o = this, s = a2.method, l = a2.addCallbacks, u = a2.legacyPreloadSetup, h = a2.target || this, c = h[s].bind(h);
            if (h === f.default.prototype) {
              if (d)
                continue;
              o = null, c = h[s];
            }
            if (h[s] = this._wrapPromisePreload(o, c, l), u)
              h[u.method] = this._legacyPreloadGenerator(o, u, h[s]);
          }
        } catch (e3) {
          t2 = true, r2 = e3;
        } finally {
          try {
            e2 || n.return == null || n.return();
          } finally {
            if (t2)
              throw r2;
          }
        }
        d = true;
      }, f.default.prototype._wrapPromisePreload = function(e2, l, u) {
        var t2 = function() {
          var e3 = this;
          this._incrementPreload();
          for (var t3 = null, r2 = null, i2 = arguments.length, n = new Array(i2), a2 = 0; a2 < i2; a2++)
            n[a2] = arguments[a2];
          if (u)
            for (var o = n.length - 1; 0 <= o && !r2 && typeof n[o] == "function"; o--)
              r2 = t3, t3 = n.pop();
          var s = Promise.resolve(l.apply(this, n));
          return t3 && s.then(t3), r2 && s.catch(r2), s.then(function() {
            return e3._decrementPreload();
          }), s;
        };
        return e2 && (t2 = t2.bind(e2)), t2;
      };
      function a() {
        return {};
      }
      f.default.prototype._legacyPreloadGenerator = function(e2, t2, i2) {
        var n = t2.createBaseObject || a, r2 = function() {
          var t3 = this;
          this._incrementPreload();
          var r3 = n.apply(this, arguments);
          return i2.apply(this, arguments).then(function(e3) {
            Object.assign(r3, e3), t3._decrementPreload();
          }), r3;
        };
        return e2 && (r2 = r2.bind(e2)), r2;
      };
    }, {"./main": 36}], 42: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, l = (i = e("./main")) && i.__esModule ? i : {default: i}, u = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || s(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = o();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("./constants"));
      function o() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return o = function() {
          return e2;
        }, e2;
      }
      function s(e2) {
        return (s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      e("./p5.Graphics"), e("./p5.Renderer2D"), e("../webgl/p5.RendererGL");
      var h = "defaultCanvas0";
      l.default.prototype.createCanvas = function(e2, t2, r2) {
        l.default._validateParameters("createCanvas", arguments);
        var i2, n2 = r2 || u.P2D;
        if (n2 === u.WEBGL) {
          if (i2 = document.getElementById(h)) {
            i2.parentNode.removeChild(i2);
            var a = this._renderer;
            this._elements = this._elements.filter(function(e3) {
              return e3 !== a;
            });
          }
          (i2 = document.createElement("canvas")).id = h, i2.classList.add("p5Canvas");
        } else if (this._defaultGraphicsCreated)
          i2 = this.canvas;
        else {
          i2 = document.createElement("canvas");
          for (var o2 = 0; document.getElementById("defaultCanvas".concat(o2)); )
            o2++;
          h = "defaultCanvas".concat(o2), i2.id = h, i2.classList.add("p5Canvas");
        }
        if (this._setupDone || (i2.dataset.hidden = true, i2.style.visibility = "hidden"), this._userNode)
          this._userNode.appendChild(i2);
        else {
          if (document.getElementsByTagName("main").length === 0) {
            var s2 = document.createElement("main");
            document.body.appendChild(s2);
          }
          document.getElementsByTagName("main")[0].appendChild(i2);
        }
        return n2 === u.WEBGL ? (this._setProperty("_renderer", new l.default.RendererGL(i2, this, true)), this._elements.push(this._renderer)) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new l.default.Renderer2D(i2, this, true)), this._defaultGraphicsCreated = true, this._elements.push(this._renderer)), this._renderer.resize(e2, t2), this._renderer._applyDefaults(), this._renderer;
      }, l.default.prototype.resizeCanvas = function(e2, t2, r2) {
        if (l.default._validateParameters("resizeCanvas", arguments), this._renderer) {
          var i2 = {};
          for (var n2 in this.drawingContext) {
            var a = this.drawingContext[n2];
            s(a) !== "object" && typeof a != "function" && (i2[n2] = a);
          }
          for (var o2 in this._renderer.resize(e2, t2), this.width = e2, this.height = t2, i2)
            try {
              this.drawingContext[o2] = i2[o2];
            } catch (e3) {
            }
          r2 || this.redraw();
        }
        this._addAccsOutput() && this._updateAccsOutput();
      }, l.default.prototype.noCanvas = function() {
        this.canvas && this.canvas.parentNode.removeChild(this.canvas);
      }, l.default.prototype.createGraphics = function(e2, t2, r2) {
        return l.default._validateParameters("createGraphics", arguments), new l.default.Graphics(e2, t2, r2, this);
      }, l.default.prototype.blendMode = function(e2) {
        l.default._validateParameters("blendMode", arguments), e2 === u.NORMAL && (console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."), e2 = u.BLEND), this._renderer.blendMode(e2);
      };
      var n = l.default;
      r.default = n;
    }, {"../webgl/p5.RendererGL": 90, "./constants": 26, "./main": 36, "./p5.Graphics": 38, "./p5.Renderer2D": 40}], 43: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var h = i(e("../main")), s = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = l();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../constants")), c = i(e("../helpers"));
      function l() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return l = function() {
          return e2;
        }, e2;
      }
      function i(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      e("../friendly_errors/fes_core"), e("../friendly_errors/file_errors"), e("../friendly_errors/validate_params"), h.default.prototype._normalizeArcAngles = function(e2, t2, r2, i2, n2) {
        var a;
        return e2 -= s.TWO_PI * Math.floor(e2 / s.TWO_PI), t2 -= s.TWO_PI * Math.floor(t2 / s.TWO_PI), a = Math.min(Math.abs(e2 - t2), s.TWO_PI - Math.abs(e2 - t2)), n2 && (e2 = e2 <= s.HALF_PI ? Math.atan(r2 / i2 * Math.tan(e2)) : e2 > s.HALF_PI && e2 <= 3 * s.HALF_PI ? Math.atan(r2 / i2 * Math.tan(e2)) + s.PI : Math.atan(r2 / i2 * Math.tan(e2)) + s.TWO_PI, t2 = t2 <= s.HALF_PI ? Math.atan(r2 / i2 * Math.tan(t2)) : t2 > s.HALF_PI && t2 <= 3 * s.HALF_PI ? Math.atan(r2 / i2 * Math.tan(t2)) + s.PI : Math.atan(r2 / i2 * Math.tan(t2)) + s.TWO_PI), t2 < e2 && (t2 += s.TWO_PI), {start: e2, stop: t2, correspondToSamePoint: a < 1e-5};
      }, h.default.prototype.arc = function(e2, t2, r2, i2, n2, a, o2, s2) {
        if (h.default._validateParameters("arc", arguments), !this._renderer._doStroke && !this._renderer._doFill)
          return this;
        if (n2 === a)
          return this;
        n2 = this._toRadians(n2), a = this._toRadians(a), r2 = Math.abs(r2), i2 = Math.abs(i2);
        var l2 = c.default.modeAdjust(e2, t2, r2, i2, this._renderer._ellipseMode), u = this._normalizeArcAngles(n2, a, l2.w, l2.h, true);
        return u.correspondToSamePoint ? this._renderer.ellipse([l2.x, l2.y, l2.w, l2.h, s2]) : (this._renderer.arc(l2.x, l2.y, l2.w, l2.h, u.start, u.stop, o2, s2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("arc", [l2.x, l2.y, l2.w, l2.h, u.start, u.stop, o2])), this;
      }, h.default.prototype.ellipse = function(e2, t2, r2, i2, n2) {
        return h.default._validateParameters("ellipse", arguments), this._renderEllipse.apply(this, arguments);
      }, h.default.prototype.circle = function() {
        h.default._validateParameters("circle", arguments);
        var e2 = Array.prototype.slice.call(arguments, 0, 2);
        return e2.push(arguments[2]), e2.push(arguments[2]), this._renderEllipse.apply(this, e2);
      }, h.default.prototype._renderEllipse = function(e2, t2, r2, i2, n2) {
        if (!this._renderer._doStroke && !this._renderer._doFill)
          return this;
        r2 < 0 && (r2 = Math.abs(r2)), i2 === void 0 ? i2 = r2 : i2 < 0 && (i2 = Math.abs(i2));
        var a = c.default.modeAdjust(e2, t2, r2, i2, this._renderer._ellipseMode);
        return this._renderer.ellipse([a.x, a.y, a.w, a.h, n2]), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("ellipse", [a.x, a.y, a.w, a.h]), this;
      }, h.default.prototype.line = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2;
        h.default._validateParameters("line", t2), this._renderer._doStroke && (i2 = this._renderer).line.apply(i2, t2);
        return (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("line", t2), this;
      }, h.default.prototype.point = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2;
        h.default._validateParameters("point", t2), this._renderer._doStroke && (t2.length === 1 && t2[0] instanceof h.default.Vector ? this._renderer.point.call(this._renderer, t2[0].x, t2[0].y, t2[0].z) : ((i2 = this._renderer).point.apply(i2, t2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("point", t2)));
        return this;
      }, h.default.prototype.quad = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2;
        h.default._validateParameters("quad", t2), (this._renderer._doStroke || this._renderer._doFill) && (this._renderer.isP3D && t2.length !== 12 ? this._renderer.quad.call(this._renderer, t2[0], t2[1], 0, t2[2], t2[3], 0, t2[4], t2[5], 0, t2[6], t2[7], 0) : ((i2 = this._renderer).quad.apply(i2, t2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("quadrilateral", t2)));
        return this;
      }, h.default.prototype.rect = function() {
        return h.default._validateParameters("rect", arguments), this._renderRect.apply(this, arguments);
      }, h.default.prototype.square = function(e2, t2, r2, i2, n2, a, o2) {
        return h.default._validateParameters("square", arguments), this._renderRect.call(this, e2, t2, r2, r2, i2, n2, a, o2);
      }, h.default.prototype._renderRect = function() {
        if (this._renderer._doStroke || this._renderer._doFill) {
          arguments.length === 3 && (arguments[3] = arguments[2]);
          for (var e2 = c.default.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t2 = [e2.x, e2.y, e2.w, e2.h], r2 = 4; r2 < arguments.length; r2++)
            t2[r2] = arguments[r2];
          this._renderer.rect(t2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("rectangle", [e2.x, e2.y, e2.w, e2.h]);
        }
        return this;
      }, h.default.prototype.triangle = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return h.default._validateParameters("triangle", t2), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(t2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("triangle", t2), this;
      };
      var n = h.default;
      r.default = n;
    }, {"../constants": 26, "../friendly_errors/fes_core": 28, "../friendly_errors/file_errors": 29, "../friendly_errors/validate_params": 31, "../helpers": 32, "../main": 36}], 44: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../main")) && i.__esModule ? i : {default: i}, a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      n.default.prototype.ellipseMode = function(e2) {
        return n.default._validateParameters("ellipseMode", arguments), e2 !== a.CORNER && e2 !== a.CORNERS && e2 !== a.RADIUS && e2 !== a.CENTER || (this._renderer._ellipseMode = e2), this;
      }, n.default.prototype.noSmooth = function() {
        return this.setAttributes("antialias", false), this._renderer.isP3D || "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = false), this;
      }, n.default.prototype.rectMode = function(e2) {
        return n.default._validateParameters("rectMode", arguments), e2 !== a.CORNER && e2 !== a.CORNERS && e2 !== a.RADIUS && e2 !== a.CENTER || (this._renderer._rectMode = e2), this;
      }, n.default.prototype.smooth = function() {
        return this.setAttributes("antialias", true), this._renderer.isP3D || "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = true), this;
      }, n.default.prototype.strokeCap = function(e2) {
        return n.default._validateParameters("strokeCap", arguments), e2 !== a.ROUND && e2 !== a.SQUARE && e2 !== a.PROJECT || this._renderer.strokeCap(e2), this;
      }, n.default.prototype.strokeJoin = function(e2) {
        return n.default._validateParameters("strokeJoin", arguments), e2 !== a.ROUND && e2 !== a.BEVEL && e2 !== a.MITER || this._renderer.strokeJoin(e2), this;
      }, n.default.prototype.strokeWeight = function(e2) {
        return n.default._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e2), this;
      };
      var l = n.default;
      r.default = l;
    }, {"../constants": 26, "../main": 36}], 45: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, s = (i = e("../main")) && i.__esModule ? i : {default: i};
      e("../friendly_errors/fes_core"), e("../friendly_errors/file_errors"), e("../friendly_errors/validate_params"), s.default.prototype.bezier = function() {
        for (var e2, t2 = arguments.length, r2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r2[i2] = arguments[i2];
        return s.default._validateParameters("bezier", r2), (this._renderer._doStroke || this._renderer._doFill) && (e2 = this._renderer).bezier.apply(e2, r2), this;
      }, s.default.prototype.bezierDetail = function(e2) {
        return s.default._validateParameters("bezierDetail", arguments), this._bezierDetail = e2, this;
      }, s.default.prototype.bezierPoint = function(e2, t2, r2, i2, n2) {
        s.default._validateParameters("bezierPoint", arguments);
        var a = 1 - n2;
        return Math.pow(a, 3) * e2 + 3 * Math.pow(a, 2) * n2 * t2 + 3 * a * Math.pow(n2, 2) * r2 + Math.pow(n2, 3) * i2;
      }, s.default.prototype.bezierTangent = function(e2, t2, r2, i2, n2) {
        s.default._validateParameters("bezierTangent", arguments);
        var a = 1 - n2;
        return 3 * i2 * Math.pow(n2, 2) - 3 * r2 * Math.pow(n2, 2) + 6 * r2 * a * n2 - 6 * t2 * a * n2 + 3 * t2 * Math.pow(a, 2) - 3 * e2 * Math.pow(a, 2);
      }, s.default.prototype.curve = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2;
        s.default._validateParameters("curve", t2), this._renderer._doStroke && (i2 = this._renderer).curve.apply(i2, t2);
        return this;
      }, s.default.prototype.curveDetail = function(e2) {
        return s.default._validateParameters("curveDetail", arguments), this._curveDetail = e2 < 3 ? 3 : e2, this;
      }, s.default.prototype.curveTightness = function(e2) {
        return s.default._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e2, this;
      }, s.default.prototype.curvePoint = function(e2, t2, r2, i2, n2) {
        s.default._validateParameters("curvePoint", arguments);
        var a = n2 * n2 * n2, o = n2 * n2;
        return e2 * (-0.5 * a + o - 0.5 * n2) + t2 * (1.5 * a - 2.5 * o + 1) + r2 * (-1.5 * a + 2 * o + 0.5 * n2) + i2 * (0.5 * a - 0.5 * o);
      }, s.default.prototype.curveTangent = function(e2, t2, r2, i2, n2) {
        s.default._validateParameters("curveTangent", arguments);
        var a = n2 * n2;
        return e2 * (-3 * a / 2 + 2 * n2 - 0.5) + t2 * (9 * a / 2 - 5 * n2) + r2 * (-9 * a / 2 + 4 * n2 + 0.5) + i2 * (3 * a / 2 - n2);
      };
      var n = s.default;
      r.default = n;
    }, {"../friendly_errors/fes_core": 28, "../friendly_errors/file_errors": 29, "../friendly_errors/validate_params": 31, "../main": 36}], 46: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, s = (i = e("../main")) && i.__esModule ? i : {default: i}, l = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = u();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../constants"));
      function u() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return u = function() {
          return e2;
        }, e2;
      }
      var n = null, h = [], c = [], f = false, a = false, d = false, p = false, m = true;
      s.default.prototype.beginContour = function() {
        return c = [], p = true, this;
      }, s.default.prototype.beginShape = function(e2) {
        var t2;
        (s.default._validateParameters("beginShape", arguments), this._renderer.isP3D) ? (t2 = this._renderer).beginShape.apply(t2, arguments) : (n = e2 === l.POINTS || e2 === l.LINES || e2 === l.TRIANGLES || e2 === l.TRIANGLE_FAN || e2 === l.TRIANGLE_STRIP || e2 === l.QUADS || e2 === l.QUAD_STRIP ? e2 : null, h = [], c = []);
        return this;
      }, s.default.prototype.bezierVertex = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2;
        if (s.default._validateParameters("bezierVertex", t2), this._renderer.isP3D)
          (i2 = this._renderer).bezierVertex.apply(i2, t2);
        else if (h.length === 0)
          s.default._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex");
        else {
          f = true;
          for (var n2 = [], a2 = 0; a2 < t2.length; a2++)
            n2[a2] = t2[a2];
          n2.isVert = false, p ? c.push(n2) : h.push(n2);
        }
        return this;
      }, s.default.prototype.curveVertex = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2;
        (s.default._validateParameters("curveVertex", t2), this._renderer.isP3D) ? (i2 = this._renderer).curveVertex.apply(i2, t2) : (a = true, this.vertex(t2[0], t2[1]));
        return this;
      }, s.default.prototype.endContour = function() {
        var e2 = c[0].slice();
        e2.isVert = c[0].isVert, e2.moveTo = false, c.push(e2), m && (h.push(h[0]), m = false);
        for (var t2 = 0; t2 < c.length; t2++)
          h.push(c[t2]);
        return this;
      }, s.default.prototype.endShape = function(e2) {
        if (s.default._validateParameters("endShape", arguments), this._renderer.isP3D)
          this._renderer.endShape(e2, a, f, d, p, n);
        else {
          if (h.length === 0)
            return this;
          if (!this._renderer._doStroke && !this._renderer._doFill)
            return this;
          var t2 = e2 === l.CLOSE;
          t2 && !p && h.push(h[0]), this._renderer.endShape(e2, h, a, f, d, p, n), m = !(p = d = f = a = false), t2 && h.pop();
        }
        return this;
      }, s.default.prototype.quadraticVertex = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        if (s.default._validateParameters("quadraticVertex", t2), this._renderer.isP3D) {
          var i2;
          (i2 = this._renderer).quadraticVertex.apply(i2, t2);
        } else {
          if (this._contourInited) {
            var n2 = {};
            return n2.x = t2[0], n2.y = t2[1], n2.x3 = t2[2], n2.y3 = t2[3], n2.type = l.QUADRATIC, this._contourVertices.push(n2), this;
          }
          if (0 < h.length) {
            d = true;
            for (var a2 = [], o2 = 0; o2 < t2.length; o2++)
              a2[o2] = t2[o2];
            a2.isVert = false, p ? c.push(a2) : h.push(a2);
          } else
            s.default._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
        }
        return this;
      }, s.default.prototype.vertex = function(e2, t2, r2, i2, n2) {
        if (this._renderer.isP3D) {
          var a2;
          (a2 = this._renderer).vertex.apply(a2, arguments);
        } else {
          var o2 = [];
          o2.isVert = true, o2[0] = e2, o2[1] = t2, o2[2] = 0, o2[3] = 0, o2[4] = 0, o2[5] = this._renderer._getFill(), o2[6] = this._renderer._getStroke(), r2 && (o2.moveTo = r2), p ? (c.length === 0 && (o2.moveTo = true), c.push(o2)) : h.push(o2);
        }
        return this;
      };
      var v = s.default;
      r.default = v;
    }, {"../constants": 26, "../main": 36}], 47: [function(e, t, r) {
      function i(e2) {
        return (i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e2, t2) {
        window.setTimeout(e2, 1e3 / 60);
      }, typeof Uint8ClampedArray == "undefined" || Uint8ClampedArray.prototype.slice || Object.defineProperty(Uint8ClampedArray.prototype, "slice", {value: Array.prototype.slice, writable: true, configurable: true, enumerable: false}), function() {
        if (!Object.assign) {
          var s = Object.keys, e2 = Object.defineProperty, l = typeof Symbol == "function" && i(Symbol()) === "symbol", r2 = Object.prototype.propertyIsEnumerable, u = function(t2) {
            return function(e3) {
              return r2.call(t2, e3);
            };
          };
          e2(Object, "assign", {value: function(e3, t2) {
            if (e3 == null)
              throw new TypeError("target must be an object");
            var r3, i2, n, a, o = Object(e3);
            for (r3 = 1; r3 < arguments.length; ++r3)
              for (i2 = Object(arguments[r3]), a = s(i2), l && Object.getOwnPropertySymbols && a.push.apply(a, Object.getOwnPropertySymbols(i2).filter(u(i2))), n = 0; n < a.length; ++n)
                o[a[n]] = i2[a[n]];
            return o;
          }, configurable: true, enumerable: false, writable: true});
        }
      }();
    }, {}], 48: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("./main")) && i.__esModule ? i : {default: i};
      n.default.prototype.noLoop = function() {
        this._loop = false;
      }, n.default.prototype.loop = function() {
        this._loop || (this._loop = true, this._setupDone && this._draw());
      }, n.default.prototype.isLooping = function() {
        return this._loop;
      }, n.default.prototype.push = function() {
        this._styles.push({props: {_colorMode: this._colorMode}, renderer: this._renderer.push()});
      }, n.default.prototype.pop = function() {
        var e2 = this._styles.pop();
        e2 ? (this._renderer.pop(e2.renderer), Object.assign(this, e2.props)) : console.warn("pop() was called without matching push()");
      }, n.default.prototype.redraw = function(e2) {
        if (!this._inUserDraw && this._setupDone) {
          var t2 = parseInt(e2);
          (isNaN(t2) || t2 < 1) && (t2 = 1);
          var r2 = this._isGlobal ? window : this;
          if (typeof r2.draw == "function") {
            r2.setup === void 0 && r2.scale(r2._pixelDensity, r2._pixelDensity);
            for (var i2 = function(e3) {
              e3.call(r2);
            }, n2 = 0; n2 < t2; n2++) {
              r2.resetMatrix(), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._updateAccsOutput(), r2._renderer.isP3D && r2._renderer._update(), r2._setProperty("frameCount", r2.frameCount + 1), r2._registeredMethods.pre.forEach(i2), this._inUserDraw = true;
              try {
                r2.draw();
              } finally {
                this._inUserDraw = false;
              }
              r2._registeredMethods.post.forEach(i2);
            }
          }
        }
      };
      var a = n.default;
      r.default = a;
    }, {"./main": 36}], 49: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, a = (i = e("./main")) && i.__esModule ? i : {default: i};
      a.default.prototype.applyMatrix = function(e2, t2, r2, i2, n2, a2) {
        var o;
        return (o = this._renderer).applyMatrix.apply(o, arguments), this;
      }, a.default.prototype.resetMatrix = function() {
        return this._renderer.resetMatrix(), this;
      }, a.default.prototype.rotate = function(e2, t2) {
        return a.default._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e2), t2), this;
      }, a.default.prototype.rotateX = function(e2) {
        return this._assert3d("rotateX"), a.default._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e2)), this;
      }, a.default.prototype.rotateY = function(e2) {
        return this._assert3d("rotateY"), a.default._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e2)), this;
      }, a.default.prototype.rotateZ = function(e2) {
        return this._assert3d("rotateZ"), a.default._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e2)), this;
      }, a.default.prototype.scale = function(e2, t2, r2) {
        if (a.default._validateParameters("scale", arguments), e2 instanceof a.default.Vector) {
          var i2 = e2;
          e2 = i2.x, t2 = i2.y, r2 = i2.z;
        } else if (e2 instanceof Array) {
          var n2 = e2;
          e2 = n2[0], t2 = n2[1], r2 = n2[2] || 1;
        }
        return isNaN(t2) ? t2 = r2 = e2 : isNaN(r2) && (r2 = 1), this._renderer.scale.call(this._renderer, e2, t2, r2), this;
      }, a.default.prototype.shearX = function(e2) {
        a.default._validateParameters("shearX", arguments);
        var t2 = this._toRadians(e2);
        return this._renderer.applyMatrix(1, 0, Math.tan(t2), 1, 0, 0), this;
      }, a.default.prototype.shearY = function(e2) {
        a.default._validateParameters("shearY", arguments);
        var t2 = this._toRadians(e2);
        return this._renderer.applyMatrix(1, Math.tan(t2), 0, 1, 0, 0), this;
      }, a.default.prototype.translate = function(e2, t2, r2) {
        return a.default._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e2, t2, r2) : this._renderer.translate(e2, t2), this;
      };
      var n = a.default;
      r.default = n;
    }, {"./main": 36}], 50: [function(e, t, r) {
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function a(e2) {
        return function(e3) {
          if (Array.isArray(e3)) {
            for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++)
              r2[t2] = e3[t2];
            return r2;
          }
        }(e2) || function(e3) {
          if (Symbol.iterator in Object(e3) || Object.prototype.toString.call(e3) === "[object Arguments]")
            return Array.from(e3);
        }(e2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      n.default.prototype.storeItem = function(e2, t2) {
        typeof e2 != "string" && console.log("The argument that you passed to storeItem() - ".concat(e2, " is not a string.")), e2.endsWith("p5TypeID") && console.log("The argument that you passed to storeItem() - ".concat(e2, " must not end with 'p5TypeID'.")), t2 === void 0 && console.log("You cannot store undefined variables using storeItem().");
        var r2 = o(t2);
        switch (r2) {
          case "number":
          case "boolean":
            t2 = t2.toString();
            break;
          case "object":
            if (t2 instanceof n.default.Color)
              r2 = "p5.Color";
            else if (t2 instanceof n.default.Vector) {
              r2 = "p5.Vector", t2 = [t2.x, t2.y, t2.z];
            }
            t2 = JSON.stringify(t2);
        }
        localStorage.setItem(e2, t2);
        var i2 = "".concat(e2, "p5TypeID");
        localStorage.setItem(i2, r2);
      }, n.default.prototype.getItem = function(e2) {
        var t2 = localStorage.getItem(e2), r2 = localStorage.getItem("".concat(e2, "p5TypeID"));
        if (r2 === void 0)
          console.log("Unable to determine type of item stored under ".concat(e2, "in local storage. Did you save the item with something other than setItem()?"));
        else if (t2 !== null)
          switch (r2) {
            case "number":
              t2 = parseFloat(t2);
              break;
            case "boolean":
              t2 = t2 === "true";
              break;
            case "object":
              t2 = JSON.parse(t2);
              break;
            case "p5.Color":
              t2 = JSON.parse(t2), t2 = this.color.apply(this, a(t2.levels));
              break;
            case "p5.Vector":
              t2 = JSON.parse(t2), t2 = this.createVector.apply(this, a(t2));
          }
        return t2;
      }, n.default.prototype.clearStorage = function() {
        localStorage.clear();
      }, n.default.prototype.removeItem = function(e2) {
        typeof e2 != "string" && console.log("The argument that you passed to removeItem() - ".concat(e2, " is not a string.")), localStorage.removeItem(e2), localStorage.removeItem("".concat(e2, "p5TypeID"));
      };
    }, {"../core/main": 36}], 51: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype.createStringDict = function(e2, t2) {
        return n.default._validateParameters("createStringDict", arguments), new n.default.StringDict(e2, t2);
      }, n.default.prototype.createNumberDict = function(e2, t2) {
        return n.default._validateParameters("createNumberDict", arguments), new n.default.NumberDict(e2, t2);
      }, n.default.TypedDict = function(e2, t2) {
        return e2 instanceof Object ? this.data = e2 : (this.data = {}, this.data[e2] = t2), this;
      }, n.default.TypedDict.prototype.size = function() {
        return Object.keys(this.data).length;
      }, n.default.TypedDict.prototype.hasKey = function(e2) {
        return this.data.hasOwnProperty(e2);
      }, n.default.TypedDict.prototype.get = function(e2) {
        if (this.data.hasOwnProperty(e2))
          return this.data[e2];
        console.log("".concat(e2, " does not exist in this Dictionary"));
      }, n.default.TypedDict.prototype.set = function(e2, t2) {
        this._validate(t2) ? this.data[e2] = t2 : console.log("Those values dont work for this dictionary type.");
      }, n.default.TypedDict.prototype._addObj = function(e2) {
        for (var t2 in e2)
          this.set(t2, e2[t2]);
      }, n.default.TypedDict.prototype.create = function(e2, t2) {
        e2 instanceof Object && t2 === void 0 ? this._addObj(e2) : e2 !== void 0 ? this.set(e2, t2) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
      }, n.default.TypedDict.prototype.clear = function() {
        this.data = {};
      }, n.default.TypedDict.prototype.remove = function(e2) {
        if (!this.data.hasOwnProperty(e2))
          throw new Error("".concat(e2, " does not exist in this Dictionary"));
        delete this.data[e2];
      }, n.default.TypedDict.prototype.print = function() {
        for (var e2 in this.data)
          console.log("key:".concat(e2, " value:").concat(this.data[e2]));
      }, n.default.TypedDict.prototype.saveTable = function(e2) {
        var t2 = "";
        for (var r2 in this.data)
          t2 += "".concat(r2, ",").concat(this.data[r2], "\n");
        var i2 = new Blob([t2], {type: "text/csv"});
        n.default.prototype.downloadFile(i2, e2 || "mycsv", "csv");
      }, n.default.TypedDict.prototype.saveJSON = function(e2, t2) {
        n.default.prototype.saveJSON(this.data, e2, t2);
      }, n.default.TypedDict.prototype._validate = function(e2) {
        return true;
      }, n.default.StringDict = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        n.default.TypedDict.apply(this, t2);
      }, n.default.StringDict.prototype = Object.create(n.default.TypedDict.prototype), n.default.StringDict.prototype._validate = function(e2) {
        return typeof e2 == "string";
      }, n.default.NumberDict = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        n.default.TypedDict.apply(this, t2);
      }, n.default.NumberDict.prototype = Object.create(n.default.TypedDict.prototype), n.default.NumberDict.prototype._validate = function(e2) {
        return typeof e2 == "number";
      }, n.default.NumberDict.prototype.add = function(e2, t2) {
        this.data.hasOwnProperty(e2) ? this.data[e2] += t2 : console.log("The key - ".concat(e2, " does not exist in this dictionary."));
      }, n.default.NumberDict.prototype.sub = function(e2, t2) {
        this.add(e2, -t2);
      }, n.default.NumberDict.prototype.mult = function(e2, t2) {
        this.data.hasOwnProperty(e2) ? this.data[e2] *= t2 : console.log("The key - ".concat(e2, " does not exist in this dictionary."));
      }, n.default.NumberDict.prototype.div = function(e2, t2) {
        this.data.hasOwnProperty(e2) ? this.data[e2] /= t2 : console.log("The key - ".concat(e2, " does not exist in this dictionary."));
      }, n.default.NumberDict.prototype._valueTest = function(e2) {
        if (Object.keys(this.data).length === 0)
          throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
        if (Object.keys(this.data).length === 1)
          return this.data[Object.keys(this.data)[0]];
        var t2 = this.data[Object.keys(this.data)[0]];
        for (var r2 in this.data)
          this.data[r2] * e2 < t2 * e2 && (t2 = this.data[r2]);
        return t2;
      }, n.default.NumberDict.prototype.minValue = function() {
        return this._valueTest(1);
      }, n.default.NumberDict.prototype.maxValue = function() {
        return this._valueTest(-1);
      }, n.default.NumberDict.prototype._keyTest = function(e2) {
        if (Object.keys(this.data).length === 0)
          throw new Error("Unable to use minValue on an empty NumberDict");
        if (Object.keys(this.data).length === 1)
          return Object.keys(this.data)[0];
        for (var t2 = Object.keys(this.data)[0], r2 = 1; r2 < Object.keys(this.data).length; r2++)
          Object.keys(this.data)[r2] * e2 < t2 * e2 && (t2 = Object.keys(this.data)[r2]);
        return t2;
      }, n.default.NumberDict.prototype.minKey = function() {
        return this._keyTest(1);
      }, n.default.NumberDict.prototype.maxKey = function() {
        return this._keyTest(-1);
      };
      var a = n.default.TypedDict;
      r.default = a;
    }, {"../core/main": 36}], 52: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, f = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function d(e2) {
        return (d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      function m(e2, t2, r2) {
        (t2._userNode ? t2._userNode : document.body).appendChild(e2);
        var i2 = r2 ? new f.default.MediaElement(e2, t2) : new f.default.Element(e2, t2);
        return t2._elements.push(i2), i2;
      }
      function n(e2, t2, r2, i2) {
        var n2 = document.createElement(t2);
        typeof (r2 = r2 || "") == "string" && (r2 = [r2]);
        var a2 = true, o2 = false, s = void 0;
        try {
          for (var l, u = r2[Symbol.iterator](); !(a2 = (l = u.next()).done); a2 = true) {
            var h = l.value, c = document.createElement("source");
            c.setAttribute("src", h), n2.appendChild(c);
          }
        } catch (e3) {
          o2 = true, s = e3;
        } finally {
          try {
            a2 || u.return == null || u.return();
          } finally {
            if (o2)
              throw s;
          }
        }
        if (typeof i2 == "function") {
          n2.addEventListener("canplaythrough", function e3() {
            i2(), n2.removeEventListener("canplaythrough", e3);
          });
        }
        var f2 = m(n2, e2, true);
        return f2.loadedmetadata = false, n2.addEventListener("loadedmetadata", function() {
          f2.width = n2.videoWidth, f2.height = n2.videoHeight, f2.elt.width === 0 && (f2.elt.width = n2.videoWidth), f2.elt.height === 0 && (f2.elt.height = n2.videoHeight), f2.presetPlaybackRate && (f2.elt.playbackRate = f2.presetPlaybackRate, delete f2.presetPlaybackRate), f2.loadedmetadata = true;
        }), f2;
      }
      f.default.prototype.select = function(e2, t2) {
        f.default._validateParameters("select", arguments);
        var r2 = this._getContainer(t2).querySelector(e2);
        return r2 ? this._wrapElement(r2) : null;
      }, f.default.prototype.selectAll = function(e2, t2) {
        f.default._validateParameters("selectAll", arguments);
        var r2 = [], i2 = this._getContainer(t2).querySelectorAll(e2);
        if (i2)
          for (var n2 = 0; n2 < i2.length; n2++) {
            var a2 = this._wrapElement(i2[n2]);
            r2.push(a2);
          }
        return r2;
      }, f.default.prototype._getContainer = function(e2) {
        var t2 = document;
        return typeof e2 == "string" ? t2 = document.querySelector(e2) || document : e2 instanceof f.default.Element ? t2 = e2.elt : e2 instanceof HTMLElement && (t2 = e2), t2;
      }, f.default.prototype._wrapElement = function(e2) {
        var t2 = Array.prototype.slice.call(e2.children);
        if (e2.tagName !== "INPUT" || e2.type !== "checkbox")
          return e2.tagName === "VIDEO" || e2.tagName === "AUDIO" ? new f.default.MediaElement(e2, this) : e2.tagName === "SELECT" ? this.createSelect(new f.default.Element(e2, this)) : 0 < t2.length && t2.every(function(e3) {
            return e3.tagName === "INPUT" || e3.tagName === "LABEL";
          }) ? this.createRadio(new f.default.Element(e2, this)) : new f.default.Element(e2, this);
        var r2 = new f.default.Element(e2, this);
        return r2.checked = function() {
          return arguments.length === 0 ? this.elt.checked : (this.elt.checked = !!arguments[0], this);
        }, r2;
      }, f.default.prototype.removeElements = function(e2) {
        f.default._validateParameters("removeElements", arguments);
        this._elements.filter(function(e3) {
          return !(e3.elt instanceof HTMLCanvasElement);
        }).map(function(e3) {
          return e3.remove();
        });
      }, f.default.Element.prototype.changed = function(e2) {
        return f.default.Element._adjustListener("change", e2, this), this;
      }, f.default.Element.prototype.input = function(e2) {
        return f.default.Element._adjustListener("input", e2, this), this;
      }, f.default.prototype.createDiv = function() {
        var e2 = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : "", t2 = document.createElement("div");
        return t2.innerHTML = e2, m(t2, this);
      }, f.default.prototype.createP = function() {
        var e2 = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : "", t2 = document.createElement("p");
        return t2.innerHTML = e2, m(t2, this);
      }, f.default.prototype.createSpan = function() {
        var e2 = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : "", t2 = document.createElement("span");
        return t2.innerHTML = e2, m(t2, this);
      }, f.default.prototype.createImg = function() {
        f.default._validateParameters("createImg", arguments);
        var t2, r2 = document.createElement("img"), i2 = arguments;
        return 1 < i2.length && typeof i2[1] == "string" && (r2.alt = i2[1]), 2 < i2.length && typeof i2[2] == "string" && (r2.crossOrigin = i2[2]), r2.src = i2[0], t2 = m(r2, this), r2.addEventListener("load", function() {
          t2.width = r2.offsetWidth || r2.width, t2.height = r2.offsetHeight || r2.height;
          var e2 = i2[i2.length - 1];
          typeof e2 == "function" && e2(t2);
        }), t2;
      }, f.default.prototype.createA = function(e2, t2, r2) {
        f.default._validateParameters("createA", arguments);
        var i2 = document.createElement("a");
        return i2.href = e2, i2.innerHTML = t2, r2 && (i2.target = r2), m(i2, this);
      }, f.default.prototype.createSlider = function(e2, t2, r2, i2) {
        f.default._validateParameters("createSlider", arguments);
        var n2 = document.createElement("input");
        return n2.type = "range", n2.min = e2, n2.max = t2, i2 === 0 ? n2.step = 1e-18 : i2 && (n2.step = i2), typeof r2 == "number" && (n2.value = r2), m(n2, this);
      }, f.default.prototype.createButton = function(e2, t2) {
        f.default._validateParameters("createButton", arguments);
        var r2 = document.createElement("button");
        return r2.innerHTML = e2, t2 && (r2.value = t2), m(r2, this);
      }, f.default.prototype.createCheckbox = function() {
        f.default._validateParameters("createCheckbox", arguments);
        var e2 = document.createElement("div"), t2 = document.createElement("input");
        t2.type = "checkbox", e2.appendChild(t2);
        var r2 = m(e2, this);
        if (r2.checked = function() {
          var e3 = r2.elt.getElementsByTagName("input")[0];
          if (e3) {
            if (arguments.length === 0)
              return e3.checked;
            e3.checked = !!arguments[0];
          }
          return r2;
        }, this.value = function(e3) {
          return r2.value = e3, this;
        }, arguments[0]) {
          var i2 = Math.random().toString(36).slice(2), n2 = document.createElement("label");
          t2.setAttribute("id", i2), n2.htmlFor = i2, r2.value(arguments[0]), n2.appendChild(document.createTextNode(arguments[0])), e2.appendChild(n2);
        }
        return arguments[1] && (t2.checked = true), r2;
      }, f.default.prototype.createSelect = function() {
        var e2;
        f.default._validateParameters("createSelect", arguments);
        var t2 = arguments[0];
        if (t2 instanceof f.default.Element && t2.elt instanceof HTMLSelectElement)
          e2 = t2, this.elt = t2.elt;
        else if (t2 instanceof HTMLSelectElement)
          e2 = m(t2, this), this.elt = t2;
        else {
          var r2 = document.createElement("select");
          t2 && typeof t2 == "boolean" && r2.setAttribute("multiple", "true"), e2 = m(r2, this), this.elt = r2;
        }
        return e2.option = function(e3, t3) {
          var r3;
          if (e3 !== void 0) {
            for (var i2 = 0; i2 < this.elt.length; i2 += 1)
              if (this.elt[i2].innerHTML === e3) {
                r3 = i2;
                break;
              }
            if (r3 !== void 0)
              t3 === false ? this.elt.remove(r3) : this.elt[r3].value = t3;
            else {
              var n2 = document.createElement("option");
              n2.innerHTML = e3, n2.value = t3 === void 0 ? e3 : t3, this.elt.appendChild(n2), this._pInst._elements.push(n2);
            }
          }
        }, e2.selected = function(e3) {
          if (e3 !== void 0) {
            for (var t3 = 0; t3 < this.elt.length; t3 += 1)
              this.elt[t3].value.toString() === e3.toString() && (this.elt.selectedIndex = t3);
            return this;
          }
          if (this.elt.getAttribute("multiple")) {
            var r3 = [], i2 = true, n2 = false, a2 = void 0;
            try {
              for (var o2, s = this.elt.selectedOptions[Symbol.iterator](); !(i2 = (o2 = s.next()).done); i2 = true) {
                var l = o2.value;
                r3.push(l.value);
              }
            } catch (e4) {
              n2 = true, a2 = e4;
            } finally {
              try {
                i2 || s.return == null || s.return();
              } finally {
                if (n2)
                  throw a2;
              }
            }
            return r3;
          }
          return this.elt.value;
        }, e2.disable = function(e3) {
          if (typeof e3 == "string")
            for (var t3 = 0; t3 < this.elt.length; t3++)
              this.elt[t3].value.toString() === e3 && (this.elt[t3].disabled = true, this.elt[t3].selected = false);
          else
            this.elt.disabled = true;
          return this;
        }, e2;
      }, f.default.prototype.createRadio = function() {
        var e2, t2, r2 = arguments[0];
        r2 instanceof HTMLDivElement || r2 instanceof HTMLSpanElement ? (e2 = r2, typeof arguments[1] == "string" && (t2 = arguments[1])) : (typeof r2 == "string" && (t2 = r2), e2 = document.createElement("div"));
        var p = m(this.elt = e2, this);
        p._name = t2 || "radioOption";
        function i2(e3) {
          return e3 instanceof HTMLInputElement && e3.type === "radio";
        }
        function h(e3) {
          return e3.nextElementSibling instanceof HTMLLabelElement;
        }
        return p._getOptionsArray = function() {
          return Array.from(this.elt.children).filter(i2);
        }, p.option = function(e3, t3) {
          var r3, i3, n2 = true, a2 = false, o2 = void 0;
          try {
            for (var s, l = p._getOptionsArray()[Symbol.iterator](); !(n2 = (s = l.next()).done); n2 = true) {
              var u = s.value;
              if (u.value === e3) {
                r3 = u;
                break;
              }
            }
          } catch (e4) {
            a2 = true, o2 = e4;
          } finally {
            try {
              n2 || l.return == null || l.return();
            } finally {
              if (a2)
                throw o2;
            }
          }
          return r3 === void 0 && ((r3 = document.createElement("input")).setAttribute("type", "radio"), r3.setAttribute("value", e3), this.elt.appendChild(r3)), h(r3) ? i3 = r3.nextElementSibling : (i3 = document.createElement("label"), r3.insertAdjacentElement("afterend", i3)), i3.innerHTML = t3 === void 0 ? e3 : t3, r3.setAttribute("name", p._name), r3;
        }, p.remove = function(e3) {
          var t3 = true, r3 = false, i3 = void 0;
          try {
            for (var n2, a2 = p._getOptionsArray()[Symbol.iterator](); !(t3 = (n2 = a2.next()).done); t3 = true) {
              var o2 = n2.value;
              if (o2.value === e3)
                return h(o2) && o2.nextElementSibling.remove(), void o2.remove();
            }
          } catch (e4) {
            r3 = true, i3 = e4;
          } finally {
            try {
              t3 || a2.return == null || a2.return();
            } finally {
              if (r3)
                throw i3;
            }
          }
        }, p.value = function() {
          var e3 = "", t3 = true, r3 = false, i3 = void 0;
          try {
            for (var n2, a2 = p._getOptionsArray()[Symbol.iterator](); !(t3 = (n2 = a2.next()).done); t3 = true) {
              var o2 = n2.value;
              if (o2.checked) {
                e3 = o2.value;
                break;
              }
            }
          } catch (e4) {
            r3 = true, i3 = e4;
          } finally {
            try {
              t3 || a2.return == null || a2.return();
            } finally {
              if (r3)
                throw i3;
            }
          }
          return e3;
        }, p.selected = function(e3) {
          var t3 = null;
          if (e3 === void 0) {
            var r3 = true, i3 = false, n2 = void 0;
            try {
              for (var a2, o2 = p._getOptionsArray()[Symbol.iterator](); !(r3 = (a2 = o2.next()).done); r3 = true) {
                var s = a2.value;
                if (s.checked) {
                  t3 = s;
                  break;
                }
              }
            } catch (e4) {
              i3 = true, n2 = e4;
            } finally {
              try {
                r3 || o2.return == null || o2.return();
              } finally {
                if (i3)
                  throw n2;
              }
            }
          } else {
            var l = true, u = false, h2 = void 0;
            try {
              for (var c, f2 = p._getOptionsArray()[Symbol.iterator](); !(l = (c = f2.next()).done); l = true) {
                var d2 = c.value;
                d2.value === e3 && (d2.setAttribute("checked", true), t3 = d2);
              }
            } catch (e4) {
              u = true, h2 = e4;
            } finally {
              try {
                l || f2.return == null || f2.return();
              } finally {
                if (u)
                  throw h2;
              }
            }
          }
          return t3;
        }, p.disable = function() {
          var e3 = !(0 < arguments.length && arguments[0] !== void 0) || arguments[0], t3 = true, r3 = false, i3 = void 0;
          try {
            for (var n2, a2 = p._getOptionsArray()[Symbol.iterator](); !(t3 = (n2 = a2.next()).done); t3 = true) {
              n2.value.setAttribute("disabled", e3);
            }
          } catch (e4) {
            r3 = true, i3 = e4;
          } finally {
            try {
              t3 || a2.return == null || a2.return();
            } finally {
              if (r3)
                throw i3;
            }
          }
        }, p;
      }, f.default.prototype.createColorPicker = function(e2) {
        f.default._validateParameters("createColorPicker", arguments);
        var t2, r2 = document.createElement("input");
        return r2.type = "color", e2 ? e2 instanceof f.default.Color ? r2.value = e2.toString("#rrggbb") : (f.default.prototype._colorMode = "rgb", f.default.prototype._colorMaxes = {rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1]}, r2.value = f.default.prototype.color(e2).toString("#rrggbb")) : r2.value = "#000000", (t2 = m(r2, this)).color = function() {
          return e2 && (e2.mode && (f.default.prototype._colorMode = e2.mode), e2.maxes && (f.default.prototype._colorMaxes = e2.maxes)), f.default.prototype.color(this.elt.value);
        }, t2;
      }, f.default.prototype.createInput = function() {
        var e2 = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : "", t2 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : "text";
        f.default._validateParameters("createInput", arguments);
        var r2 = document.createElement("input");
        return r2.setAttribute("value", e2), r2.setAttribute("type", t2), m(r2, this);
      }, f.default.prototype.createFileInput = function(s) {
        var e2 = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
        f.default._validateParameters("createFileInput", arguments);
        if (window.File && window.FileReader && window.FileList && window.Blob) {
          var t2 = document.createElement("input");
          return t2.setAttribute("type", "file"), e2 && t2.setAttribute("multiple", true), t2.addEventListener("change", function(e3) {
            var t3 = true, r2 = false, i2 = void 0;
            try {
              for (var n2, a2 = e3.target.files[Symbol.iterator](); !(t3 = (n2 = a2.next()).done); t3 = true) {
                var o2 = n2.value;
                f.default.File._load(o2, s);
              }
            } catch (e4) {
              r2 = true, i2 = e4;
            } finally {
              try {
                t3 || a2.return == null || a2.return();
              } finally {
                if (r2)
                  throw i2;
              }
            }
          }, false), m(t2, this);
        }
        console.log("The File APIs are not fully supported in this browser. Cannot create element.");
      }, f.default.prototype.createVideo = function(e2, t2) {
        return f.default._validateParameters("createVideo", arguments), n(this, "video", e2, t2);
      }, f.default.prototype.createAudio = function(e2, t2) {
        return f.default._validateParameters("createAudio", arguments), n(this, "audio", e2, t2);
      }, f.default.prototype.VIDEO = "video", f.default.prototype.AUDIO = "audio", navigator.mediaDevices === void 0 && (navigator.mediaDevices = {}), navigator.mediaDevices.getUserMedia === void 0 && (navigator.mediaDevices.getUserMedia = function(r2) {
        var i2 = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        return i2 ? new Promise(function(e2, t2) {
          i2.call(navigator, r2, e2, t2);
        }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"));
      }), f.default.prototype.createCapture = function() {
        if (f.default._validateParameters("createCapture", arguments), !navigator.mediaDevices || !navigator.mediaDevices.getUserMedia)
          throw new DOMException("getUserMedia not supported in this browser");
        var e2, t2, r2 = true, i2 = true, n2 = true, a2 = false, o2 = void 0;
        try {
          for (var s, l = arguments[Symbol.iterator](); !(n2 = (s = l.next()).done); n2 = true) {
            var u = s.value;
            u === f.default.prototype.VIDEO ? i2 = false : u === f.default.prototype.AUDIO ? r2 = false : d(u) === "object" ? e2 = u : typeof u == "function" && (t2 = u);
          }
        } catch (e3) {
          a2 = true, o2 = e3;
        } finally {
          try {
            n2 || l.return == null || l.return();
          } finally {
            if (a2)
              throw o2;
          }
        }
        e2 = e2 || {video: r2, audio: i2};
        var h = document.createElement("video");
        h.setAttribute("playsinline", ""), navigator.mediaDevices.getUserMedia(e2).then(function(t3) {
          try {
            "srcObject" in h ? h.srcObject = t3 : h.src = window.URL.createObjectURL(t3);
          } catch (e3) {
            h.src = t3;
          }
        }, console.log);
        var c = m(h, this, true);
        return c.loadedmetadata = false, h.addEventListener("loadedmetadata", function() {
          h.play(), h.width ? (c.width = h.width, c.height = h.height) : (c.width = c.elt.width = h.videoWidth, c.height = c.elt.height = h.videoHeight), c.loadedmetadata = true, t2 && t2(h.srcObject);
        }), c;
      }, f.default.prototype.createElement = function(e2, t2) {
        f.default._validateParameters("createElement", arguments);
        var r2 = document.createElement(e2);
        return t2 !== void 0 && (r2.innerHTML = t2), m(r2, this);
      }, f.default.Element.prototype.addClass = function(e2) {
        return this.elt.className ? this.hasClass(e2) || (this.elt.className = this.elt.className + " " + e2) : this.elt.className = e2, this;
      }, f.default.Element.prototype.removeClass = function(e2) {
        return this.elt.classList.remove(e2), this;
      }, f.default.Element.prototype.hasClass = function(e2) {
        return this.elt.classList.contains(e2);
      }, f.default.Element.prototype.toggleClass = function(e2) {
        return this.elt.classList.contains(e2) ? this.elt.classList.remove(e2) : this.elt.classList.add(e2), this;
      }, f.default.Element.prototype.child = function(e2) {
        return e2 === void 0 ? this.elt.childNodes : (typeof e2 == "string" ? (e2[0] === "#" && (e2 = e2.substring(1)), e2 = document.getElementById(e2)) : e2 instanceof f.default.Element && (e2 = e2.elt), e2 instanceof HTMLElement && this.elt.appendChild(e2), this);
      }, f.default.Element.prototype.center = function(e2) {
        var t2 = this.elt.style.display, r2 = this.elt.style.display === "none", i2 = this.parent().style.display === "none", n2 = {x: this.elt.offsetLeft, y: this.elt.offsetTop};
        r2 && this.show(), i2 && this.parent().show(), this.elt.style.display = "block", this.position(0, 0);
        var a2 = Math.abs(this.parent().offsetWidth - this.elt.offsetWidth), o2 = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);
        return e2 === "both" || e2 === void 0 ? this.position(a2 / 2 + this.parent().offsetLeft, o2 / 2 + this.parent().offsetTop) : e2 === "horizontal" ? this.position(a2 / 2 + this.parent().offsetLeft, n2.y) : e2 === "vertical" && this.position(n2.x, o2 / 2 + this.parent().offsetTop), this.style("display", t2), r2 && this.hide(), i2 && this.parent().hide(), this;
      }, f.default.Element.prototype.html = function() {
        return arguments.length === 0 ? this.elt.innerHTML : (arguments[1] ? this.elt.insertAdjacentHTML("beforeend", arguments[0]) : this.elt.innerHTML = arguments[0], this);
      }, f.default.Element.prototype.position = function() {
        if (arguments.length === 0)
          return {x: this.elt.offsetLeft, y: this.elt.offsetTop};
        var e2 = "absolute";
        return arguments[2] !== "static" && arguments[2] !== "fixed" && arguments[2] !== "relative" && arguments[2] !== "sticky" && arguments[2] !== "initial" && arguments[2] !== "inherit" || (e2 = arguments[2]), this.elt.style.position = e2, this.elt.style.left = arguments[0] + "px", this.elt.style.top = arguments[1] + "px", this.x = arguments[0], this.y = arguments[1], this;
      }, f.default.Element.prototype._translate = function() {
        this.elt.style.position = "absolute";
        var e2 = "";
        return this.elt.style.transform && (e2 = (e2 = this.elt.style.transform.replace(/translate3d\(.*\)/g, "")).replace(/translate[X-Z]?\(.*\)/g, "")), arguments.length === 2 ? this.elt.style.transform = "translate(" + arguments[0] + "px, " + arguments[1] + "px)" : 2 < arguments.length && (this.elt.style.transform = "translate3d(" + arguments[0] + "px," + arguments[1] + "px," + arguments[2] + "px)", this.elt.parentElement.style.perspective = arguments.length === 3 ? "1000px" : arguments[3] + "px"), this.elt.style.transform += e2, this;
      }, f.default.Element.prototype._rotate = function() {
        var e2 = "";
        return this.elt.style.transform && (e2 = (e2 = this.elt.style.transform.replace(/rotate3d\(.*\)/g, "")).replace(/rotate[X-Z]?\(.*\)/g, "")), arguments.length === 1 ? this.elt.style.transform = "rotate(" + arguments[0] + "deg)" : arguments.length === 2 ? this.elt.style.transform = "rotate(" + arguments[0] + "deg, " + arguments[1] + "deg)" : arguments.length === 3 && (this.elt.style.transform = "rotateX(" + arguments[0] + "deg)", this.elt.style.transform += "rotateY(" + arguments[1] + "deg)", this.elt.style.transform += "rotateZ(" + arguments[2] + "deg)"), this.elt.style.transform += e2, this;
      }, f.default.Element.prototype.style = function(e2, t2) {
        if (t2 instanceof f.default.Color && (t2 = "rgba(" + t2.levels[0] + "," + t2.levels[1] + "," + t2.levels[2] + "," + t2.levels[3] / 255 + ")"), t2 === void 0) {
          if (e2.indexOf(":") === -1)
            return window.getComputedStyle(this.elt).getPropertyValue(e2);
          for (var r2 = e2.split(";"), i2 = 0; i2 < r2.length; i2++) {
            var n2 = r2[i2].split(":");
            n2[0] && n2[1] && (this.elt.style[n2[0].trim()] = n2[1].trim());
          }
        } else if (this.elt.style[e2] = t2, e2 === "width" || e2 === "height" || e2 === "left" || e2 === "top") {
          var a2 = window.getComputedStyle(this.elt).getPropertyValue(e2).replace(/\D+/g, "");
          this[e2] = parseInt(a2, 10);
        }
        return this;
      }, f.default.Element.prototype.attribute = function(e2, t2) {
        if (this.elt.firstChild == null || this.elt.firstChild.type !== "checkbox" && this.elt.firstChild.type !== "radio")
          return t2 === void 0 ? this.elt.getAttribute(e2) : (this.elt.setAttribute(e2, t2), this);
        if (t2 === void 0)
          return this.elt.firstChild.getAttribute(e2);
        for (var r2 = 0; r2 < this.elt.childNodes.length; r2++)
          this.elt.childNodes[r2].setAttribute(e2, t2);
      }, f.default.Element.prototype.removeAttribute = function(e2) {
        if (this.elt.firstChild != null && (this.elt.firstChild.type === "checkbox" || this.elt.firstChild.type === "radio"))
          for (var t2 = 0; t2 < this.elt.childNodes.length; t2++)
            this.elt.childNodes[t2].removeAttribute(e2);
        return this.elt.removeAttribute(e2), this;
      }, f.default.Element.prototype.value = function() {
        return 0 < arguments.length ? (this.elt.value = arguments[0], this) : this.elt.type === "range" ? parseFloat(this.elt.value) : this.elt.value;
      }, f.default.Element.prototype.show = function() {
        return this.elt.style.display = "block", this;
      }, f.default.Element.prototype.hide = function() {
        return this.elt.style.display = "none", this;
      }, f.default.Element.prototype.size = function(e2, t2) {
        if (arguments.length === 0)
          return {width: this.elt.offsetWidth, height: this.elt.offsetHeight};
        var r2 = e2, i2 = t2, n2 = f.default.prototype.AUTO;
        if (r2 !== n2 || i2 !== n2) {
          if (r2 === n2 ? r2 = t2 * this.width / this.height : i2 === n2 && (i2 = e2 * this.height / this.width), this.elt instanceof HTMLCanvasElement) {
            var a2, o2 = {}, s = this.elt.getContext("2d");
            for (a2 in s)
              o2[a2] = s[a2];
            for (a2 in this.elt.setAttribute("width", r2 * this._pInst._pixelDensity), this.elt.setAttribute("height", i2 * this._pInst._pixelDensity), this.elt.style.width = r2 + "px", this.elt.style.height = i2 + "px", this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), o2)
              this.elt.getContext("2d")[a2] = o2[a2];
          } else
            this.elt.style.width = r2 + "px", this.elt.style.height = i2 + "px", this.elt.width = r2, this.elt.height = i2;
          this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this._pInst && this._pInst._curElement && this._pInst._curElement.elt === this.elt && (this._pInst._setProperty("width", this.elt.offsetWidth), this._pInst._setProperty("height", this.elt.offsetHeight));
        }
        return this;
      }, f.default.Element.prototype.remove = function() {
        if (this instanceof f.default.MediaElement) {
          this.stop();
          var e2 = this.elt.srcObject;
          if (e2 !== null)
            e2.getTracks().forEach(function(e3) {
              e3.stop();
            });
        }
        var t2 = this._pInst._elements.indexOf(this);
        for (var r2 in t2 !== -1 && this._pInst._elements.splice(t2, 1), this._events)
          this.elt.removeEventListener(r2, this._events[r2]);
        this.elt && this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
      }, f.default.Element.prototype.drop = function(n2, a2) {
        if (window.File && window.FileReader && window.FileList && window.Blob) {
          if (!this._dragDisabled) {
            this._dragDisabled = true;
            var e2 = function(e3) {
              e3.preventDefault();
            };
            this.elt.addEventListener("dragover", e2), this.elt.addEventListener("dragleave", e2);
          }
          f.default.Element._attachListener("drop", function(e3) {
            e3.preventDefault(), typeof a2 == "function" && a2.call(this, e3);
            for (var t2 = e3.dataTransfer.files, r2 = 0; r2 < t2.length; r2++) {
              var i2 = t2[r2];
              f.default.File._load(i2, n2);
            }
          }, this);
        } else
          console.log("The File APIs are not fully supported in this browser.");
        return this;
      }, f.default.MediaElement = function(i2, e2) {
        f.default.Element.call(this, i2, e2);
        var n2 = this;
        this.elt.crossOrigin = "anonymous", this._prevTime = 0, this._cueIDCounter = 0, this._cues = [], (this._pixelsState = this)._pixelDensity = 1, this._modified = false, Object.defineProperty(n2, "src", {get: function() {
          var e3 = n2.elt.children[0].src, t2 = n2.elt.src === window.location.href ? "" : n2.elt.src;
          return e3 === window.location.href ? t2 : e3;
        }, set: function(e3) {
          for (var t2 = 0; t2 < n2.elt.children.length; t2++)
            n2.elt.removeChild(n2.elt.children[t2]);
          var r2 = document.createElement("source");
          r2.src = e3, i2.appendChild(r2), n2.elt.src = e3, n2.modified = true;
        }}), n2._onended = function() {
        }, n2.elt.onended = function() {
          n2._onended(n2);
        };
      }, f.default.MediaElement.prototype = Object.create(f.default.Element.prototype), f.default.MediaElement.prototype.play = function() {
        var e2, t2 = this;
        return this.elt.currentTime === this.elt.duration && (this.elt.currentTime = 0), (e2 = (1 < this.elt.readyState || this.elt.load(), this.elt.play())) && e2.catch && e2.catch(function(e3) {
          e3.name === "NotAllowedError" ? f.default._friendlyAutoplayError(t2.src) : console.error("Media play method encountered an unexpected error", e3);
        }), this;
      }, f.default.MediaElement.prototype.stop = function() {
        return this.elt.pause(), this.elt.currentTime = 0, this;
      }, f.default.MediaElement.prototype.pause = function() {
        return this.elt.pause(), this;
      }, f.default.MediaElement.prototype.loop = function() {
        return this.elt.setAttribute("loop", true), this.play(), this;
      }, f.default.MediaElement.prototype.noLoop = function() {
        return this.elt.removeAttribute("loop"), this;
      }, f.default.MediaElement.prototype._setupAutoplayFailDetection = function() {
        var e2 = this, t2 = setTimeout(function() {
          return f.default._friendlyAutoplayError(e2.src);
        }, 500);
        this.elt.addEventListener("play", function() {
          return clearTimeout(t2);
        }, {passive: true, once: true});
      }, f.default.MediaElement.prototype.autoplay = function(e2) {
        var t2 = this, r2 = this.elt.getAttribute("autoplay");
        if (this.elt.setAttribute("autoplay", e2), e2 && !r2) {
          var i2 = function() {
            return t2._setupAutoplayFailDetection();
          };
          this.elt.readyState === 4 ? i2() : this.elt.addEventListener("canplay", i2, {passive: true, once: true});
        }
        return this;
      }, f.default.MediaElement.prototype.volume = function(e2) {
        if (e2 === void 0)
          return this.elt.volume;
        this.elt.volume = e2;
      }, f.default.MediaElement.prototype.speed = function(e2) {
        if (e2 === void 0)
          return this.presetPlaybackRate || this.elt.playbackRate;
        this.loadedmetadata ? this.elt.playbackRate = e2 : this.presetPlaybackRate = e2;
      }, f.default.MediaElement.prototype.time = function(e2) {
        return e2 === void 0 ? this.elt.currentTime : (this.elt.currentTime = e2, this);
      }, f.default.MediaElement.prototype.duration = function() {
        return this.elt.duration;
      }, f.default.MediaElement.prototype.pixels = [], f.default.MediaElement.prototype._ensureCanvas = function() {
        this.canvas || (this.canvas = document.createElement("canvas"), this.drawingContext = this.canvas.getContext("2d"), this.setModified(true)), this.loadedmetadata && (this.canvas.width !== this.elt.width && (this.canvas.width = this.elt.width, this.canvas.height = this.elt.height, this.width = this.canvas.width, this.height = this.canvas.height), this.drawingContext.drawImage(this.elt, 0, 0, this.canvas.width, this.canvas.height), this.setModified(true));
      }, f.default.MediaElement.prototype.loadPixels = function() {
        return this._ensureCanvas(), f.default.Renderer2D.prototype.loadPixels.apply(this, arguments);
      }, f.default.MediaElement.prototype.updatePixels = function(e2, t2, r2, i2) {
        return this.loadedmetadata && (this._ensureCanvas(), f.default.Renderer2D.prototype.updatePixels.call(this, e2, t2, r2, i2)), this.setModified(true), this;
      }, f.default.MediaElement.prototype.get = function() {
        return this._ensureCanvas(), f.default.Renderer2D.prototype.get.apply(this, arguments);
      }, f.default.MediaElement.prototype._getPixel = function() {
        return this.loadPixels(), f.default.Renderer2D.prototype._getPixel.apply(this, arguments);
      }, f.default.MediaElement.prototype.set = function(e2, t2, r2) {
        this.loadedmetadata && (this._ensureCanvas(), f.default.Renderer2D.prototype.set.call(this, e2, t2, r2), this.setModified(true));
      }, f.default.MediaElement.prototype.copy = function() {
        this._ensureCanvas(), f.default.prototype.copy.apply(this, arguments);
      }, f.default.MediaElement.prototype.mask = function() {
        this.loadPixels(), this.setModified(true), f.default.Image.prototype.mask.apply(this, arguments);
      }, f.default.MediaElement.prototype.isModified = function() {
        return this._modified;
      }, f.default.MediaElement.prototype.setModified = function(e2) {
        this._modified = e2;
      }, f.default.MediaElement.prototype.onended = function(e2) {
        return this._onended = e2, this;
      }, f.default.MediaElement.prototype.connect = function(e2) {
        var t2, r2;
        if (typeof f.default.prototype.getAudioContext == "function")
          t2 = f.default.prototype.getAudioContext(), r2 = f.default.soundOut.input;
        else
          try {
            r2 = (t2 = e2.context).destination;
          } catch (e3) {
            throw "connect() is meant to be used with Web Audio API or p5.sound.js";
          }
        this.audioSourceNode || (this.audioSourceNode = t2.createMediaElementSource(this.elt), this.audioSourceNode.connect(r2)), e2 ? e2.input ? this.audioSourceNode.connect(e2.input) : this.audioSourceNode.connect(e2) : this.audioSourceNode.connect(r2);
      }, f.default.MediaElement.prototype.disconnect = function() {
        if (!this.audioSourceNode)
          throw "nothing to disconnect";
        this.audioSourceNode.disconnect();
      }, f.default.MediaElement.prototype.showControls = function() {
        this.elt.style["text-align"] = "inherit", this.elt.controls = true;
      }, f.default.MediaElement.prototype.hideControls = function() {
        this.elt.controls = false;
      };
      function a(e2, t2, r2, i2) {
        this.callback = e2, this.time = t2, this.id = r2, this.val = i2;
      }
      f.default.MediaElement.prototype.addCue = function(e2, t2, r2) {
        var i2 = this._cueIDCounter++, n2 = new a(t2, e2, i2, r2);
        return this._cues.push(n2), this.elt.ontimeupdate || (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)), i2;
      }, f.default.MediaElement.prototype.removeCue = function(e2) {
        for (var t2 = 0; t2 < this._cues.length; t2++)
          this._cues[t2].id === e2 && (console.log(e2), this._cues.splice(t2, 1));
        this._cues.length === 0 && (this.elt.ontimeupdate = null);
      }, f.default.MediaElement.prototype.clearCues = function() {
        this._cues = [], this.elt.ontimeupdate = null;
      }, f.default.MediaElement.prototype._onTimeUpdate = function() {
        for (var e2 = this.time(), t2 = 0; t2 < this._cues.length; t2++) {
          var r2 = this._cues[t2].time, i2 = this._cues[t2].val;
          this._prevTime < r2 && r2 <= e2 && this._cues[t2].callback(i2);
        }
        this._prevTime = e2;
      }, f.default.File = function(e2, t2) {
        this.file = e2, this._pInst = t2;
        var r2 = e2.type.split("/");
        this.type = r2[0], this.subtype = r2[1], this.name = e2.name, this.size = e2.size, this.data = void 0;
      }, f.default.File._createLoader = function(i2, n2) {
        var e2 = new FileReader();
        return e2.onload = function(e3) {
          var t2 = new f.default.File(i2);
          if (t2.file.type === "application/json")
            t2.data = JSON.parse(e3.target.result);
          else if (t2.file.type === "text/xml") {
            var r2 = new DOMParser().parseFromString(e3.target.result, "text/xml");
            t2.data = new f.default.XML(r2.documentElement);
          } else
            t2.data = e3.target.result;
          n2(t2);
        }, e2;
      }, f.default.File._load = function(e2, t2) {
        if (/^text\//.test(e2.type) || e2.type === "application/json")
          f.default.File._createLoader(e2, t2).readAsText(e2);
        else if (/^(video|audio)\//.test(e2.type)) {
          var r2 = new f.default.File(e2);
          r2.data = URL.createObjectURL(e2), t2(r2);
        } else
          f.default.File._createLoader(e2, t2).readAsDataURL(e2);
      };
      var o = f.default;
      r.default = o;
    }, {"../core/main": 36}], 53: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i}, a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      n.default.prototype.deviceOrientation = 1 < window.innerWidth / window.innerHeight ? "landscape" : "portrait", n.default.prototype.accelerationX = 0, n.default.prototype.accelerationY = 0, n.default.prototype.accelerationZ = 0, n.default.prototype.pAccelerationX = 0, n.default.prototype.pAccelerationY = 0, n.default.prototype.pAccelerationZ = 0, n.default.prototype._updatePAccelerations = function() {
        this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), this._setProperty("pAccelerationZ", this.accelerationZ);
      }, n.default.prototype.rotationX = 0, n.default.prototype.rotationY = 0, n.default.prototype.rotationZ = 0, n.default.prototype.pRotationX = 0, n.default.prototype.pRotationY = 0;
      var u = n.default.prototype.pRotationZ = 0, h = 0, c = 0, f = "clockwise", d = "clockwise", p = "clockwise";
      n.default.prototype.pRotateDirectionX = void 0, n.default.prototype.pRotateDirectionY = void 0, n.default.prototype.pRotateDirectionZ = void 0, n.default.prototype._updatePRotations = function() {
        this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), this._setProperty("pRotationZ", this.rotationZ);
      }, n.default.prototype.turnAxis = void 0;
      var m = 0.5, v = 30;
      n.default.prototype.setMoveThreshold = function(e2) {
        n.default._validateParameters("setMoveThreshold", arguments), m = e2;
      }, n.default.prototype.setShakeThreshold = function(e2) {
        n.default._validateParameters("setShakeThreshold", arguments), v = e2;
      }, n.default.prototype._ondeviceorientation = function(e2) {
        this._updatePRotations(), this._angleMode === a.radians && (e2.beta = e2.beta * (_PI / 180), e2.gamma = e2.gamma * (_PI / 180), e2.alpha = e2.alpha * (_PI / 180)), this._setProperty("rotationX", e2.beta), this._setProperty("rotationY", e2.gamma), this._setProperty("rotationZ", e2.alpha), this._handleMotion();
      }, n.default.prototype._ondevicemotion = function(e2) {
        this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e2.acceleration.x), this._setProperty("accelerationY", 2 * e2.acceleration.y), this._setProperty("accelerationZ", 2 * e2.acceleration.z), this._handleMotion();
      }, n.default.prototype._handleMotion = function() {
        window.orientation === 90 || window.orientation === -90 ? this._setProperty("deviceOrientation", "landscape") : window.orientation === 0 ? this._setProperty("deviceOrientation", "portrait") : window.orientation === void 0 && this._setProperty("deviceOrientation", "undefined");
        var e2, t2, r2 = this._isGlobal ? window : this;
        if (typeof r2.deviceMoved == "function" && (Math.abs(this.accelerationX - this.pAccelerationX) > m || Math.abs(this.accelerationY - this.pAccelerationY) > m || Math.abs(this.accelerationZ - this.pAccelerationZ) > m) && r2.deviceMoved(), typeof r2.deviceTurned == "function") {
          var i2 = this.rotationX + 180, n2 = this.pRotationX + 180, a2 = u + 180;
          0 < i2 - n2 && i2 - n2 < 270 || i2 - n2 < -270 ? f = "clockwise" : (i2 - n2 < 0 || 270 < i2 - n2) && (f = "counter-clockwise"), f !== this.pRotateDirectionX && (a2 = i2), 90 < Math.abs(i2 - a2) && Math.abs(i2 - a2) < 270 && (a2 = i2, this._setProperty("turnAxis", "X"), r2.deviceTurned()), this.pRotateDirectionX = f, u = a2 - 180;
          var o2 = this.rotationY + 180, s2 = this.pRotationY + 180, l2 = h + 180;
          0 < o2 - s2 && o2 - s2 < 270 || o2 - s2 < -270 ? d = "clockwise" : (o2 - s2 < 0 || 270 < o2 - this.pRotationY) && (d = "counter-clockwise"), d !== this.pRotateDirectionY && (l2 = o2), 90 < Math.abs(o2 - l2) && Math.abs(o2 - l2) < 270 && (l2 = o2, this._setProperty("turnAxis", "Y"), r2.deviceTurned()), this.pRotateDirectionY = d, h = l2 - 180, 0 < this.rotationZ - this.pRotationZ && this.rotationZ - this.pRotationZ < 270 || this.rotationZ - this.pRotationZ < -270 ? p = "clockwise" : (this.rotationZ - this.pRotationZ < 0 || 270 < this.rotationZ - this.pRotationZ) && (p = "counter-clockwise"), p !== this.pRotateDirectionZ && (c = this.rotationZ), 90 < Math.abs(this.rotationZ - c) && Math.abs(this.rotationZ - c) < 270 && (c = this.rotationZ, this._setProperty("turnAxis", "Z"), r2.deviceTurned()), this.pRotateDirectionZ = p, this._setProperty("turnAxis", void 0);
        }
        typeof r2.deviceShaken == "function" && (this.pAccelerationX !== null && (e2 = Math.abs(this.accelerationX - this.pAccelerationX), t2 = Math.abs(this.accelerationY - this.pAccelerationY)), v < e2 + t2 && r2.deviceShaken());
      };
      var l = n.default;
      r.default = l;
    }, {"../core/constants": 26, "../core/main": 36}], 54: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype.isKeyPressed = false, n.default.prototype.keyIsPressed = false, n.default.prototype.key = "", n.default.prototype.keyCode = 0, n.default.prototype._onkeydown = function(e2) {
        if (!this._downKeys[e2.which]) {
          this._setProperty("isKeyPressed", true), this._setProperty("keyIsPressed", true), this._setProperty("keyCode", e2.which), this._downKeys[e2.which] = true, this._setProperty("key", e2.key || String.fromCharCode(e2.which) || e2.which);
          var t2 = this._isGlobal ? window : this;
          if (typeof t2.keyPressed == "function" && !e2.charCode)
            t2.keyPressed(e2) === false && e2.preventDefault();
        }
      }, n.default.prototype._onkeyup = function(e2) {
        this._downKeys[e2.which] = false, this._areDownKeys() || (this._setProperty("isKeyPressed", false), this._setProperty("keyIsPressed", false)), this._setProperty("_lastKeyCodeTyped", null), this._setProperty("key", e2.key || String.fromCharCode(e2.which) || e2.which), this._setProperty("keyCode", e2.which);
        var t2 = this._isGlobal ? window : this;
        typeof t2.keyReleased == "function" && t2.keyReleased(e2) === false && e2.preventDefault();
      }, n.default.prototype._onkeypress = function(e2) {
        if (e2.which !== this._lastKeyCodeTyped) {
          this._setProperty("_lastKeyCodeTyped", e2.which), this._setProperty("key", e2.key || String.fromCharCode(e2.which) || e2.which);
          var t2 = this._isGlobal ? window : this;
          if (typeof t2.keyTyped == "function")
            t2.keyTyped(e2) === false && e2.preventDefault();
        }
      }, n.default.prototype._onblur = function(e2) {
        this._downKeys = {};
      }, n.default.prototype.keyIsDown = function(e2) {
        return n.default._validateParameters("keyIsDown", arguments), this._downKeys[e2] || false;
      }, n.default.prototype._areDownKeys = function() {
        for (var e2 in this._downKeys)
          if (this._downKeys.hasOwnProperty(e2) && this._downKeys[e2] === true)
            return true;
        return false;
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 55: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i}, a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      n.default.prototype.movedX = 0, n.default.prototype.movedY = 0, n.default.prototype._hasMouseInteracted = false, n.default.prototype.mouseX = 0, n.default.prototype.mouseY = 0, n.default.prototype.pmouseX = 0, n.default.prototype.pmouseY = 0, n.default.prototype.winMouseX = 0, n.default.prototype.winMouseY = 0, n.default.prototype.pwinMouseX = 0, n.default.prototype.pwinMouseY = 0, n.default.prototype.mouseButton = 0, n.default.prototype.mouseIsPressed = false, n.default.prototype._updateNextMouseCoords = function(e2) {
        if (this._curElement !== null && (!e2.touches || 0 < e2.touches.length)) {
          var t2 = function(e3, t3, r2, i2) {
            i2 && !i2.clientX && (i2.touches ? i2 = i2.touches[0] : i2.changedTouches && (i2 = i2.changedTouches[0]));
            var n2 = e3.getBoundingClientRect(), a2 = e3.scrollWidth / t3 || 1, o2 = e3.scrollHeight / r2 || 1;
            return {x: (i2.clientX - n2.left) / a2, y: (i2.clientY - n2.top) / o2, winX: i2.clientX, winY: i2.clientY, id: i2.identifier};
          }(this._curElement.elt, this.width, this.height, e2);
          this._setProperty("movedX", e2.movementX), this._setProperty("movedY", e2.movementY), this._setProperty("mouseX", t2.x), this._setProperty("mouseY", t2.y), this._setProperty("winMouseX", t2.winX), this._setProperty("winMouseY", t2.winY);
        }
        this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", true));
      }, n.default.prototype._updateMouseCoords = function() {
        this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
      }, n.default.prototype._setMouseButton = function(e2) {
        e2.button === 1 ? this._setProperty("mouseButton", a.CENTER) : e2.button === 2 ? this._setProperty("mouseButton", a.RIGHT) : this._setProperty("mouseButton", a.LEFT);
      }, n.default.prototype._onmousemove = function(e2) {
        var t2 = this._isGlobal ? window : this;
        this._updateNextMouseCoords(e2), this.mouseIsPressed ? typeof t2.mouseDragged == "function" ? t2.mouseDragged(e2) === false && e2.preventDefault() : typeof t2.touchMoved == "function" && t2.touchMoved(e2) === false && e2.preventDefault() : typeof t2.mouseMoved == "function" && t2.mouseMoved(e2) === false && e2.preventDefault();
      }, n.default.prototype._onmousedown = function(e2) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", true), this._setMouseButton(e2), this._updateNextMouseCoords(e2), typeof t2.mousePressed == "function" ? t2.mousePressed(e2) === false && e2.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && typeof t2.touchStarted == "function" && t2.touchStarted(e2) === false && e2.preventDefault();
      }, n.default.prototype._onmouseup = function(e2) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", false), typeof t2.mouseReleased == "function" ? t2.mouseReleased(e2) === false && e2.preventDefault() : typeof t2.touchEnded == "function" && t2.touchEnded(e2) === false && e2.preventDefault();
      }, n.default.prototype._ondragend = n.default.prototype._onmouseup, n.default.prototype._ondragover = n.default.prototype._onmousemove, n.default.prototype._onclick = function(e2) {
        var t2 = this._isGlobal ? window : this;
        typeof t2.mouseClicked == "function" && t2.mouseClicked(e2) === false && e2.preventDefault();
      }, n.default.prototype._ondblclick = function(e2) {
        var t2 = this._isGlobal ? window : this;
        typeof t2.doubleClicked == "function" && t2.doubleClicked(e2) === false && e2.preventDefault();
      }, n.default.prototype._mouseWheelDeltaY = 0, n.default.prototype._pmouseWheelDeltaY = 0, n.default.prototype._onwheel = function(e2) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("_mouseWheelDeltaY", e2.deltaY), typeof t2.mouseWheel == "function" && (e2.delta = e2.deltaY, t2.mouseWheel(e2) === false && e2.preventDefault());
      }, n.default.prototype.requestPointerLock = function() {
        var e2 = this._curElement.elt;
        return e2.requestPointerLock = e2.requestPointerLock || e2.mozRequestPointerLock, e2.requestPointerLock ? (e2.requestPointerLock(), true) : (console.log("requestPointerLock is not implemented in this browser"), false);
      }, n.default.prototype.exitPointerLock = function() {
        document.exitPointerLock();
      };
      var l = n.default;
      r.default = l;
    }, {"../core/constants": 26, "../core/main": 36}], 56: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function a(e2, t2, r2, i2, n2) {
        var a2 = 4 < arguments.length && n2 !== void 0 ? n2 : 0, o2 = e2.getBoundingClientRect(), s = e2.scrollWidth / t2 || 1, l = e2.scrollHeight / r2 || 1, u = i2.touches[a2] || i2.changedTouches[a2];
        return {x: (u.clientX - o2.left) / s, y: (u.clientY - o2.top) / l, winX: u.clientX, winY: u.clientY, id: u.identifier};
      }
      n.default.prototype.touches = [], n.default.prototype._updateTouchCoords = function(e2) {
        if (this._curElement !== null) {
          for (var t2 = [], r2 = 0; r2 < e2.touches.length; r2++)
            t2[r2] = a(this._curElement.elt, this.width, this.height, e2, r2);
          this._setProperty("touches", t2);
        }
      }, n.default.prototype._ontouchstart = function(e2) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", true), this._updateTouchCoords(e2), this._updateNextMouseCoords(e2), this._updateMouseCoords(), typeof t2.touchStarted == "function" ? t2.touchStarted(e2) === false && e2.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && typeof t2.mousePressed == "function" && t2.mousePressed(e2) === false && e2.preventDefault();
      }, n.default.prototype._ontouchmove = function(e2) {
        var t2 = this._isGlobal ? window : this;
        this._updateTouchCoords(e2), this._updateNextMouseCoords(e2), typeof t2.touchMoved == "function" ? t2.touchMoved(e2) === false && e2.preventDefault() : typeof t2.mouseDragged == "function" && t2.mouseDragged(e2) === false && e2.preventDefault();
      }, n.default.prototype._ontouchend = function(e2) {
        this._setProperty("mouseIsPressed", false), this._updateTouchCoords(e2), this._updateNextMouseCoords(e2);
        var t2 = this._isGlobal ? window : this;
        typeof t2.touchEnded == "function" ? t2.touchEnded(e2) === false && e2.preventDefault() : typeof t2.mouseReleased == "function" && t2.mouseReleased(e2) === false && e2.preventDefault();
      };
      var o = n.default;
      r.default = o;
    }, {"../core/main": 36}], 57: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var L, O, P, R, D = {};
      function i(e2, t2) {
        for (var r2, i2, n2, a, o, s, l, u, h, c, f = D._toPixels(e2), d = e2.width, p = e2.height, m = d * p, v = new Int32Array(m), y = 0; y < m; y++)
          v[y] = D._getARGB(f, y);
        var g, b, _, x, w = new Int32Array(m), S = new Int32Array(m), M = new Int32Array(m), T = new Int32Array(m), E = 0;
        for (!function(e3) {
          var t3 = 3.5 * e3 | 0;
          if (L !== (t3 = t3 < 1 ? 1 : t3 < 248 ? t3 : 248)) {
            O = 1 + (L = t3) << 1, P = new Int32Array(O), R = new Array(O);
            for (var r3 = 0; r3 < O; r3++)
              R[r3] = new Int32Array(256);
            for (var i3, n3, a2, o2, s2 = 1, l2 = t3 - 1; s2 < t3; s2++) {
              P[t3 + s2] = P[l2] = n3 = l2 * l2, a2 = R[t3 + s2], o2 = R[l2--];
              for (var u2 = 0; u2 < 256; u2++)
                a2[u2] = o2[u2] = n3 * u2;
            }
            i3 = P[t3] = t3 * t3, a2 = R[t3];
            for (var h2 = 0; h2 < 256; h2++)
              a2[h2] = i3 * h2;
          }
        }(t2), b = 0; b < p; b++) {
          for (g = 0; g < d; g++) {
            if (a = n2 = i2 = o = r2 = 0, (s = g - L) < 0)
              c = -s, s = 0;
            else {
              if (d <= s)
                break;
              c = 0;
            }
            for (_ = c; _ < O && !(d <= s); _++) {
              var C = v[s + E];
              o += (x = R[_])[(-16777216 & C) >>> 24], i2 += x[(16711680 & C) >> 16], n2 += x[(65280 & C) >> 8], a += x[255 & C], r2 += P[_], s++;
            }
            w[l = E + g] = o / r2, S[l] = i2 / r2, M[l] = n2 / r2, T[l] = a / r2;
          }
          E += d;
        }
        for (h = (u = -L) * d, b = E = 0; b < p; b++) {
          for (g = 0; g < d; g++) {
            if (a = n2 = i2 = o = r2 = 0, u < 0)
              c = l = -u, s = g;
            else {
              if (p <= u)
                break;
              c = 0, l = u, s = g + h;
            }
            for (_ = c; _ < O && !(p <= l); _++)
              o += (x = R[_])[w[s]], i2 += x[S[s]], n2 += x[M[s]], a += x[T[s]], r2 += P[_], l++, s += d;
            v[g + E] = o / r2 << 24 | i2 / r2 << 16 | n2 / r2 << 8 | a / r2;
          }
          E += d, h += d, u++;
        }
        D._setPixels(f, v);
      }
      D._toPixels = function(e2) {
        return e2 instanceof ImageData ? e2.data : e2.getContext("2d").getImageData(0, 0, e2.width, e2.height).data;
      }, D._getARGB = function(e2, t2) {
        var r2 = 4 * t2;
        return e2[3 + r2] << 24 & 4278190080 | e2[r2] << 16 & 16711680 | e2[1 + r2] << 8 & 65280 | 255 & e2[2 + r2];
      }, D._setPixels = function(e2, t2) {
        for (var r2 = 0, i2 = 0, n2 = e2.length; i2 < n2; i2++)
          e2[(r2 = 4 * i2) + 0] = (16711680 & t2[i2]) >>> 16, e2[r2 + 1] = (65280 & t2[i2]) >>> 8, e2[r2 + 2] = 255 & t2[i2], e2[r2 + 3] = (4278190080 & t2[i2]) >>> 24;
      }, D._toImageData = function(e2) {
        return e2 instanceof ImageData ? e2 : e2.getContext("2d").getImageData(0, 0, e2.width, e2.height);
      }, D._createImageData = function(e2, t2) {
        return D._tmpCanvas = document.createElement("canvas"), D._tmpCtx = D._tmpCanvas.getContext("2d"), this._tmpCtx.createImageData(e2, t2);
      }, D.apply = function(e2, t2, r2) {
        var i2 = e2.getContext("2d"), n2 = i2.getImageData(0, 0, e2.width, e2.height), a = t2(n2, r2);
        a instanceof ImageData ? i2.putImageData(a, 0, 0, 0, 0, e2.width, e2.height) : i2.putImageData(n2, 0, 0, 0, 0, e2.width, e2.height);
      }, D.threshold = function(e2, t2) {
        var r2 = D._toPixels(e2);
        t2 === void 0 && (t2 = 0.5);
        for (var i2 = Math.floor(255 * t2), n2 = 0; n2 < r2.length; n2 += 4) {
          var a = void 0;
          a = i2 <= 0.2126 * r2[n2] + 0.7152 * r2[n2 + 1] + 0.0722 * r2[n2 + 2] ? 255 : 0, r2[n2] = r2[n2 + 1] = r2[n2 + 2] = a;
        }
      }, D.gray = function(e2) {
        for (var t2 = D._toPixels(e2), r2 = 0; r2 < t2.length; r2 += 4) {
          var i2 = 0.2126 * t2[r2] + 0.7152 * t2[r2 + 1] + 0.0722 * t2[r2 + 2];
          t2[r2] = t2[r2 + 1] = t2[r2 + 2] = i2;
        }
      }, D.opaque = function(e2) {
        for (var t2 = D._toPixels(e2), r2 = 0; r2 < t2.length; r2 += 4)
          t2[r2 + 3] = 255;
        return t2;
      }, D.invert = function(e2) {
        for (var t2 = D._toPixels(e2), r2 = 0; r2 < t2.length; r2 += 4)
          t2[r2] = 255 - t2[r2], t2[r2 + 1] = 255 - t2[r2 + 1], t2[r2 + 2] = 255 - t2[r2 + 2];
      }, D.posterize = function(e2, t2) {
        var r2 = D._toPixels(e2);
        if (t2 < 2 || 255 < t2)
          throw new Error("Level must be greater than 2 and less than 255 for posterize");
        for (var i2 = t2 - 1, n2 = 0; n2 < r2.length; n2 += 4) {
          var a = r2[n2], o = r2[n2 + 1], s = r2[n2 + 2];
          r2[n2] = 255 * (a * t2 >> 8) / i2, r2[n2 + 1] = 255 * (o * t2 >> 8) / i2, r2[n2 + 2] = 255 * (s * t2 >> 8) / i2;
        }
      }, D.dilate = function(e2) {
        for (var t2, r2, i2, n2, a, o, s, l, u, h, c, f, d, p, m, v, y, g = D._toPixels(e2), b = 0, _ = g.length ? g.length / 4 : 0, x = new Int32Array(_); b < _; )
          for (r2 = (t2 = b) + e2.width; b < r2; )
            i2 = n2 = D._getARGB(g, b), (s = b - 1) < t2 && (s = b), r2 <= (o = b + 1) && (o = b), (l = b - e2.width) < 0 && (l = 0), _ <= (u = b + e2.width) && (u = b), f = D._getARGB(g, l), c = D._getARGB(g, s), d = D._getARGB(g, u), (a = 77 * (i2 >> 16 & 255) + 151 * (i2 >> 8 & 255) + 28 * (255 & i2)) < (m = 77 * (c >> 16 & 255) + 151 * (c >> 8 & 255) + 28 * (255 & c)) && (n2 = c, a = m), a < (p = 77 * ((h = D._getARGB(g, o)) >> 16 & 255) + 151 * (h >> 8 & 255) + 28 * (255 & h)) && (n2 = h, a = p), a < (v = 77 * (f >> 16 & 255) + 151 * (f >> 8 & 255) + 28 * (255 & f)) && (n2 = f, a = v), a < (y = 77 * (d >> 16 & 255) + 151 * (d >> 8 & 255) + 28 * (255 & d)) && (n2 = d, a = y), x[b++] = n2;
        D._setPixels(g, x);
      }, D.erode = function(e2) {
        for (var t2, r2, i2, n2, a, o, s, l, u, h, c, f, d, p, m, v, y, g = D._toPixels(e2), b = 0, _ = g.length ? g.length / 4 : 0, x = new Int32Array(_); b < _; )
          for (r2 = (t2 = b) + e2.width; b < r2; )
            i2 = n2 = D._getARGB(g, b), (s = b - 1) < t2 && (s = b), r2 <= (o = b + 1) && (o = b), (l = b - e2.width) < 0 && (l = 0), _ <= (u = b + e2.width) && (u = b), f = D._getARGB(g, l), c = D._getARGB(g, s), d = D._getARGB(g, u), (m = 77 * (c >> 16 & 255) + 151 * (c >> 8 & 255) + 28 * (255 & c)) < (a = 77 * (i2 >> 16 & 255) + 151 * (i2 >> 8 & 255) + 28 * (255 & i2)) && (n2 = c, a = m), (p = 77 * ((h = D._getARGB(g, o)) >> 16 & 255) + 151 * (h >> 8 & 255) + 28 * (255 & h)) < a && (n2 = h, a = p), (v = 77 * (f >> 16 & 255) + 151 * (f >> 8 & 255) + 28 * (255 & f)) < a && (n2 = f, a = v), (y = 77 * (d >> 16 & 255) + 151 * (d >> 8 & 255) + 28 * (255 & d)) < a && (n2 = d, a = y), x[b++] = n2;
        D._setPixels(g, x);
      }, D.blur = function(e2, t2) {
        i(e2, t2);
      };
      var n = D;
      r.default = n;
    }, {}], 58: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var D = i(e("../core/main")), k = i(e("omggif"));
      function i(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      function A(e2) {
        return function(e3) {
          if (Array.isArray(e3)) {
            for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++)
              r2[t2] = e3[t2];
            return r2;
          }
        }(e2) || function(e3) {
          if (Symbol.iterator in Object(e3) || Object.prototype.toString.call(e3) === "[object Arguments]")
            return Array.from(e3);
        }(e2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      D.default.prototype.createImage = function(e2, t2) {
        return D.default._validateParameters("createImage", arguments), new D.default.Image(e2, t2);
      }, D.default.prototype.saveCanvas = function() {
        D.default._validateParameters("saveCanvas", arguments);
        var e2, t2, r2, i2, n2 = [].slice.call(arguments);
        switch (arguments[0] instanceof HTMLCanvasElement ? (e2 = arguments[0], n2.shift()) : arguments[0] instanceof D.default.Element ? (e2 = arguments[0].elt, n2.shift()) : e2 = this._curElement && this._curElement.elt, 1 <= n2.length && (t2 = n2[0]), 2 <= n2.length && (r2 = n2[1]), r2 = r2 || D.default.prototype._checkFileExtension(t2, r2)[1] || "png") {
          default:
            i2 = "image/png";
            break;
          case "jpeg":
          case "jpg":
            i2 = "image/jpeg";
        }
        e2.toBlob(function(e3) {
          D.default.prototype.downloadFile(e3, t2, r2);
        }, i2);
      }, D.default.prototype.saveGif = function(p, e2) {
        var m = p.gifProperties, t2 = m.loopLimit;
        t2 === 1 ? t2 = null : t2 === null && (t2 = 0);
        for (var r2 = new Uint8Array(p.width * p.height * m.numFrames), v = [], i2 = {}, n2 = 0; n2 < m.numFrames; n2++) {
          for (var a = new Set(), o = m.frames[n2].image.data, s = o.length, l = new Uint32Array(p.width * p.height), u = 0, h = 0; u < s; u += 4, h++) {
            var c = o[u + 0] << 16 | o[u + 1] << 8 | o[u + 2] << 0;
            a.add(c), l[h] = c;
          }
          var f = A(a).sort().toString();
          i2[f] === void 0 ? i2[f] = {freq: 1, frames: [n2]} : (i2[f].freq += 1, i2[f].frames.push(n2)), v.push(l);
        }
        var y = [], d = Object.keys(i2).sort(function(e3, t3) {
          return i2[t3].freq - i2[e3].freq;
        }), g = d[0].split(",").map(function(e3) {
          return parseInt(e3);
        });
        y = y.concat(i2[g].frames);
        for (var b = new Set(g), _ = 1; _ < d.length; _++) {
          var x = d[_].split(",").map(function(e3) {
            return parseInt(e3);
          }).filter(function(e3) {
            return !b.has(e3);
          });
          if (g.length + x.length <= 256) {
            for (var w = 0; w < x.length; w++)
              g.push(x[w]), b.add(x[w]);
            y = y.concat(i2[d[_]].frames);
          }
        }
        y = new Set(y);
        for (var S = {}, M = 0; M < g.length; M++)
          S[g[M]] || (S[g[M]] = M);
        for (var T = 1; T < g.length; )
          T <<= 1;
        g.length = T;
        for (var E = {loop: t2, palette: new Uint32Array(g)}, C = new k.default.GifWriter(r2, p.width, p.height, E), L = {}, O = function(e3) {
          for (var t3 = !y.has(e3), r3 = t3 ? [] : g, i3 = new Uint8Array(p.width * p.height), n3 = {}, a2 = new Set(), o2 = 0; o2 < v[e3].length; o2++) {
            var s2 = v[e3][o2];
            t3 ? (n3[s2] === void 0 && (n3[s2] = r3.length, r3.push(s2)), i3[o2] = n3[s2]) : i3[o2] = S[s2], 0 < e3 && v[e3 - 1][o2] !== s2 && a2.add(s2);
          }
          var l2 = {}, u2 = r3.filter(function(e4) {
            return !a2.has(e4);
          });
          if (0 < u2.length) {
            var h2 = u2[0], c2 = t3 ? n3[h2] : S[h2];
            if (0 < e3) {
              for (var f2 = 0; f2 < v[e3].length; f2++)
                v[e3 - 1][f2] === v[e3][f2] && (i3[f2] = c2);
              l2.transparent = c2, L.frameOpts.disposal = 1;
            }
          }
          if (l2.delay = m.frames[e3].delay / 10, t3) {
            for (var d2 = 1; d2 < r3.length; )
              d2 <<= 1;
            r3.length = d2, l2.palette = new Uint32Array(r3);
          }
          0 < e3 && C.addFrame(0, 0, p.width, p.height, L.pixelPaletteIndex, L.frameOpts), L = {pixelPaletteIndex: i3, frameOpts: l2};
        }, P = 0; P < m.numFrames; P++)
          O(P);
        L.frameOpts.disposal = 1, C.addFrame(0, 0, p.width, p.height, L.pixelPaletteIndex, L.frameOpts);
        var R = new Blob([r2.slice(0, C.end())], {type: "image/gif"});
        D.default.prototype.downloadFile(R, e2, "gif");
      }, D.default.prototype.saveFrames = function(e2, t2, r2, i2, o) {
        D.default._validateParameters("saveFrames", arguments);
        var n2 = r2 || 3;
        n2 = D.default.prototype.constrain(n2, 0, 15), n2 *= 1e3;
        var a = i2 || 15;
        a = D.default.prototype.constrain(a, 0, 22);
        var s = 0, l = D.default.prototype._makeFrame, u = this._curElement.elt, h = [], c = setInterval(function() {
          h.push(l(e2 + s, t2, u)), s++;
        }, 1e3 / a);
        setTimeout(function() {
          if (clearInterval(c), o)
            o(h);
          else {
            var e3 = true, t3 = false, r3 = void 0;
            try {
              for (var i3, n3 = h[Symbol.iterator](); !(e3 = (i3 = n3.next()).done); e3 = true) {
                var a2 = i3.value;
                D.default.prototype.downloadFile(a2.imageData, a2.filename, a2.ext);
              }
            } catch (e4) {
              t3 = true, r3 = e4;
            } finally {
              try {
                e3 || n3.return == null || n3.return();
              } finally {
                if (t3)
                  throw r3;
              }
            }
          }
          h = [];
        }, n2 + 0.01);
      }, D.default.prototype._makeFrame = function(e2, t2, r2) {
        var i2, n2;
        if (i2 = this ? this._curElement.elt : r2, t2)
          switch (t2.toLowerCase()) {
            case "png":
              n2 = "image/png";
              break;
            case "jpeg":
            case "jpg":
              n2 = "image/jpeg";
              break;
            default:
              n2 = "image/png";
          }
        else
          t2 = "png", n2 = "image/png";
        var a = i2.toDataURL(n2);
        a = a.replace(n2, "image/octet-stream");
        var o = {};
        return o.imageData = a, o.filename = e2, o.ext = t2, o;
      };
      var n = D.default;
      r.default = n;
    }, {"../core/main": 36, omggif: 11}], 59: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var x = n(e("../core/main")), c = n(e("./filters")), w = n(e("../core/helpers")), i = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants")), p = n(e("omggif"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      function n(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      function S(e2, t2) {
        return 0 < e2 && e2 < t2 ? e2 : t2;
      }
      e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), x.default.prototype.loadImage = function(i2, n2, a2) {
        x.default._validateParameters("loadImage", arguments);
        var o2 = new x.default.Image(1, 1, this), s2 = this, e2 = new Request(i2, {method: "GET", mode: "cors"});
        return fetch(i2, e2).then(function(e3) {
          var t2 = e3.headers.get("content-type");
          if (t2 === null && console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."), t2 && t2.includes("image/gif"))
            e3.arrayBuffer().then(function(e4) {
              e4 && function(e5, r3, t3, i3, n3) {
                var a3 = new p.default.GifReader(e5);
                r3.width = r3.canvas.width = a3.width, r3.height = r3.canvas.height = a3.height;
                var o3 = [], s3 = a3.numFrames(), l = new Uint8ClampedArray(r3.width * r3.height * 4);
                if (1 < s3) {
                  for (var u = function(e6, t4) {
                    try {
                      t4.decodeAndBlitFrameRGBA(e6, l);
                    } catch (e7) {
                      x.default._friendlyFileLoadError(8, r3.src), typeof i3 == "function" ? i3(e7) : console.error(e7);
                    }
                  }, h = 0; h < s3; h++) {
                    var c2 = a3.frameInfo(h);
                    a3.frameInfo(h).disposal === 1 && 0 < h ? r3.drawingContext.putImageData(o3[h - 1].image, 0, 0) : (r3.drawingContext.clearRect(0, 0, r3.width, r3.height), l = new Uint8ClampedArray(r3.width * r3.height * 4)), u(h, a3);
                    var f = new ImageData(l, r3.width, r3.height);
                    r3.drawingContext.putImageData(f, 0, 0), o3.push({image: r3.drawingContext.getImageData(0, 0, r3.width, r3.height), delay: 10 * c2.delay});
                  }
                  var d = a3.loopCount();
                  d === null ? d = 1 : d === 0 && (d = null), r3.drawingContext.putImageData(o3[0].image, 0, 0), r3.gifProperties = {displayIndex: 0, loopLimit: d, loopCount: 0, frames: o3, numFrames: s3, playing: true, timeDisplayed: 0, lastChangeTime: 0};
                }
                typeof t3 == "function" && t3(r3);
                n3();
              }(new Uint8Array(e4), o2, n2, a2, function(e5) {
                s2._decrementPreload();
              }.bind(s2));
            }, function(e4) {
              typeof a2 == "function" ? a2(e4) : console.error(e4);
            });
          else {
            var r2 = new Image();
            r2.onload = function() {
              o2.width = o2.canvas.width = r2.width, o2.height = o2.canvas.height = r2.height, o2.drawingContext.drawImage(r2, 0, 0), o2.modified = true, typeof n2 == "function" && n2(o2), s2._decrementPreload();
            }, r2.onerror = function(e4) {
              x.default._friendlyFileLoadError(0, r2.src), typeof a2 == "function" ? a2(e4) : console.error(e4);
            }, i2.indexOf("data:image/") !== 0 && (r2.crossOrigin = "Anonymous"), r2.src = i2;
          }
          o2.modified = true;
        }), o2;
      }, x.default.prototype.image = function(e2, t2, r2, i2, n2, a2, o2, s2, l) {
        x.default._validateParameters("image", arguments);
        var u = e2.width, h = e2.height;
        e2.elt && e2.elt.videoWidth && !e2.canvas && (u = e2.elt.videoWidth, h = e2.elt.videoHeight);
        var c2 = t2, f = r2, d = i2 || u, p2 = n2 || h, m = a2 || 0, v = o2 || 0, y = s2 || u, g = l || h;
        y = S(y, u), g = S(g, h);
        var b = 1;
        e2.elt && !e2.canvas && e2.elt.style.width && (b = e2.elt.videoWidth && !i2 ? e2.elt.videoWidth : e2.elt.width, b /= parseInt(e2.elt.style.width, 10)), m *= b, v *= b, g *= b, y *= b;
        var _ = w.default.modeAdjust(c2, f, d, p2, this._renderer._imageMode);
        this._renderer.image(e2, m, v, y, g, _.x, _.y, _.w, _.h);
      }, x.default.prototype.tint = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        x.default._validateParameters("tint", t2);
        var i2 = this.color.apply(this, t2);
        this._renderer._tint = i2.levels;
      }, x.default.prototype.noTint = function() {
        this._renderer._tint = null;
      }, x.default.prototype._getTintedImageCanvas = function(e2) {
        if (!e2.canvas)
          return e2;
        var t2 = c.default._toPixels(e2.canvas), r2 = document.createElement("canvas");
        r2.width = e2.canvas.width, r2.height = e2.canvas.height;
        for (var i2 = r2.getContext("2d"), n2 = i2.createImageData(e2.canvas.width, e2.canvas.height), a2 = n2.data, o2 = 0; o2 < t2.length; o2 += 4) {
          var s2 = t2[o2], l = t2[o2 + 1], u = t2[o2 + 2], h = t2[o2 + 3];
          a2[o2] = s2 * this._renderer._tint[0] / 255, a2[o2 + 1] = l * this._renderer._tint[1] / 255, a2[o2 + 2] = u * this._renderer._tint[2] / 255, a2[o2 + 3] = h * this._renderer._tint[3] / 255;
        }
        return i2.putImageData(n2, 0, 0), r2;
      }, x.default.prototype.imageMode = function(e2) {
        x.default._validateParameters("imageMode", arguments), e2 !== i.CORNER && e2 !== i.CORNERS && e2 !== i.CENTER || (this._renderer._imageMode = e2);
      };
      var a = x.default;
      r.default = a;
    }, {"../core/constants": 26, "../core/friendly_errors/fes_core": 28, "../core/friendly_errors/file_errors": 29, "../core/friendly_errors/validate_params": 31, "../core/helpers": 32, "../core/main": 36, "./filters": 57, omggif: 11}], 60: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var n = a(e("../core/main")), i = a(e("./filters"));
      function a(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      n.default.Image = function(e2, t2) {
        this.width = e2, this.height = t2, this.canvas = document.createElement("canvas"), this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), (this._pixelsState = this)._pixelDensity = 1, this.gifProperties = null, this._modified = false, this.pixels = [];
      }, n.default.Image.prototype._animateGif = function(e2) {
        var t2 = this.gifProperties, r2 = e2._lastFrameTime + e2.deltaTime;
        if (t2.lastChangeTime === 0 && (t2.lastChangeTime = r2), t2.playing) {
          t2.timeDisplayed = r2 - t2.lastChangeTime;
          var i2 = t2.frames[t2.displayIndex].delay;
          if (t2.timeDisplayed >= i2) {
            var n2 = Math.floor(t2.timeDisplayed / i2);
            if (t2.timeDisplayed = 0, t2.lastChangeTime = r2, t2.displayIndex += n2, t2.loopCount = Math.floor(t2.displayIndex / t2.numFrames), t2.loopLimit !== null && t2.loopCount >= t2.loopLimit)
              t2.playing = false;
            else {
              var a2 = t2.displayIndex % t2.numFrames;
              this.drawingContext.putImageData(t2.frames[a2].image, 0, 0), t2.displayIndex = a2, this.setModified(true);
            }
          }
        }
      }, n.default.Image.prototype._setProperty = function(e2, t2) {
        this[e2] = t2, this.setModified(true);
      }, n.default.Image.prototype.loadPixels = function() {
        n.default.Renderer2D.prototype.loadPixels.call(this), this.setModified(true);
      }, n.default.Image.prototype.updatePixels = function(e2, t2, r2, i2) {
        n.default.Renderer2D.prototype.updatePixels.call(this, e2, t2, r2, i2), this.setModified(true);
      }, n.default.Image.prototype.get = function(e2, t2, r2, i2) {
        return n.default._validateParameters("p5.Image.get", arguments), n.default.Renderer2D.prototype.get.apply(this, arguments);
      }, n.default.Image.prototype._getPixel = n.default.Renderer2D.prototype._getPixel, n.default.Image.prototype.set = function(e2, t2, r2) {
        n.default.Renderer2D.prototype.set.call(this, e2, t2, r2), this.setModified(true);
      }, n.default.Image.prototype.resize = function(e2, t2) {
        e2 === 0 && t2 === 0 ? (e2 = this.canvas.width, t2 = this.canvas.height) : e2 === 0 ? e2 = this.canvas.width * t2 / this.canvas.height : t2 === 0 && (t2 = this.canvas.height * e2 / this.canvas.width), e2 = Math.floor(e2), t2 = Math.floor(t2);
        var r2 = document.createElement("canvas");
        if (r2.width = e2, r2.height = t2, this.gifProperties)
          for (var i2 = this.gifProperties, n2 = function(e3, t3) {
            for (var r3 = 0, i3 = 0; i3 < t3.height; i3++)
              for (var n3 = 0; n3 < t3.width; n3++) {
                var a3 = Math.floor(n3 * e3.width / t3.width), o3 = 4 * (Math.floor(i3 * e3.height / t3.height) * e3.width + a3);
                t3.data[r3++] = e3.data[o3++], t3.data[r3++] = e3.data[o3++], t3.data[r3++] = e3.data[o3++], t3.data[r3++] = e3.data[o3++];
              }
          }, a2 = 0; a2 < i2.numFrames; a2++) {
            var o2 = this.drawingContext.createImageData(e2, t2);
            n2(i2.frames[a2].image, o2), i2.frames[a2].image = o2;
          }
        r2.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, r2.width, r2.height), this.canvas.width = this.width = e2, this.canvas.height = this.height = t2, this.drawingContext.drawImage(r2, 0, 0, e2, t2, 0, 0, e2, t2), 0 < this.pixels.length && this.loadPixels(), this.setModified(true);
      }, n.default.Image.prototype.copy = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        n.default.prototype.copy.apply(this, t2);
      }, n.default.Image.prototype.mask = function(e2) {
        e2 === void 0 && (e2 = this);
        var t2 = this.drawingContext.globalCompositeOperation, r2 = 1;
        e2 instanceof n.default.Renderer && (r2 = e2._pInst._pixelDensity);
        var i2 = [e2, 0, 0, r2 * e2.width, r2 * e2.height, 0, 0, this.width, this.height];
        this.drawingContext.globalCompositeOperation = "destination-in", n.default.Image.prototype.copy.apply(this, i2), this.drawingContext.globalCompositeOperation = t2, this.setModified(true);
      }, n.default.Image.prototype.filter = function(e2, t2) {
        i.default.apply(this.canvas, i.default[e2], t2), this.setModified(true);
      }, n.default.Image.prototype.blend = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        n.default._validateParameters("p5.Image.blend", arguments), n.default.prototype.blend.apply(this, t2), this.setModified(true);
      }, n.default.Image.prototype.setModified = function(e2) {
        this._modified = e2;
      }, n.default.Image.prototype.isModified = function() {
        return this._modified;
      }, n.default.Image.prototype.save = function(e2, t2) {
        this.gifProperties ? n.default.prototype.saveGif(this, e2) : n.default.prototype.saveCanvas(this.canvas, e2, t2);
      }, n.default.Image.prototype.reset = function() {
        if (this.gifProperties) {
          var e2 = this.gifProperties;
          e2.playing = true, e2.timeSinceStart = 0, e2.timeDisplayed = 0, e2.lastChangeTime = 0, e2.loopCount = 0, e2.displayIndex = 0, this.drawingContext.putImageData(e2.frames[0].image, 0, 0);
        }
      }, n.default.Image.prototype.getCurrentFrame = function() {
        if (this.gifProperties) {
          var e2 = this.gifProperties;
          return e2.displayIndex % e2.numFrames;
        }
      }, n.default.Image.prototype.setFrame = function(e2) {
        if (this.gifProperties) {
          var t2 = this.gifProperties;
          e2 < t2.numFrames && 0 <= e2 ? (t2.timeDisplayed = 0, t2.lastChangeTime = 0, t2.displayIndex = e2, this.drawingContext.putImageData(t2.frames[e2].image, 0, 0)) : console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero.");
        }
      }, n.default.Image.prototype.numFrames = function() {
        if (this.gifProperties)
          return this.gifProperties.numFrames;
      }, n.default.Image.prototype.play = function() {
        this.gifProperties && (this.gifProperties.playing = true);
      }, n.default.Image.prototype.pause = function() {
        this.gifProperties && (this.gifProperties.playing = false);
      }, n.default.Image.prototype.delay = function(e2, t2) {
        if (this.gifProperties) {
          var r2 = this.gifProperties;
          if (t2 < r2.numFrames && 0 <= t2)
            r2.frames[t2].delay = e2;
          else {
            var i2 = true, n2 = false, a2 = void 0;
            try {
              for (var o2, s = r2.frames[Symbol.iterator](); !(i2 = (o2 = s.next()).done); i2 = true) {
                o2.value.delay = e2;
              }
            } catch (e3) {
              n2 = true, a2 = e3;
            } finally {
              try {
                i2 || s.return == null || s.return();
              } finally {
                if (n2)
                  throw a2;
              }
            }
          }
        }
      };
      var o = n.default.Image;
      r.default = o;
    }, {"../core/main": 36, "./filters": 57}], 61: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var d = n(e("../core/main")), i = n(e("./filters"));
      function n(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      e("../color/p5.Color"), d.default.prototype.pixels = [], d.default.prototype.blend = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2;
        (d.default._validateParameters("blend", t2), this._renderer) ? (i2 = this._renderer).blend.apply(i2, t2) : d.default.Renderer2D.prototype.blend.apply(this, t2);
      }, d.default.prototype.copy = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        var i2, n2, a2, o, s, l, u, h, c;
        if (d.default._validateParameters("copy", t2), t2.length === 9)
          i2 = t2[0], n2 = t2[1], a2 = t2[2], o = t2[3], s = t2[4], l = t2[5], u = t2[6], h = t2[7], c = t2[8];
        else {
          if (t2.length !== 8)
            throw new Error("Signature not supported");
          i2 = this, n2 = t2[0], a2 = t2[1], o = t2[2], s = t2[3], l = t2[4], u = t2[5], h = t2[6], c = t2[7];
        }
        d.default.prototype._copyHelper(this, i2, n2, a2, o, s, l, u, h, c);
      }, d.default.prototype._copyHelper = function(e2, t2, r2, i2, n2, a2, o, s, l, u) {
        t2.loadPixels();
        var h = t2.canvas.width / t2.width, c = 0, f = 0;
        t2._renderer && t2._renderer.isP3D && (c = t2.width / 2, f = t2.height / 2), e2._renderer && e2._renderer.isP3D ? d.default.RendererGL.prototype.image.call(e2._renderer, t2, r2 + c, i2 + f, n2, a2, o, s, l, u) : e2.drawingContext.drawImage(t2.canvas, h * (r2 + c), h * (i2 + f), h * n2, h * a2, o, s, l, u);
      }, d.default.prototype.filter = function(e2, t2) {
        d.default._validateParameters("filter", arguments), this.canvas !== void 0 ? i.default.apply(this.canvas, i.default[e2], t2) : i.default.apply(this.elt, i.default[e2], t2);
      }, d.default.prototype.get = function(e2, t2, r2, i2) {
        var n2;
        return d.default._validateParameters("get", arguments), (n2 = this._renderer).get.apply(n2, arguments);
      }, d.default.prototype.loadPixels = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        d.default._validateParameters("loadPixels", t2), this._renderer.loadPixels();
      }, d.default.prototype.set = function(e2, t2, r2) {
        this._renderer.set(e2, t2, r2);
      }, d.default.prototype.updatePixels = function(e2, t2, r2, i2) {
        d.default._validateParameters("updatePixels", arguments), this.pixels.length !== 0 && this._renderer.updatePixels(e2, t2, r2, i2);
      };
      var a = d.default;
      r.default = a;
    }, {"../color/p5.Color": 24, "../core/main": 36, "./filters": 57}], 62: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var y = i(e("../core/main"));
      e("whatwg-fetch"), e("es6-promise/auto");
      var v = i(e("fetch-jsonp")), s = i(e("file-saver"));
      function i(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      function g(e2) {
        return (g = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      function b(e2, t2) {
        var r2 = {};
        if ((t2 = t2 || []) === void 0)
          for (var i2 = 0; i2 < e2.length; i2++)
            t2[i2.toString()] = i2;
        for (var n2 = 0; n2 < t2.length; n2++) {
          var a = t2[n2], o = e2[n2];
          r2[a] = o;
        }
        return r2;
      }
      function m(e2) {
        return e2.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
      }
      function l(e2, t2) {
        t2 && t2 !== true && t2 !== "true" || (t2 = "");
        var r2 = "";
        return (e2 = e2 || "untitled") && e2.includes(".") && (r2 = e2.split(".").pop()), t2 && r2 !== t2 && (r2 = t2, e2 = "".concat(e2, ".").concat(r2)), [e2, r2];
      }
      e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), y.default.prototype.loadJSON = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        y.default._validateParameters("loadJSON", t2);
        for (var i2, n2, a, o = t2[0], s2 = {}, l2 = "json", u = 1; u < t2.length; u++) {
          var h = t2[u];
          typeof h == "string" ? h !== "jsonp" && h !== "json" || (l2 = h) : typeof h == "function" ? i2 ? n2 = h : i2 = h : g(h) === "object" && (h.hasOwnProperty("jsonpCallback") || h.hasOwnProperty("jsonpCallbackFunction")) && (l2 = "jsonp", a = h);
        }
        var c = this;
        return this.httpDo(o, "GET", a, l2, function(e3) {
          for (var t3 in e3)
            s2[t3] = e3[t3];
          i2 !== void 0 && i2(e3), c._decrementPreload();
        }, function(e3) {
          if (y.default._friendlyFileLoadError(5, o), !n2)
            throw e3;
          n2(e3);
        }), s2;
      }, y.default.prototype.loadStrings = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        y.default._validateParameters("loadStrings", t2);
        for (var n2, i2, a = [], o = 1; o < t2.length; o++) {
          var s2 = t2[o];
          typeof s2 == "function" && (n2 === void 0 ? n2 = s2 : i2 === void 0 && (i2 = s2));
        }
        var l2 = this;
        return y.default.prototype.httpDo.call(this, t2[0], "GET", "text", function(e3) {
          for (var t3 = e3.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/), r3 = 0, i3 = t3.length; r3 < i3; r3 += 32768)
            Array.prototype.push.apply(a, t3.slice(r3, Math.min(r3 + 32768, i3)));
          n2 !== void 0 && n2(a), l2._decrementPreload();
        }, function(e3) {
          if (y.default._friendlyFileLoadError(3, e3), !i2)
            throw e3;
          i2(e3);
        }), a;
      }, y.default.prototype.loadTable = function(t2) {
        var f, r2, d, p = false, i2 = t2.substring(t2.lastIndexOf(".") + 1, t2.length);
        i2 === "csv" ? d = "," : i2 === "ssv" ? d = ";" : i2 === "tsv" && (d = "	");
        for (var n2 = 1; n2 < arguments.length; n2++)
          typeof arguments[n2] == "function" ? f === void 0 ? f = arguments[n2] : r2 === void 0 && (r2 = arguments[n2]) : typeof arguments[n2] == "string" && (arguments[n2] === "header" && (p = true), arguments[n2] === "csv" ? d = "," : arguments[n2] === "ssv" ? d = ";" : arguments[n2] === "tsv" && (d = "	"));
        var m2 = new y.default.Table(), v2 = this;
        return this.httpDo(t2, "GET", "table", function(e2) {
          for (var t3, r3, i3 = {}, n3 = [], a = 0, o = null, s2 = function() {
            i3.currentState = 0, i3.token = "";
          }, l2 = function() {
            o.push(i3.token), s2();
          }, u = function() {
            i3.currentState = 4, n3.push(o), o = null;
          }; ; ) {
            if ((t3 = e2[a++]) == null) {
              if (i3.escaped)
                throw new Error("Unclosed quote in file.");
              if (o) {
                l2(), u();
                break;
              }
            }
            if (o === null && (i3.escaped = false, o = [], s2()), i3.currentState === 0) {
              if (t3 === '"') {
                i3.escaped = true, i3.currentState = 1;
                continue;
              }
              i3.currentState = 1;
            }
            if (i3.currentState === 1 && i3.escaped)
              if (t3 === '"')
                e2[a] === '"' ? (i3.token += '"', a++) : (i3.escaped = false, i3.currentState = 2);
              else {
                if (t3 === "\r")
                  continue;
                i3.token += t3;
              }
            else
              t3 === "\r" ? (e2[a] === "\n" && a++, l2(), u()) : t3 === "\n" ? (l2(), u()) : t3 === d ? l2() : i3.currentState === 1 && (i3.token += t3);
          }
          if (p)
            m2.columns = n3.shift();
          else
            for (var h = 0; h < n3[0].length; h++)
              m2.columns[h] = "null";
          for (var c = 0; c < n3.length; c++)
            (n3[c].length !== 1 || n3[c][0] !== "undefined" && n3[c][0] !== "") && ((r3 = new y.default.TableRow()).arr = n3[c], r3.obj = b(n3[c], m2.columns), m2.addRow(r3));
          typeof f == "function" && f(m2), v2._decrementPreload();
        }, function(e2) {
          y.default._friendlyFileLoadError(2, t2), r2 ? r2(e2) : console.error(e2);
        }), m2;
      }, y.default.prototype.loadXML = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        for (var i2, n2, a = new y.default.XML(), o = 1; o < t2.length; o++) {
          var s2 = t2[o];
          typeof s2 == "function" && (i2 === void 0 ? i2 = s2 : n2 === void 0 && (n2 = s2));
        }
        var l2 = this;
        return this.httpDo(t2[0], "GET", "xml", function(e3) {
          for (var t3 in e3)
            a[t3] = e3[t3];
          i2 !== void 0 && i2(a), l2._decrementPreload();
        }, function(e3) {
          if (y.default._friendlyFileLoadError(1, e3), !n2)
            throw e3;
          n2(e3);
        }), a;
      }, y.default.prototype.loadBytes = function(t2, r2, i2) {
        var n2 = {}, a = this;
        return this.httpDo(t2, "GET", "arrayBuffer", function(e2) {
          n2.bytes = new Uint8Array(e2), typeof r2 == "function" && r2(n2), a._decrementPreload();
        }, function(e2) {
          if (y.default._friendlyFileLoadError(6, t2), !i2)
            throw e2;
          i2(e2);
        }), n2;
      }, y.default.prototype.httpGet = function() {
        y.default._validateParameters("httpGet", arguments);
        var e2 = Array.prototype.slice.call(arguments);
        return e2.splice(1, 0, "GET"), y.default.prototype.httpDo.apply(this, e2);
      }, y.default.prototype.httpPost = function() {
        y.default._validateParameters("httpPost", arguments);
        var e2 = Array.prototype.slice.call(arguments);
        return e2.splice(1, 0, "POST"), y.default.prototype.httpDo.apply(this, e2);
      }, y.default.prototype.httpDo = function() {
        for (var i2, e2, t2, r2, n2, a = {}, o = 0, s2 = "text/plain", l2 = arguments.length - 1; 0 < l2 && typeof (l2 < 0 || arguments.length <= l2 ? void 0 : arguments[l2]) == "function"; l2--)
          o++;
        var u = arguments.length <= 0 ? void 0 : arguments[0];
        if (arguments.length - o == 2 && typeof u == "string" && g(arguments.length <= 1 ? void 0 : arguments[1]) === "object")
          r2 = new Request(u, arguments.length <= 1 ? void 0 : arguments[1]), e2 = arguments.length <= 2 ? void 0 : arguments[2], t2 = arguments.length <= 3 ? void 0 : arguments[3];
        else {
          for (var h, c = "GET", f = 1; f < arguments.length; f++) {
            var d = f < 0 || arguments.length <= f ? void 0 : arguments[f];
            if (typeof d == "string")
              d === "GET" || d === "POST" || d === "PUT" || d === "DELETE" ? c = d : d === "json" || d === "jsonp" || d === "binary" || d === "arrayBuffer" || d === "xml" || d === "text" || d === "table" ? i2 = d : h = d;
            else if (typeof d == "number")
              h = d.toString();
            else if (g(d) === "object")
              if (d.hasOwnProperty("jsonpCallback") || d.hasOwnProperty("jsonpCallbackFunction"))
                for (var p in d)
                  a[p] = d[p];
              else
                s2 = d instanceof y.default.XML ? (h = d.serialize(), "application/xml") : (h = JSON.stringify(d), "application/json");
            else
              typeof d == "function" && (e2 ? t2 = d : e2 = d);
          }
          var m2 = c === "GET" ? new Headers() : new Headers({"Content-Type": s2});
          r2 = new Request(u, {method: c, mode: "cors", body: h, headers: m2});
        }
        return (n2 = (n2 = (i2 = i2 || (u.includes("json") ? "json" : u.includes("xml") ? "xml" : "text")) === "jsonp" ? (0, v.default)(u, a) : fetch(r2)).then(function(e3) {
          if (!e3.ok) {
            var t3 = new Error(e3.body);
            throw t3.status = e3.status, t3.ok = false, t3;
          }
          var r3 = 0;
          switch (i2 !== "jsonp" && (r3 = e3.headers.get("content-length")), r3 && 64e6 < r3 && y.default._friendlyFileLoadError(7, u), i2) {
            case "json":
            case "jsonp":
              return e3.json();
            case "binary":
              return e3.blob();
            case "arrayBuffer":
              return e3.arrayBuffer();
            case "xml":
              return e3.text().then(function(e4) {
                var t4 = new DOMParser().parseFromString(e4, "text/xml");
                return new y.default.XML(t4.documentElement);
              });
            default:
              return e3.text();
          }
        })).then(e2 || function() {
        }), n2.catch(t2 || console.error), n2;
      }, window.URL = window.URL || window.webkitURL, y.default.prototype._pWriters = [], y.default.prototype.createWriter = function(e2, t2) {
        var r2;
        for (var i2 in y.default.prototype._pWriters)
          if (y.default.prototype._pWriters[i2].name === e2)
            return r2 = new y.default.PrintWriter(e2 + this.millis(), t2), y.default.prototype._pWriters.push(r2), r2;
        return r2 = new y.default.PrintWriter(e2, t2), y.default.prototype._pWriters.push(r2), r2;
      }, y.default.PrintWriter = function(r2, i2) {
        var n2 = this;
        this.name = r2, this.content = "", this.write = function(e2) {
          this.content += e2;
        }, this.print = function(e2) {
          this.content += "".concat(e2, "\n");
        }, this.clear = function() {
          this.content = "";
        }, this.close = function() {
          var e2 = [];
          for (var t2 in e2.push(this.content), y.default.prototype.writeFile(e2, r2, i2), y.default.prototype._pWriters)
            y.default.prototype._pWriters[t2].name === this.name && y.default.prototype._pWriters.splice(t2, 1);
          n2.clear(), n2 = {};
        };
      }, y.default.prototype.save = function(e2, t2, r2) {
        var i2 = arguments, n2 = this._curElement ? this._curElement.elt : this.elt;
        if (i2.length !== 0)
          if (i2[0] instanceof y.default.Renderer || i2[0] instanceof y.default.Graphics)
            y.default.prototype.saveCanvas(i2[0].elt, i2[1], i2[2]);
          else if (i2.length === 1 && typeof i2[0] == "string")
            y.default.prototype.saveCanvas(n2, i2[0]);
          else
            switch (l(i2[1], i2[2])[1]) {
              case "json":
                return void y.default.prototype.saveJSON(i2[0], i2[1], i2[2]);
              case "txt":
                return void y.default.prototype.saveStrings(i2[0], i2[1], i2[2]);
              default:
                i2[0] instanceof Array ? y.default.prototype.saveStrings(i2[0], i2[1], i2[2]) : i2[0] instanceof y.default.Table ? y.default.prototype.saveTable(i2[0], i2[1], i2[2]) : i2[0] instanceof y.default.Image ? y.default.prototype.saveCanvas(i2[0].canvas, i2[1]) : i2[0] instanceof y.default.SoundFile && y.default.prototype.saveSound(i2[0], i2[1], i2[2], i2[3]);
            }
        else
          y.default.prototype.saveCanvas(n2);
      }, y.default.prototype.saveJSON = function(e2, t2, r2) {
        var i2;
        y.default._validateParameters("saveJSON", arguments), i2 = r2 ? JSON.stringify(e2) : JSON.stringify(e2, void 0, 2), this.saveStrings(i2.split("\n"), t2, "json");
      }, y.default.prototype.saveJSONObject = y.default.prototype.saveJSON, y.default.prototype.saveJSONArray = y.default.prototype.saveJSON, y.default.prototype.saveStrings = function(e2, t2, r2, i2) {
        y.default._validateParameters("saveStrings", arguments);
        for (var n2 = r2 || "txt", a = this.createWriter(t2, n2), o = 0; o < e2.length; o++)
          i2 ? a.write(e2[o] + "\r\n") : a.write(e2[o] + "\n");
        a.close(), a.clear();
      }, y.default.prototype.saveTable = function(e2, t2, r2) {
        var i2;
        y.default._validateParameters("saveTable", arguments), i2 = r2 === void 0 ? t2.substring(t2.lastIndexOf(".") + 1, t2.length) : r2;
        var n2 = this.createWriter(t2, i2), a = e2.columns, o = ",";
        if (i2 === "tsv" && (o = "	"), i2 !== "html") {
          if (a[0] !== "0") {
            for (var s2 = 0; s2 < a.length; s2++)
              s2 < a.length - 1 ? n2.write(a[s2] + o) : n2.write(a[s2]);
            n2.write("\n");
          }
          for (var l2 = 0; l2 < e2.rows.length; l2++) {
            var u = void 0;
            for (u = 0; u < e2.rows[l2].arr.length; u++)
              u < e2.rows[l2].arr.length - 1 ? i2 === "csv" && e2.rows[l2].arr[u].includes(",") ? n2.write('"' + e2.rows[l2].arr[u] + '"' + o) : n2.write(e2.rows[l2].arr[u] + o) : i2 === "csv" && e2.rows[l2].arr[u].includes(",") ? n2.write('"' + e2.rows[l2].arr[u] + '"') : n2.write(e2.rows[l2].arr[u]);
            n2.write("\n");
          }
        } else {
          n2.print("<html>"), n2.print("<head>");
          if (n2.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'), n2.print("</head>"), n2.print("<body>"), n2.print("  <table>"), a[0] !== "0") {
            n2.print("    <tr>");
            for (var h = 0; h < a.length; h++) {
              var c = m(a[h]);
              n2.print("      <td>".concat(c)), n2.print("      </td>");
            }
            n2.print("    </tr>");
          }
          for (var f = 0; f < e2.rows.length; f++) {
            n2.print("    <tr>");
            for (var d = 0; d < e2.columns.length; d++) {
              var p = m(e2.rows[f].getString(d));
              n2.print("      <td>".concat(p)), n2.print("      </td>");
            }
            n2.print("    </tr>");
          }
          n2.print("  </table>"), n2.print("</body>"), n2.print("</html>");
        }
        n2.close(), n2.clear();
      }, y.default.prototype.writeFile = function(e2, t2, r2) {
        var i2 = "application/octet-stream";
        y.default.prototype._isSafari() && (i2 = "text/plain");
        var n2 = new Blob(e2, {type: i2});
        y.default.prototype.downloadFile(n2, t2, r2);
      }, y.default.prototype.downloadFile = function(e2, t2, r2) {
        var i2 = l(t2, r2), n2 = i2[0];
        if (e2 instanceof Blob)
          s.default.saveAs(e2, n2);
        else {
          var a = document.createElement("a");
          if (a.href = e2, a.download = n2, a.onclick = function(e3) {
            var t3;
            t3 = e3, document.body.removeChild(t3.target), e3.stopPropagation();
          }, a.style.display = "none", document.body.appendChild(a), y.default.prototype._isSafari()) {
            var o = "Hello, Safari user! To download this file...\n";
            o += "1. Go to File --> Save As.\n", o += '2. Choose "Page Source" as the Format.\n', o += '3. Name it with this extension: ."'.concat(i2[1], '"'), alert(o);
          }
          a.click();
        }
      }, y.default.prototype._checkFileExtension = l, y.default.prototype._isSafari = function() {
        return 0 < Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor");
      };
      var n = y.default;
      r.default = n;
    }, {"../core/friendly_errors/fes_core": 28, "../core/friendly_errors/file_errors": 29, "../core/friendly_errors/validate_params": 31, "../core/main": 36, "es6-promise/auto": 5, "fetch-jsonp": 7, "file-saver": 8, "whatwg-fetch": 15}], 63: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.Table = function(e2) {
        this.columns = [], this.rows = [];
      }, n.default.Table.prototype.addRow = function(e2) {
        var t2 = e2 || new n.default.TableRow();
        if (t2.arr === void 0 || t2.obj === void 0)
          throw new Error("invalid TableRow: ".concat(t2));
        return (t2.table = this).rows.push(t2), t2;
      }, n.default.Table.prototype.removeRow = function(e2) {
        this.rows[e2].table = null;
        var t2 = this.rows.splice(e2 + 1, this.rows.length);
        this.rows.pop(), this.rows = this.rows.concat(t2);
      }, n.default.Table.prototype.getRow = function(e2) {
        return this.rows[e2];
      }, n.default.Table.prototype.getRows = function() {
        return this.rows;
      }, n.default.Table.prototype.findRow = function(e2, t2) {
        if (typeof t2 == "string") {
          for (var r2 = 0; r2 < this.rows.length; r2++)
            if (this.rows[r2].obj[t2] === e2)
              return this.rows[r2];
        } else
          for (var i2 = 0; i2 < this.rows.length; i2++)
            if (this.rows[i2].arr[t2] === e2)
              return this.rows[i2];
        return null;
      }, n.default.Table.prototype.findRows = function(e2, t2) {
        var r2 = [];
        if (typeof t2 == "string")
          for (var i2 = 0; i2 < this.rows.length; i2++)
            this.rows[i2].obj[t2] === e2 && r2.push(this.rows[i2]);
        else
          for (var n2 = 0; n2 < this.rows.length; n2++)
            this.rows[n2].arr[t2] === e2 && r2.push(this.rows[n2]);
        return r2;
      }, n.default.Table.prototype.matchRow = function(e2, t2) {
        if (typeof t2 == "number") {
          for (var r2 = 0; r2 < this.rows.length; r2++)
            if (this.rows[r2].arr[t2].match(e2))
              return this.rows[r2];
        } else
          for (var i2 = 0; i2 < this.rows.length; i2++)
            if (this.rows[i2].obj[t2].match(e2))
              return this.rows[i2];
        return null;
      }, n.default.Table.prototype.matchRows = function(e2, t2) {
        var r2 = [];
        if (typeof t2 == "number")
          for (var i2 = 0; i2 < this.rows.length; i2++)
            this.rows[i2].arr[t2].match(e2) && r2.push(this.rows[i2]);
        else
          for (var n2 = 0; n2 < this.rows.length; n2++)
            this.rows[n2].obj[t2].match(e2) && r2.push(this.rows[n2]);
        return r2;
      }, n.default.Table.prototype.getColumn = function(e2) {
        var t2 = [];
        if (typeof e2 == "string")
          for (var r2 = 0; r2 < this.rows.length; r2++)
            t2.push(this.rows[r2].obj[e2]);
        else
          for (var i2 = 0; i2 < this.rows.length; i2++)
            t2.push(this.rows[i2].arr[e2]);
        return t2;
      }, n.default.Table.prototype.clearRows = function() {
        delete this.rows, this.rows = [];
      }, n.default.Table.prototype.addColumn = function(e2) {
        var t2 = e2 || null;
        this.columns.push(t2);
      }, n.default.Table.prototype.getColumnCount = function() {
        return this.columns.length;
      }, n.default.Table.prototype.getRowCount = function() {
        return this.rows.length;
      }, n.default.Table.prototype.removeTokens = function(e2, t2) {
        for (var r2 = [], i2 = 0; i2 < e2.length; i2++)
          r2.push(e2.charAt(i2).replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"));
        var n2 = new RegExp(r2.join("|"), "g");
        if (t2 === void 0)
          for (var a2 = 0; a2 < this.columns.length; a2++)
            for (var o = 0; o < this.rows.length; o++) {
              var s = this.rows[o].arr[a2];
              s = s.replace(n2, ""), this.rows[o].arr[a2] = s, this.rows[o].obj[this.columns[a2]] = s;
            }
        else if (typeof t2 == "string")
          for (var l = 0; l < this.rows.length; l++) {
            var u = this.rows[l].obj[t2];
            u = u.replace(n2, ""), this.rows[l].obj[t2] = u;
            var h = this.columns.indexOf(t2);
            this.rows[l].arr[h] = u;
          }
        else
          for (var c = 0; c < this.rows.length; c++) {
            var f = this.rows[c].arr[t2];
            f = f.replace(n2, ""), this.rows[c].arr[t2] = f, this.rows[c].obj[this.columns[t2]] = f;
          }
      }, n.default.Table.prototype.trim = function(e2) {
        var t2 = new RegExp(" ", "g");
        if (e2 === void 0)
          for (var r2 = 0; r2 < this.columns.length; r2++)
            for (var i2 = 0; i2 < this.rows.length; i2++) {
              var n2 = this.rows[i2].arr[r2];
              n2 = n2.replace(t2, ""), this.rows[i2].arr[r2] = n2, this.rows[i2].obj[this.columns[r2]] = n2;
            }
        else if (typeof e2 == "string")
          for (var a2 = 0; a2 < this.rows.length; a2++) {
            var o = this.rows[a2].obj[e2];
            o = o.replace(t2, ""), this.rows[a2].obj[e2] = o;
            var s = this.columns.indexOf(e2);
            this.rows[a2].arr[s] = o;
          }
        else
          for (var l = 0; l < this.rows.length; l++) {
            var u = this.rows[l].arr[e2];
            u = u.replace(t2, ""), this.rows[l].arr[e2] = u, this.rows[l].obj[this.columns[e2]] = u;
          }
      }, n.default.Table.prototype.removeColumn = function(e2) {
        var t2, r2;
        typeof e2 == "string" ? (t2 = e2, r2 = this.columns.indexOf(e2)) : (r2 = e2, t2 = this.columns[e2]);
        var i2 = this.columns.splice(r2 + 1, this.columns.length);
        this.columns.pop(), this.columns = this.columns.concat(i2);
        for (var n2 = 0; n2 < this.rows.length; n2++) {
          var a2 = this.rows[n2].arr, o = a2.splice(r2 + 1, a2.length);
          a2.pop(), this.rows[n2].arr = a2.concat(o), delete this.rows[n2].obj[t2];
        }
      }, n.default.Table.prototype.set = function(e2, t2, r2) {
        this.rows[e2].set(t2, r2);
      }, n.default.Table.prototype.setNum = function(e2, t2, r2) {
        this.rows[e2].setNum(t2, r2);
      }, n.default.Table.prototype.setString = function(e2, t2, r2) {
        this.rows[e2].setString(t2, r2);
      }, n.default.Table.prototype.get = function(e2, t2) {
        return this.rows[e2].get(t2);
      }, n.default.Table.prototype.getNum = function(e2, t2) {
        return this.rows[e2].getNum(t2);
      }, n.default.Table.prototype.getString = function(e2, t2) {
        return this.rows[e2].getString(t2);
      }, n.default.Table.prototype.getObject = function(e2) {
        for (var t2, r2 = {}, i2 = 0; i2 < this.rows.length; i2++)
          if (t2 = this.rows[i2].obj, typeof e2 == "string") {
            if (!(0 <= this.columns.indexOf(e2)))
              throw new Error('This table has no column named "'.concat(e2, '"'));
            r2[t2[e2]] = t2;
          } else
            r2[i2] = this.rows[i2].obj;
        return r2;
      }, n.default.Table.prototype.getArray = function() {
        for (var e2 = [], t2 = 0; t2 < this.rows.length; t2++)
          e2.push(this.rows[t2].arr);
        return e2;
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 64: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.TableRow = function(e2, t2) {
        var r2 = [], i2 = {};
        e2 && (t2 = t2 || ",", r2 = e2.split(t2));
        for (var n2 = 0; n2 < r2.length; n2++) {
          var a2 = n2, o = r2[n2];
          i2[a2] = o;
        }
        this.arr = r2, this.obj = i2, this.table = null;
      }, n.default.TableRow.prototype.set = function(e2, t2) {
        if (typeof e2 == "string") {
          var r2 = this.table.columns.indexOf(e2);
          if (!(0 <= r2))
            throw new Error('This table has no column named "'.concat(e2, '"'));
          this.obj[e2] = t2, this.arr[r2] = t2;
        } else {
          if (!(e2 < this.table.columns.length))
            throw new Error("Column #".concat(e2, " is out of the range of this table"));
          this.arr[e2] = t2;
          var i2 = this.table.columns[e2];
          this.obj[i2] = t2;
        }
      }, n.default.TableRow.prototype.setNum = function(e2, t2) {
        var r2 = parseFloat(t2);
        this.set(e2, r2);
      }, n.default.TableRow.prototype.setString = function(e2, t2) {
        var r2 = t2.toString();
        this.set(e2, r2);
      }, n.default.TableRow.prototype.get = function(e2) {
        return typeof e2 == "string" ? this.obj[e2] : this.arr[e2];
      }, n.default.TableRow.prototype.getNum = function(e2) {
        var t2;
        if ((t2 = typeof e2 == "string" ? parseFloat(this.obj[e2]) : parseFloat(this.arr[e2])).toString() === "NaN")
          throw "Error: ".concat(this.obj[e2], " is NaN (Not a Number)");
        return t2;
      }, n.default.TableRow.prototype.getString = function(e2) {
        return typeof e2 == "string" ? this.obj[e2].toString() : this.arr[e2].toString();
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 65: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, s = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function n(e2) {
        for (var t2 = [], r2 = 0; r2 < e2.length; r2++)
          t2.push(new s.default.XML(e2[r2]));
        return t2;
      }
      s.default.XML = function(e2) {
        if (e2)
          this.DOM = e2;
        else {
          var t2 = document.implementation.createDocument(null, "doc");
          this.DOM = t2.createElement("root");
        }
      }, s.default.XML.prototype.getParent = function() {
        return new s.default.XML(this.DOM.parentElement);
      }, s.default.XML.prototype.getName = function() {
        return this.DOM.tagName;
      }, s.default.XML.prototype.setName = function(e2) {
        var t2 = this.DOM.innerHTML, r2 = this.DOM.attributes, i2 = document.implementation.createDocument(null, "default").createElement(e2);
        i2.innerHTML = t2;
        for (var n2 = 0; n2 < r2.length; n2++)
          i2.setAttribute(r2[n2].nodeName, r2.nodeValue);
        this.DOM = i2;
      }, s.default.XML.prototype.hasChildren = function() {
        return 0 < this.DOM.children.length;
      }, s.default.XML.prototype.listChildren = function() {
        for (var e2 = [], t2 = 0; t2 < this.DOM.childNodes.length; t2++)
          e2.push(this.DOM.childNodes[t2].nodeName);
        return e2;
      }, s.default.XML.prototype.getChildren = function(e2) {
        return n(e2 ? this.DOM.getElementsByTagName(e2) : this.DOM.children);
      }, s.default.XML.prototype.getChild = function(e2) {
        if (typeof e2 != "string")
          return new s.default.XML(this.DOM.children[e2]);
        var t2 = true, r2 = false, i2 = void 0;
        try {
          for (var n2, a2 = this.DOM.children[Symbol.iterator](); !(t2 = (n2 = a2.next()).done); t2 = true) {
            var o = n2.value;
            if (o.tagName === e2)
              return new s.default.XML(o);
          }
        } catch (e3) {
          r2 = true, i2 = e3;
        } finally {
          try {
            t2 || a2.return == null || a2.return();
          } finally {
            if (r2)
              throw i2;
          }
        }
      }, s.default.XML.prototype.addChild = function(e2) {
        e2 instanceof s.default.XML && this.DOM.appendChild(e2.DOM);
      }, s.default.XML.prototype.removeChild = function(e2) {
        var t2 = -1;
        if (typeof e2 == "string") {
          for (var r2 = 0; r2 < this.DOM.children.length; r2++)
            if (this.DOM.children[r2].tagName === e2) {
              t2 = r2;
              break;
            }
        } else
          t2 = e2;
        t2 !== -1 && this.DOM.removeChild(this.DOM.children[t2]);
      }, s.default.XML.prototype.getAttributeCount = function() {
        return this.DOM.attributes.length;
      }, s.default.XML.prototype.listAttributes = function() {
        var e2 = [], t2 = true, r2 = false, i2 = void 0;
        try {
          for (var n2, a2 = this.DOM.attributes[Symbol.iterator](); !(t2 = (n2 = a2.next()).done); t2 = true) {
            var o = n2.value;
            e2.push(o.nodeName);
          }
        } catch (e3) {
          r2 = true, i2 = e3;
        } finally {
          try {
            t2 || a2.return == null || a2.return();
          } finally {
            if (r2)
              throw i2;
          }
        }
        return e2;
      }, s.default.XML.prototype.hasAttribute = function(e2) {
        var t2 = {}, r2 = true, i2 = false, n2 = void 0;
        try {
          for (var a2, o = this.DOM.attributes[Symbol.iterator](); !(r2 = (a2 = o.next()).done); r2 = true) {
            var s2 = a2.value;
            t2[s2.nodeName] = s2.nodeValue;
          }
        } catch (e3) {
          i2 = true, n2 = e3;
        } finally {
          try {
            r2 || o.return == null || o.return();
          } finally {
            if (i2)
              throw n2;
          }
        }
        return !!t2[e2];
      }, s.default.XML.prototype.getNum = function(e2, t2) {
        var r2 = {}, i2 = true, n2 = false, a2 = void 0;
        try {
          for (var o, s2 = this.DOM.attributes[Symbol.iterator](); !(i2 = (o = s2.next()).done); i2 = true) {
            var l = o.value;
            r2[l.nodeName] = l.nodeValue;
          }
        } catch (e3) {
          n2 = true, a2 = e3;
        } finally {
          try {
            i2 || s2.return == null || s2.return();
          } finally {
            if (n2)
              throw a2;
          }
        }
        return Number(r2[e2]) || t2 || 0;
      }, s.default.XML.prototype.getString = function(e2, t2) {
        var r2 = {}, i2 = true, n2 = false, a2 = void 0;
        try {
          for (var o, s2 = this.DOM.attributes[Symbol.iterator](); !(i2 = (o = s2.next()).done); i2 = true) {
            var l = o.value;
            r2[l.nodeName] = l.nodeValue;
          }
        } catch (e3) {
          n2 = true, a2 = e3;
        } finally {
          try {
            i2 || s2.return == null || s2.return();
          } finally {
            if (n2)
              throw a2;
          }
        }
        return r2[e2] ? String(r2[e2]) : t2 || null;
      }, s.default.XML.prototype.setAttribute = function(e2, t2) {
        this.DOM.setAttribute(e2, t2);
      }, s.default.XML.prototype.getContent = function(e2) {
        return this.DOM.textContent.replace(/\s\s+/g, ",") || e2 || null;
      }, s.default.XML.prototype.setContent = function(e2) {
        this.DOM.children.length || (this.DOM.textContent = e2);
      }, s.default.XML.prototype.serialize = function() {
        return new XMLSerializer().serializeToString(this.DOM);
      };
      var a = s.default;
      r.default = a;
    }, {"../core/main": 36}], 66: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, s = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function n() {
        if (typeof Math.hypot == "function")
          return Math.hypot.apply(null, arguments);
        for (var e2 = arguments.length, t2 = [], r2 = 0, i2 = 0; i2 < e2; i2++) {
          var n2 = arguments[i2];
          if ((n2 = +n2) === 1 / 0 || n2 === -1 / 0)
            return 1 / 0;
          r2 < (n2 = Math.abs(n2)) && (r2 = n2), t2[i2] = n2;
        }
        r2 === 0 && (r2 = 1);
        for (var a2 = 0, o = 0, s2 = 0; s2 < e2; s2++) {
          var l = t2[s2] / r2, u = l * l - o, h = a2 + u;
          o = h - a2 - u, a2 = h;
        }
        return Math.sqrt(a2) * r2;
      }
      s.default.prototype.abs = Math.abs, s.default.prototype.ceil = Math.ceil, s.default.prototype.constrain = function(e2, t2, r2) {
        return s.default._validateParameters("constrain", arguments), Math.max(Math.min(e2, r2), t2);
      }, s.default.prototype.dist = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return s.default._validateParameters("dist", t2), t2.length === 4 ? n(t2[2] - t2[0], t2[3] - t2[1]) : t2.length === 6 ? n(t2[3] - t2[0], t2[4] - t2[1], t2[5] - t2[2]) : void 0;
      }, s.default.prototype.exp = Math.exp, s.default.prototype.floor = Math.floor, s.default.prototype.lerp = function(e2, t2, r2) {
        return s.default._validateParameters("lerp", arguments), r2 * (t2 - e2) + e2;
      }, s.default.prototype.log = Math.log, s.default.prototype.mag = function(e2, t2) {
        return s.default._validateParameters("mag", arguments), n(e2, t2);
      }, s.default.prototype.map = function(e2, t2, r2, i2, n2, a2) {
        s.default._validateParameters("map", arguments);
        var o = (e2 - t2) / (r2 - t2) * (n2 - i2) + i2;
        return a2 ? i2 < n2 ? this.constrain(o, i2, n2) : this.constrain(o, n2, i2) : o;
      }, s.default.prototype.max = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return t2[0] instanceof Array ? Math.max.apply(null, t2[0]) : Math.max.apply(null, t2);
      }, s.default.prototype.min = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return t2[0] instanceof Array ? Math.min.apply(null, t2[0]) : Math.min.apply(null, t2);
      }, s.default.prototype.norm = function(e2, t2, r2) {
        return s.default._validateParameters("norm", arguments), this.map(e2, t2, r2, 0, 1);
      }, s.default.prototype.pow = Math.pow, s.default.prototype.round = function(e2, t2) {
        return t2 ? Number(Math.round(e2 + "e" + t2) + "e-" + t2) : Math.round(e2);
      }, s.default.prototype.sq = function(e2) {
        return e2 * e2;
      }, s.default.prototype.sqrt = Math.sqrt, s.default.prototype.fract = function(e2) {
        s.default._validateParameters("fract", arguments);
        var t2 = 0, r2 = Number(e2);
        if (isNaN(r2) || Math.abs(r2) === 1 / 0)
          return r2;
        if (r2 < 0 && (r2 = -r2, t2 = 1), !String(r2).includes(".") || String(r2).includes("e"))
          return r2 < 1 ? Math.abs(t2 - r2) : 0;
        var i2 = String(r2);
        return i2 = Number("0" + i2.slice(i2.indexOf("."))), Math.abs(t2 - i2);
      };
      var a = s.default;
      r.default = a;
    }, {"../core/main": 36}], 67: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype.createVector = function(e2, t2, r2) {
        return this instanceof n.default ? new n.default.Vector(this, arguments) : new n.default.Vector(e2, t2, r2);
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 68: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function b(e2) {
        return 0.5 * (1 - Math.cos(e2 * Math.PI));
      }
      var _, x = 4095, w = 4, S = 0.5;
      n.default.prototype.noise = function(e2) {
        var t2 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0, r2 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 0;
        if (_ == null) {
          _ = new Array(4096);
          for (var i2 = 0; i2 < 4096; i2++)
            _[i2] = Math.random();
        }
        e2 < 0 && (e2 = -e2), t2 < 0 && (t2 = -t2), r2 < 0 && (r2 = -r2);
        for (var n2, a2, o, s, l, u = Math.floor(e2), h = Math.floor(t2), c = Math.floor(r2), f = e2 - u, d = t2 - h, p = r2 - c, m = 0, v = 0.5, y = 0; y < w; y++) {
          var g = u + (h << 4) + (c << 8);
          n2 = b(f), a2 = b(d), o = _[g & x], o += n2 * (_[g + 1 & x] - o), s = _[g + 16 & x], o += a2 * ((s += n2 * (_[g + 16 + 1 & x] - s)) - o), s = _[(g += 256) & x], s += n2 * (_[g + 1 & x] - s), l = _[g + 16 & x], s += a2 * ((l += n2 * (_[g + 16 + 1 & x] - l)) - s), m += (o += b(p) * (s - o)) * v, v *= S, u <<= 1, h <<= 1, c <<= 1, 1 <= (f *= 2) && (u++, f--), 1 <= (d *= 2) && (h++, d--), 1 <= (p *= 2) && (c++, p--);
        }
        return m;
      }, n.default.prototype.noiseDetail = function(e2, t2) {
        0 < e2 && (w = e2), 0 < t2 && (S = t2);
      }, n.default.prototype.noiseSeed = function(e2) {
        var t2, r2, i2, n2 = (i2 = 4294967296, {setSeed: function(e3) {
          r2 = t2 = (e3 == null ? Math.random() * i2 : e3) >>> 0;
        }, getSeed: function() {
          return t2;
        }, rand: function() {
          return (r2 = (1664525 * r2 + 1013904223) % i2) / i2;
        }});
        n2.setSeed(e2), _ = new Array(4096);
        for (var a2 = 0; a2 < 4096; a2++)
          _[a2] = n2.rand();
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 69: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, l = (i = e("../core/main")) && i.__esModule ? i : {default: i}, a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      l.default.Vector = function(e2, t2, r2) {
        var i2, n2, a2;
        a2 = e2 instanceof l.default ? (this.p5 = e2, i2 = t2[0] || 0, n2 = t2[1] || 0, t2[2] || 0) : (i2 = e2 || 0, n2 = t2 || 0, r2 || 0), this.x = i2, this.y = n2, this.z = a2;
      }, l.default.Vector.prototype.toString = function() {
        return "p5.Vector Object : [".concat(this.x, ", ").concat(this.y, ", ").concat(this.z, "]");
      }, l.default.Vector.prototype.set = function(e2, t2, r2) {
        return e2 instanceof l.default.Vector ? (this.x = e2.x || 0, this.y = e2.y || 0, this.z = e2.z || 0) : e2 instanceof Array ? (this.x = e2[0] || 0, this.y = e2[1] || 0, this.z = e2[2] || 0) : (this.x = e2 || 0, this.y = t2 || 0, this.z = r2 || 0), this;
      }, l.default.Vector.prototype.copy = function() {
        return this.p5 ? new l.default.Vector(this.p5, [this.x, this.y, this.z]) : new l.default.Vector(this.x, this.y, this.z);
      }, l.default.Vector.prototype.add = function(e2, t2, r2) {
        return e2 instanceof l.default.Vector ? (this.x += e2.x || 0, this.y += e2.y || 0, this.z += e2.z || 0) : e2 instanceof Array ? (this.x += e2[0] || 0, this.y += e2[1] || 0, this.z += e2[2] || 0) : (this.x += e2 || 0, this.y += t2 || 0, this.z += r2 || 0), this;
      };
      function u(e2, t2) {
        return e2 !== 0 && (this.x = this.x % e2), t2 !== 0 && (this.y = this.y % t2), this;
      }
      function h(e2, t2, r2) {
        return e2 !== 0 && (this.x = this.x % e2), t2 !== 0 && (this.y = this.y % t2), r2 !== 0 && (this.z = this.z % r2), this;
      }
      l.default.Vector.prototype.rem = function(e2, t2, r2) {
        if (e2 instanceof l.default.Vector) {
          if (Number.isFinite(e2.x) && Number.isFinite(e2.y) && Number.isFinite(e2.z)) {
            var i2 = parseFloat(e2.x), n2 = parseFloat(e2.y), a2 = parseFloat(e2.z);
            h.call(this, i2, n2, a2);
          }
        } else if (e2 instanceof Array)
          e2.every(function(e3) {
            return Number.isFinite(e3);
          }) && (e2.length === 2 && u.call(this, e2[0], e2[1]), e2.length === 3 && h.call(this, e2[0], e2[1], e2[2]));
        else if (arguments.length === 1) {
          if (Number.isFinite(e2) && e2 !== 0)
            return this.x = this.x % e2, this.y = this.y % e2, this.z = this.z % e2, this;
        } else if (arguments.length === 2) {
          var o2 = Array.prototype.slice.call(arguments);
          o2.every(function(e3) {
            return Number.isFinite(e3);
          }) && o2.length === 2 && u.call(this, o2[0], o2[1]);
        } else if (arguments.length === 3) {
          var s2 = Array.prototype.slice.call(arguments);
          s2.every(function(e3) {
            return Number.isFinite(e3);
          }) && s2.length === 3 && h.call(this, s2[0], s2[1], s2[2]);
        }
      }, l.default.Vector.prototype.sub = function(e2, t2, r2) {
        return e2 instanceof l.default.Vector ? (this.x -= e2.x || 0, this.y -= e2.y || 0, this.z -= e2.z || 0) : e2 instanceof Array ? (this.x -= e2[0] || 0, this.y -= e2[1] || 0, this.z -= e2[2] || 0) : (this.x -= e2 || 0, this.y -= t2 || 0, this.z -= r2 || 0), this;
      }, l.default.Vector.prototype.mult = function(e2, t2, r2) {
        if (e2 instanceof l.default.Vector)
          return Number.isFinite(e2.x) && Number.isFinite(e2.y) && Number.isFinite(e2.z) && typeof e2.x == "number" && typeof e2.y == "number" && typeof e2.z == "number" ? (this.x *= e2.x, this.y *= e2.y, this.z *= e2.z) : console.warn("p5.Vector.prototype.mult:", "x contains components that are either undefined or not finite numbers"), this;
        if (e2 instanceof Array)
          return e2.every(function(e3) {
            return Number.isFinite(e3);
          }) && e2.every(function(e3) {
            return typeof e3 == "number";
          }) ? e2.length === 1 ? (this.x *= e2[0], this.y *= e2[0], this.z *= e2[0]) : e2.length === 2 ? (this.x *= e2[0], this.y *= e2[1]) : e2.length === 3 && (this.x *= e2[0], this.y *= e2[1], this.z *= e2[2]) : console.warn("p5.Vector.prototype.mult:", "x contains elements that are either undefined or not finite numbers"), this;
        var i2 = Array.prototype.slice.call(arguments);
        return i2.every(function(e3) {
          return Number.isFinite(e3);
        }) && i2.every(function(e3) {
          return typeof e3 == "number";
        }) ? (arguments.length === 1 && (this.x *= e2, this.y *= e2, this.z *= e2), arguments.length === 2 && (this.x *= e2, this.y *= t2), arguments.length === 3 && (this.x *= e2, this.y *= t2, this.z *= r2)) : console.warn("p5.Vector.prototype.mult:", "x, y, or z arguments are either undefined or not a finite number"), this;
      }, l.default.Vector.prototype.div = function(e2, t2, r2) {
        if (e2 instanceof l.default.Vector) {
          if (Number.isFinite(e2.x) && Number.isFinite(e2.y) && Number.isFinite(e2.z) && typeof e2.x == "number" && typeof e2.y == "number" && typeof e2.z == "number") {
            if (e2.x === 0 || e2.y === 0 || e2.z === 0)
              return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
            this.x /= e2.x, this.y /= e2.y, this.z /= e2.z;
          } else
            console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
          return this;
        }
        if (e2 instanceof Array) {
          if (e2.every(function(e3) {
            return Number.isFinite(e3);
          }) && e2.every(function(e3) {
            return typeof e3 == "number";
          })) {
            if (e2.some(function(e3) {
              return e3 === 0;
            }))
              return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
            e2.length === 1 ? (this.x /= e2[0], this.y /= e2[0], this.z /= e2[0]) : e2.length === 2 ? (this.x /= e2[0], this.y /= e2[1]) : e2.length === 3 && (this.x /= e2[0], this.y /= e2[1], this.z /= e2[2]);
          } else
            console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
          return this;
        }
        var i2 = Array.prototype.slice.call(arguments);
        if (i2.every(function(e3) {
          return Number.isFinite(e3);
        }) && i2.every(function(e3) {
          return typeof e3 == "number";
        })) {
          if (i2.some(function(e3) {
            return e3 === 0;
          }))
            return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
          arguments.length === 1 && (this.x /= e2, this.y /= e2, this.z /= e2), arguments.length === 2 && (this.x /= e2, this.y /= t2), arguments.length === 3 && (this.x /= e2, this.y /= t2, this.z /= r2);
        } else
          console.warn("p5.Vector.prototype.div:", "x, y, or z arguments are either undefined or not a finite number");
        return this;
      }, l.default.Vector.prototype.mag = function() {
        return Math.sqrt(this.magSq());
      }, l.default.Vector.prototype.magSq = function() {
        var e2 = this.x, t2 = this.y, r2 = this.z;
        return e2 * e2 + t2 * t2 + r2 * r2;
      }, l.default.Vector.prototype.dot = function(e2, t2, r2) {
        return e2 instanceof l.default.Vector ? this.dot(e2.x, e2.y, e2.z) : this.x * (e2 || 0) + this.y * (t2 || 0) + this.z * (r2 || 0);
      }, l.default.Vector.prototype.cross = function(e2) {
        var t2 = this.y * e2.z - this.z * e2.y, r2 = this.z * e2.x - this.x * e2.z, i2 = this.x * e2.y - this.y * e2.x;
        return this.p5 ? new l.default.Vector(this.p5, [t2, r2, i2]) : new l.default.Vector(t2, r2, i2);
      }, l.default.Vector.prototype.dist = function(e2) {
        return e2.copy().sub(this).mag();
      }, l.default.Vector.prototype.normalize = function() {
        var e2 = this.mag();
        return e2 !== 0 && this.mult(1 / e2), this;
      }, l.default.Vector.prototype.limit = function(e2) {
        var t2 = this.magSq();
        return e2 * e2 < t2 && this.div(Math.sqrt(t2)).mult(e2), this;
      }, l.default.Vector.prototype.setMag = function(e2) {
        return this.normalize().mult(e2);
      }, l.default.Vector.prototype.heading = function() {
        var e2 = Math.atan2(this.y, this.x);
        return this.p5 ? this.p5._fromRadians(e2) : e2;
      }, l.default.Vector.prototype.setHeading = function(e2) {
        var t2 = this.mag();
        return this.x = t2 * Math.cos(e2), this.y = t2 * Math.sin(e2), this;
      }, l.default.Vector.prototype.rotate = function(e2) {
        var t2 = this.heading() + e2;
        this.p5 && (t2 = this.p5._toRadians(t2));
        var r2 = this.mag();
        return this.x = Math.cos(t2) * r2, this.y = Math.sin(t2) * r2, this;
      }, l.default.Vector.prototype.angleBetween = function(e2) {
        var t2, r2 = this.dot(e2) / (this.mag() * e2.mag());
        return t2 = Math.acos(Math.min(1, Math.max(-1, r2))), t2 *= Math.sign(this.cross(e2).z || 1), this.p5 && (t2 = this.p5._fromRadians(t2)), t2;
      }, l.default.Vector.prototype.lerp = function(e2, t2, r2, i2) {
        return e2 instanceof l.default.Vector ? this.lerp(e2.x, e2.y, e2.z, t2) : (this.x += (e2 - this.x) * i2 || 0, this.y += (t2 - this.y) * i2 || 0, this.z += (r2 - this.z) * i2 || 0, this);
      }, l.default.Vector.prototype.reflect = function(e2) {
        return e2.normalize(), this.sub(e2.mult(2 * this.dot(e2)));
      }, l.default.Vector.prototype.array = function() {
        return [this.x || 0, this.y || 0, this.z || 0];
      }, l.default.Vector.prototype.equals = function(e2, t2, r2) {
        var i2, n2, a2;
        return a2 = e2 instanceof l.default.Vector ? (i2 = e2.x || 0, n2 = e2.y || 0, e2.z || 0) : e2 instanceof Array ? (i2 = e2[0] || 0, n2 = e2[1] || 0, e2[2] || 0) : (i2 = e2 || 0, n2 = t2 || 0, r2 || 0), this.x === i2 && this.y === n2 && this.z === a2;
      }, l.default.Vector.fromAngle = function(e2, t2) {
        return t2 === void 0 && (t2 = 1), new l.default.Vector(t2 * Math.cos(e2), t2 * Math.sin(e2), 0);
      }, l.default.Vector.fromAngles = function(e2, t2, r2) {
        r2 === void 0 && (r2 = 1);
        var i2 = Math.cos(t2), n2 = Math.sin(t2), a2 = Math.cos(e2), o2 = Math.sin(e2);
        return new l.default.Vector(r2 * o2 * n2, -r2 * a2, r2 * o2 * i2);
      }, l.default.Vector.random2D = function() {
        return this.fromAngle(Math.random() * a.TWO_PI);
      }, l.default.Vector.random3D = function() {
        var e2 = Math.random() * a.TWO_PI, t2 = 2 * Math.random() - 1, r2 = Math.sqrt(1 - t2 * t2), i2 = r2 * Math.cos(e2), n2 = r2 * Math.sin(e2);
        return new l.default.Vector(i2, n2, t2);
      }, l.default.Vector.add = function(e2, t2, r2) {
        return r2 ? r2.set(e2) : (r2 = e2.copy(), arguments.length === 3 && l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.add")), r2.add(t2), r2;
      }, l.default.Vector.rem = function(e2, t2) {
        if (e2 instanceof l.default.Vector && t2 instanceof l.default.Vector) {
          var r2 = e2.copy();
          return r2.rem(t2), r2;
        }
      }, l.default.Vector.sub = function(e2, t2, r2) {
        return r2 ? r2.set(e2) : (r2 = e2.copy(), arguments.length === 3 && l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.sub")), r2.sub(t2), r2;
      }, l.default.Vector.mult = function(e2, t2, r2) {
        return r2 ? r2.set(e2) : (r2 = e2.copy(), arguments.length === 3 && l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.mult")), r2.mult(t2), r2;
      }, l.default.Vector.div = function(e2, t2, r2) {
        return r2 ? r2.set(e2) : (r2 = e2.copy(), arguments.length === 3 && l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.div")), r2.div(t2), r2;
      }, l.default.Vector.dot = function(e2, t2) {
        return e2.dot(t2);
      }, l.default.Vector.cross = function(e2, t2) {
        return e2.cross(t2);
      }, l.default.Vector.dist = function(e2, t2) {
        return e2.dist(t2);
      }, l.default.Vector.lerp = function(e2, t2, r2, i2) {
        return i2 ? i2.set(e2) : (i2 = e2.copy(), arguments.length === 4 && l.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.lerp")), i2.lerp(t2, r2), i2;
      }, l.default.Vector.mag = function(e2) {
        var t2 = e2.x, r2 = e2.y, i2 = e2.z, n2 = t2 * t2 + r2 * r2 + i2 * i2;
        return Math.sqrt(n2);
      };
      var n = l.default.Vector;
      r.default = n;
    }, {"../core/constants": 26, "../core/main": 36}], 70: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      var a = "_lcg_random_state", o = 4294967296, s = 0;
      n.default.prototype._lcg = function(e2) {
        return this[e2] = (1664525 * this[e2] + 1013904223) % o, this[e2] / o;
      }, n.default.prototype._lcgSetSeed = function(e2, t2) {
        this[e2] = (t2 == null ? Math.random() * o : t2) >>> 0;
      }, n.default.prototype.randomSeed = function(e2) {
        this._lcgSetSeed(a, e2), this._gaussian_previous = false;
      }, n.default.prototype.random = function(e2, t2) {
        var r2;
        if (n.default._validateParameters("random", arguments), r2 = this[a] != null ? this._lcg(a) : Math.random(), e2 === void 0)
          return r2;
        if (t2 === void 0)
          return e2 instanceof Array ? e2[Math.floor(r2 * e2.length)] : r2 * e2;
        if (t2 < e2) {
          var i2 = e2;
          e2 = t2, t2 = i2;
        }
        return r2 * (t2 - e2) + e2;
      }, n.default.prototype.randomGaussian = function(e2) {
        var t2, r2, i2, n2, a2 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 1;
        if (this._gaussian_previous)
          t2 = s, this._gaussian_previous = false;
        else {
          for (; 1 <= (n2 = (r2 = this.random(2) - 1) * r2 + (i2 = this.random(2) - 1) * i2); )
            ;
          t2 = r2 * (n2 = Math.sqrt(-2 * Math.log(n2) / n2)), s = i2 * n2, this._gaussian_previous = true;
        }
        return t2 * a2 + (e2 || 0);
      };
      var l = n.default;
      r.default = l;
    }, {"../core/main": 36}], 71: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i}, a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      n.default.prototype._angleMode = a.RADIANS, n.default.prototype.acos = function(e2) {
        return this._fromRadians(Math.acos(e2));
      }, n.default.prototype.asin = function(e2) {
        return this._fromRadians(Math.asin(e2));
      }, n.default.prototype.atan = function(e2) {
        return this._fromRadians(Math.atan(e2));
      }, n.default.prototype.atan2 = function(e2, t2) {
        return this._fromRadians(Math.atan2(e2, t2));
      }, n.default.prototype.cos = function(e2) {
        return Math.cos(this._toRadians(e2));
      }, n.default.prototype.sin = function(e2) {
        return Math.sin(this._toRadians(e2));
      }, n.default.prototype.tan = function(e2) {
        return Math.tan(this._toRadians(e2));
      }, n.default.prototype.degrees = function(e2) {
        return e2 * a.RAD_TO_DEG;
      }, n.default.prototype.radians = function(e2) {
        return e2 * a.DEG_TO_RAD;
      }, n.default.prototype.angleMode = function(e2) {
        e2 !== a.DEGREES && e2 !== a.RADIANS || (this._angleMode = e2);
      }, n.default.prototype._toRadians = function(e2) {
        return this._angleMode === a.DEGREES ? e2 * a.DEG_TO_RAD : e2;
      }, n.default.prototype._toDegrees = function(e2) {
        return this._angleMode === a.RADIANS ? e2 * a.RAD_TO_DEG : e2;
      }, n.default.prototype._fromRadians = function(e2) {
        return this._angleMode === a.DEGREES ? e2 * a.RAD_TO_DEG : e2;
      };
      var l = n.default;
      r.default = l;
    }, {"../core/constants": 26, "../core/main": 36}], 72: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype.textAlign = function(e2, t2) {
        var r2;
        return n.default._validateParameters("textAlign", arguments), (r2 = this._renderer).textAlign.apply(r2, arguments);
      }, n.default.prototype.textLeading = function(e2) {
        var t2;
        return n.default._validateParameters("textLeading", arguments), (t2 = this._renderer).textLeading.apply(t2, arguments);
      }, n.default.prototype.textSize = function(e2) {
        var t2;
        return n.default._validateParameters("textSize", arguments), (t2 = this._renderer).textSize.apply(t2, arguments);
      }, n.default.prototype.textStyle = function(e2) {
        var t2;
        return n.default._validateParameters("textStyle", arguments), (t2 = this._renderer).textStyle.apply(t2, arguments);
      }, n.default.prototype.textWidth = function() {
        for (var e2, t2 = arguments.length, r2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r2[i2] = arguments[i2];
        return r2[0] += "", n.default._validateParameters("textWidth", r2), r2[0].length === 0 ? 0 : (e2 = this._renderer).textWidth.apply(e2, r2);
      }, n.default.prototype.textAscent = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return n.default._validateParameters("textAscent", t2), this._renderer.textAscent();
      }, n.default.prototype.textDescent = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return n.default._validateParameters("textDescent", t2), this._renderer.textDescent();
      }, n.default.prototype._updateTextMetrics = function() {
        return this._renderer._updateTextMetrics();
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 73: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, f = (i = e("../core/main")) && i.__esModule ? i : {default: i}, n = l(e("../core/constants")), a = l(e("opentype.js"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      function l(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        return r2.default = e2, t2 && t2.set(e2, r2), r2;
      }
      e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), f.default.prototype.loadFont = function(s2, l2, u2) {
        f.default._validateParameters("loadFont", arguments);
        var h = new f.default.Font(this), c = this;
        return a.load(s2, function(e2, t2) {
          if (e2)
            return f.default._friendlyFileLoadError(4, s2), u2 !== void 0 ? u2(e2) : void console.error(e2, s2);
          h.font = t2, l2 !== void 0 && l2(h), c._decrementPreload();
          var r2, i2, n2 = s2.split("\\").pop().split("/").pop(), a2 = n2.lastIndexOf("."), o2 = a2 < 1 ? null : n2.substr(a2 + 1);
          ["ttf", "otf", "woff", "woff2"].includes(o2) && (r2 = n2.substr(0, a2), (i2 = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r2, ";\nsrc: url(").concat(s2, ");\n}\n"))), document.head.appendChild(i2));
        }), h;
      }, f.default.prototype.text = function(e2, t2, r2, i2, n2) {
        var a2;
        return f.default._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? (a2 = this._renderer).text.apply(a2, arguments) : this;
      }, f.default.prototype.textFont = function(e2, t2) {
        if (f.default._validateParameters("textFont", arguments), arguments.length) {
          if (!e2)
            throw new Error("null font passed to textFont");
          return this._renderer._setProperty("_textFont", e2), t2 && (this._renderer._setProperty("_textSize", t2), this._renderer._setProperty("_textLeading", t2 * n._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
        }
        return this._renderer._textFont;
      };
      var u = f.default;
      r.default = u;
    }, {"../core/constants": 26, "../core/friendly_errors/fes_core": 28, "../core/friendly_errors/file_errors": 29, "../core/friendly_errors/validate_params": 31, "../core/main": 36, "opentype.js": 12}], 74: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i}, x = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || d(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = o();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function o() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return o = function() {
          return e2;
        }, e2;
      }
      function d(e2) {
        return (d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      function p(e2, t2) {
        for (var r2 = function(e3, t3) {
          if (d(e3) !== "object")
            e3 = t3;
          else
            for (var r3 in t3)
              e3[r3] === void 0 && (e3[r3] = t3[r3]);
          return e3;
        }(t2, {sampleFactor: 0.1, simplifyThreshold: 0}), i2 = l(e2, 0, 1), n2 = i2 / (i2 * r2.sampleFactor), a2 = [], o2 = 0; o2 < i2; o2 += n2)
          a2.push(l(e2, o2));
        return r2.simplifyThreshold && function(e3) {
          for (var t3 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0, r3 = 0, i3 = e3.length - 1; 3 < e3.length && 0 <= i3; --i3)
            f(s(e3, i3 - 1), s(e3, i3), s(e3, i3 + 1), t3) && (e3.splice(i3 % e3.length, 1), r3++);
        }(a2, r2.simplifyThreshold), a2;
      }
      function m(e2) {
        for (var t2, r2 = [], i2 = 0; i2 < e2.length; i2++)
          e2[i2].type === "M" && (t2 && r2.push(t2), t2 = []), t2.push(a(e2[i2]));
        return r2.push(t2), r2;
      }
      function a(e2) {
        var t2 = [e2.type];
        return e2.type === "M" || e2.type === "L" ? t2.push(e2.x, e2.y) : e2.type === "C" ? t2.push(e2.x1, e2.y1, e2.x2, e2.y2, e2.x, e2.y) : e2.type === "Q" && t2.push(e2.x1, e2.y1, e2.x, e2.y), t2;
      }
      function s(e2, t2) {
        var r2 = e2.length;
        return e2[t2 < 0 ? t2 % r2 + r2 : t2 % r2];
      }
      function f(e2, t2, r2, i2) {
        if (!i2)
          return (n2 = e2, o2 = r2, ((a2 = t2)[0] - n2[0]) * (o2[1] - n2[1]) - (o2[0] - n2[0]) * (a2[1] - n2[1])) == 0;
        var n2, a2, o2;
        f.tmpPoint1 === void 0 && (f.tmpPoint1 = [], f.tmpPoint2 = []);
        var s2 = f.tmpPoint1, l2 = f.tmpPoint2;
        s2.x = t2.x - e2.x, s2.y = t2.y - e2.y, l2.x = r2.x - t2.x, l2.y = r2.y - t2.y;
        var u2 = s2.x * l2.x + s2.y * l2.y, h = Math.sqrt(s2.x * s2.x + s2.y * s2.y), c2 = Math.sqrt(l2.x * l2.x + l2.y * l2.y);
        return Math.acos(u2 / (h * c2)) < i2;
      }
      function c(e2, t2, r2, i2, n2, a2, o2, s2, l2) {
        var u2 = 1 - l2, h = Math.pow(u2, 3), c2 = Math.pow(u2, 2), f2 = l2 * l2, d2 = f2 * l2, p2 = h * e2 + 3 * c2 * l2 * r2 + 3 * u2 * l2 * l2 * n2 + d2 * o2, m2 = h * t2 + 3 * c2 * l2 * i2 + 3 * u2 * l2 * l2 * a2 + d2 * s2, v2 = e2 + 2 * l2 * (r2 - e2) + f2 * (n2 - 2 * r2 + e2), y2 = t2 + 2 * l2 * (i2 - t2) + f2 * (a2 - 2 * i2 + t2), g2 = r2 + 2 * l2 * (n2 - r2) + f2 * (o2 - 2 * n2 + r2), b2 = i2 + 2 * l2 * (a2 - i2) + f2 * (s2 - 2 * a2 + i2), _2 = u2 * e2 + l2 * r2, x2 = u2 * t2 + l2 * i2, w2 = u2 * n2 + l2 * o2, S2 = u2 * a2 + l2 * s2, M = 90 - 180 * Math.atan2(v2 - g2, y2 - b2) / Math.PI;
        return (g2 < v2 || y2 < b2) && (M += 180), {x: p2, y: m2, m: {x: v2, y: y2}, n: {x: g2, y: b2}, start: {x: _2, y: x2}, end: {x: w2, y: S2}, alpha: M};
      }
      function v(e2, t2, r2, i2, n2, a2, o2, s2, l2) {
        return l2 == null ? y(e2, t2, r2, i2, n2, a2, o2, s2) : c(e2, t2, r2, i2, n2, a2, o2, s2, function(e3, t3, r3, i3, n3, a3, o3, s3, l3) {
          if (l3 < 0 || y(e3, t3, r3, i3, n3, a3, o3, s3) < l3)
            return;
          var u2, h = 0.5, c2 = 1 - h;
          u2 = y(e3, t3, r3, i3, n3, a3, o3, s3, c2);
          for (; 0.01 < Math.abs(u2 - l3); )
            u2 = y(e3, t3, r3, i3, n3, a3, o3, s3, c2 += (u2 < l3 ? 1 : -1) * (h /= 2));
          return c2;
        }(e2, t2, r2, i2, n2, a2, o2, s2, l2));
      }
      function l(e2, t2, r2) {
        for (var i2, n2, a2, o2, s2, l2 = 0, u2 = 0, h = (e2 = function(e3, t3) {
          function r3(e4, t4, r4) {
            var i4, n4;
            if (!e4)
              return ["C", t4.x, t4.y, t4.x, t4.y, t4.x, t4.y];
            switch (e4[0] in {T: 1, Q: 1} || (t4.qx = t4.qy = null), e4[0]) {
              case "M":
                t4.X = e4[1], t4.Y = e4[2];
                break;
              case "A":
                e4 = ["C"].concat(function e5(t5, r5, i5, n5, a4, o4, s4, l4, u4, h3) {
                  var c3 = Math.PI;
                  var f3 = 120 * c3 / 180;
                  var d3;
                  var p3;
                  var m3;
                  var v3;
                  var y3 = c3 / 180 * (+a4 || 0);
                  var g3 = [];
                  var b2;
                  var _2 = function(e6, t6, r6) {
                    var i6 = e6 * Math.cos(r6) - t6 * Math.sin(r6), n6 = e6 * Math.sin(r6) + t6 * Math.cos(r6);
                    return {x: i6, y: n6};
                  };
                  if (h3)
                    d3 = h3[0], p3 = h3[1], m3 = h3[2], v3 = h3[3];
                  else {
                    b2 = _2(t5, r5, -y3), t5 = b2.x, r5 = b2.y, b2 = _2(l4, u4, -y3), l4 = b2.x, u4 = b2.y;
                    var x2 = (t5 - l4) / 2, w2 = (r5 - u4) / 2, S2 = x2 * x2 / (i5 * i5) + w2 * w2 / (n5 * n5);
                    1 < S2 && (S2 = Math.sqrt(S2), i5 *= S2, n5 *= S2);
                    var M = i5 * i5, T = n5 * n5, E = (o4 === s4 ? -1 : 1) * Math.sqrt(Math.abs((M * T - M * w2 * w2 - T * x2 * x2) / (M * w2 * w2 + T * x2 * x2)));
                    m3 = E * i5 * w2 / n5 + (t5 + l4) / 2, v3 = E * -n5 * x2 / i5 + (r5 + u4) / 2, d3 = Math.asin(((r5 - v3) / n5).toFixed(9)), p3 = Math.asin(((u4 - v3) / n5).toFixed(9)), (d3 = t5 < m3 ? c3 - d3 : d3) < 0 && (d3 = 2 * c3 + d3), (p3 = l4 < m3 ? c3 - p3 : p3) < 0 && (p3 = 2 * c3 + p3), s4 && p3 < d3 && (d3 -= 2 * c3), !s4 && d3 < p3 && (p3 -= 2 * c3);
                  }
                  var C = p3 - d3;
                  if (Math.abs(C) > f3) {
                    var L = p3, O = l4, P = u4;
                    p3 = d3 + f3 * (s4 && d3 < p3 ? 1 : -1), l4 = m3 + i5 * Math.cos(p3), u4 = v3 + n5 * Math.sin(p3), g3 = e5(l4, u4, i5, n5, a4, 0, s4, O, P, [p3, L, m3, v3]);
                  }
                  C = p3 - d3;
                  var R = Math.cos(d3), D = Math.sin(d3), k = Math.cos(p3), A = Math.sin(p3), I = Math.tan(C / 4), U = 4 / 3 * i5 * I, N = 4 / 3 * n5 * I, F = [t5, r5], B = [t5 + U * D, r5 - N * R], G = [l4 + U * A, u4 - N * k], j = [l4, u4];
                  B[0] = 2 * F[0] - B[0];
                  B[1] = 2 * F[1] - B[1];
                  {
                    if (h3)
                      return [B, G, j].concat(g3);
                    g3 = [B, G, j].concat(g3).join().split(",");
                    for (var V = [], z = 0, H = g3.length; z < H; z++)
                      V[z] = z % 2 ? _2(g3[z - 1], g3[z], y3).y : _2(g3[z], g3[z + 1], y3).x;
                    return V;
                  }
                }.apply(0, [t4.x, t4.y].concat(e4.slice(1))));
                break;
              case "S":
                n4 = r4 === "C" || r4 === "S" ? (i4 = 2 * t4.x - t4.bx, 2 * t4.y - t4.by) : (i4 = t4.x, t4.y), e4 = ["C", i4, n4].concat(e4.slice(1));
                break;
              case "T":
                r4 === "Q" || r4 === "T" ? (t4.qx = 2 * t4.x - t4.qx, t4.qy = 2 * t4.y - t4.qy) : (t4.qx = t4.x, t4.qy = t4.y), e4 = ["C"].concat(S(t4.x, t4.y, t4.qx, t4.qy, e4[1], e4[2]));
                break;
              case "Q":
                t4.qx = e4[1], t4.qy = e4[2], e4 = ["C"].concat(S(t4.x, t4.y, e4[1], e4[2], e4[3], e4[4]));
                break;
              case "L":
                e4 = ["C"].concat(w(t4.x, t4.y, e4[1], e4[2]));
                break;
              case "H":
                e4 = ["C"].concat(w(t4.x, t4.y, e4[1], t4.y));
                break;
              case "V":
                e4 = ["C"].concat(w(t4.x, t4.y, t4.x, e4[1]));
                break;
              case "Z":
                e4 = ["C"].concat(w(t4.x, t4.y, t4.X, t4.Y));
            }
            return e4;
          }
          function i3(e4, t4) {
            if (7 < e4[t4].length) {
              e4[t4].shift();
              for (var r4 = e4[t4]; r4.length; )
                h2[t4] = "A", s3 && (c2[t4] = "A"), e4.splice(t4++, 0, ["C"].concat(r4.splice(0, 6)));
              e4.splice(t4, 1), a3 = Math.max(o3.length, s3 && s3.length || 0);
            }
          }
          function n3(e4, t4, r4, i4, n4) {
            e4 && t4 && e4[n4][0] === "M" && t4[n4][0] !== "M" && (t4.splice(n4, 0, ["M", i4.x, i4.y]), r4.bx = 0, r4.by = 0, r4.x = e4[n4][1], r4.y = e4[n4][2], a3 = Math.max(o3.length, s3 && s3.length || 0));
          }
          var a3, o3 = b(e3), s3 = t3 && b(t3), l3 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null}, u3 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null}, h2 = [], c2 = [], f2 = "", d2 = "";
          a3 = Math.max(o3.length, s3 && s3.length || 0);
          for (var p2 = 0; p2 < a3; p2++) {
            o3[p2] && (f2 = o3[p2][0]), f2 !== "C" && (h2[p2] = f2, p2 && (d2 = h2[p2 - 1])), o3[p2] = r3(o3[p2], l3, d2), h2[p2] !== "A" && f2 === "C" && (h2[p2] = "C"), i3(o3, p2), s3 && (s3[p2] && (f2 = s3[p2][0]), f2 !== "C" && (c2[p2] = f2, p2 && (d2 = c2[p2 - 1])), s3[p2] = r3(s3[p2], u3, d2), c2[p2] !== "A" && f2 === "C" && (c2[p2] = "C"), i3(s3, p2)), n3(o3, s3, l3, u3, p2), n3(s3, o3, u3, l3, p2);
            var m2 = o3[p2], v2 = s3 && s3[p2], y2 = m2.length, g2 = s3 && v2.length;
            l3.x = m2[y2 - 2], l3.y = m2[y2 - 1], l3.bx = parseFloat(m2[y2 - 4]) || l3.x, l3.by = parseFloat(m2[y2 - 3]) || l3.y, u3.bx = s3 && (parseFloat(v2[g2 - 4]) || u3.x), u3.by = s3 && (parseFloat(v2[g2 - 3]) || u3.y), u3.x = s3 && v2[g2 - 2], u3.y = s3 && v2[g2 - 1];
          }
          return s3 ? [o3, s3] : o3;
        }(e2)).length; u2 < h; u2++) {
          if ((a2 = e2[u2])[0] === "M")
            i2 = +a2[1], n2 = +a2[2];
          else {
            if (t2 < l2 + (o2 = v(i2, n2, a2[1], a2[2], a2[3], a2[4], a2[5], a2[6])) && !r2)
              return {x: (s2 = v(i2, n2, a2[1], a2[2], a2[3], a2[4], a2[5], a2[6], t2 - l2)).x, y: s2.y, alpha: s2.alpha};
            l2 += o2, i2 = +a2[5], n2 = +a2[6];
          }
          a2.shift() + a2;
        }
        return (s2 = r2 ? l2 : c(i2, n2, a2[0], a2[1], a2[2], a2[3], a2[4], a2[5], 1)).alpha && (s2 = {x: s2.x, y: s2.y, alpha: s2.alpha}), s2;
      }
      function b(e2) {
        var t2, r2 = [], i2 = 0, n2 = 0, a2 = 0, o2 = 0, s2 = 0;
        if (!e2)
          return r2;
        e2[0][0] === "M" && (a2 = i2 = +e2[0][1], o2 = n2 = +e2[0][2], s2++, r2[0] = ["M", i2, n2]);
        for (var l2, u2, h = e2.length === 3 && e2[0][0] === "M" && e2[1][0].toUpperCase() === "R" && e2[2][0].toUpperCase() === "Z", c2 = s2, f2 = e2.length; c2 < f2; c2++) {
          if (r2.push(l2 = []), (u2 = e2[c2])[0] !== String.prototype.toUpperCase.call(u2[0]))
            switch (l2[0] = String.prototype.toUpperCase.call(u2[0]), l2[0]) {
              case "A":
                l2[1] = u2[1], l2[2] = u2[2], l2[3] = u2[3], l2[4] = u2[4], l2[5] = u2[5], l2[6] = +(u2[6] + i2), l2[7] = +(u2[7] + n2);
                break;
              case "V":
                l2[1] = +u2[1] + n2;
                break;
              case "H":
                l2[1] = +u2[1] + i2;
                break;
              case "R":
                for (var d2 = 2, p2 = (t2 = [i2, n2].concat(u2.slice(1))).length; d2 < p2; d2++)
                  t2[d2] = +t2[d2] + i2, t2[++d2] = +t2[d2] + n2;
                r2.pop(), r2 = r2.concat(_(t2, h));
                break;
              case "M":
                a2 = +u2[1] + i2, o2 = +u2[2] + n2;
                break;
              default:
                for (var m2 = 1, v2 = u2.length; m2 < v2; m2++)
                  l2[m2] = +u2[m2] + (m2 % 2 ? i2 : n2);
            }
          else if (u2[0] === "R")
            t2 = [i2, n2].concat(u2.slice(1)), r2.pop(), r2 = r2.concat(_(t2, h)), l2 = ["R"].concat(u2.slice(-2));
          else
            for (var y2 = 0, g2 = u2.length; y2 < g2; y2++)
              l2[y2] = u2[y2];
          switch (l2[0]) {
            case "Z":
              i2 = a2, n2 = o2;
              break;
            case "H":
              i2 = l2[1];
              break;
            case "V":
              n2 = l2[1];
              break;
            case "M":
              a2 = l2[l2.length - 2], o2 = l2[l2.length - 1];
              break;
            default:
              i2 = l2[l2.length - 2], n2 = l2[l2.length - 1];
          }
        }
        return r2;
      }
      function _(e2, t2) {
        for (var r2 = [], i2 = 0, n2 = e2.length; i2 < n2 - 2 * !t2; i2 += 2) {
          var a2 = [{x: +e2[i2 - 2], y: +e2[i2 - 1]}, {x: +e2[i2], y: +e2[i2 + 1]}, {x: +e2[i2 + 2], y: +e2[i2 + 3]}, {x: +e2[i2 + 4], y: +e2[i2 + 5]}];
          t2 ? i2 ? n2 - 4 === i2 ? a2[3] = {x: +e2[0], y: +e2[1]} : n2 - 2 === i2 && (a2[2] = {x: +e2[0], y: +e2[1]}, a2[3] = {x: +e2[2], y: +e2[3]}) : a2[0] = {x: +e2[n2 - 2], y: +e2[n2 - 1]} : n2 - 4 === i2 ? a2[3] = a2[2] : i2 || (a2[0] = {x: +e2[i2], y: +e2[i2 + 1]}), r2.push(["C", (-a2[0].x + 6 * a2[1].x + a2[2].x) / 6, (-a2[0].y + 6 * a2[1].y + a2[2].y) / 6, (a2[1].x + 6 * a2[2].x - a2[3].x) / 6, (a2[1].y + 6 * a2[2].y - a2[3].y) / 6, a2[2].x, a2[2].y]);
        }
        return r2;
      }
      function w(e2, t2, r2, i2) {
        return [e2, t2, r2, i2, r2, i2];
      }
      function S(e2, t2, r2, i2, n2, a2) {
        return [1 / 3 * e2 + 2 / 3 * r2, 1 / 3 * t2 + 2 / 3 * i2, 1 / 3 * n2 + 2 / 3 * r2, 1 / 3 * a2 + 2 / 3 * i2, n2, a2];
      }
      function y(e2, t2, r2, i2, n2, a2, o2, s2, l2) {
        l2 == null && (l2 = 1);
        for (var u2 = (l2 = 1 < l2 ? 1 : l2 < 0 ? 0 : l2) / 2, h = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816], c2 = 0, f2 = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472], d2 = 0; d2 < 12; d2++) {
          var p2 = u2 * h[d2] + u2, m2 = g(p2, e2, r2, n2, o2), v2 = g(p2, t2, i2, a2, s2), y2 = m2 * m2 + v2 * v2;
          c2 += f2[d2] * Math.sqrt(y2);
        }
        return u2 * c2;
      }
      function g(e2, t2, r2, i2, n2) {
        return e2 * (e2 * (-3 * t2 + 9 * r2 - 9 * i2 + 3 * n2) + 6 * t2 - 12 * r2 + 6 * i2) - 3 * t2 + 3 * r2;
      }
      n.default.Font = function(e2) {
        this.parent = e2, this.cache = {}, this.font = void 0;
      }, n.default.Font.prototype.textBounds = function(e2) {
        var t2, r2 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0, i2 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 0, n2 = 3 < arguments.length ? arguments[3] : void 0, a2 = 4 < arguments.length ? arguments[4] : void 0, o2 = a2 && a2.renderer && a2.renderer._pInst || this.parent, s2 = o2._renderer.drawingContext;
        s2.textAlign || x.LEFT, s2.textBaseline || x.BASELINE;
        if (n2 = n2 || o2._renderer._textSize, !t2) {
          var l2, u2, h = [], c2 = [], f2 = [];
          f2[0] = [];
          var d2 = [], p2 = this._scale(n2), m2 = o2._renderer.textLeading(), v2 = 0;
          this.font.forEachGlyph(e2, r2, i2, n2, a2, function(e3, t3, r3, i3) {
            var n3 = e3.getMetrics();
            e3.index === 0 || e3.index === 10 ? f2[v2 += 1] = [] : (f2[v2].push(t3 + n3.xMin * p2), f2[v2].push(t3 + n3.xMax * p2), d2.push(r3 + v2 * m2 + -n3.yMin * p2), d2.push(r3 + v2 * m2 + -n3.yMax * p2));
          }), 0 < f2[v2].length && (h[v2] = Math.min.apply(null, f2[v2]), c2[v2] = Math.max.apply(null, f2[v2]));
          for (var y2 = 0, g2 = 0; g2 <= v2; g2++) {
            h[g2] = Math.min.apply(null, f2[g2]), c2[g2] = Math.max.apply(null, f2[g2]);
            var b2 = c2[g2] - h[g2];
            y2 < b2 && (y2 = b2);
          }
          var _2 = Math.min.apply(null, h);
          t2 = {x: _2, y: l2 = Math.min.apply(null, d2), h: Math.max.apply(null, d2) - l2, w: y2, advance: _2 - r2}, u2 = this._handleAlignment(o2._renderer, e2, t2.x, t2.y, t2.w + t2.advance), t2.x = u2.x, t2.y = u2.y;
        }
        return t2;
      }, n.default.Font.prototype.textToPoints = function(e2, t2, r2, i2, n2) {
        var a2, o2 = 0, s2 = [], l2 = this._getGlyphs(e2);
        i2 = i2 || this.parent._renderer._textSize;
        for (var u2 = 0; u2 < l2.length; u2++) {
          if (!(l2[a2 = u2].name && l2[a2].name === "space" || e2.length === l2.length && e2[a2] === " " || l2[a2].index && l2[a2].index === 3))
            for (var h = m(l2[u2].getPath(t2, r2, i2).commands), c2 = 0; c2 < h.length; c2++)
              for (var f2 = p(h[c2], n2), d2 = 0; d2 < f2.length; d2++)
                f2[d2].x += o2, s2.push(f2[d2]);
          o2 += l2[u2].advanceWidth * this._scale(i2);
        }
        return s2;
      }, n.default.Font.prototype._getGlyphs = function(e2) {
        return this.font.stringToGlyphs(e2);
      }, n.default.Font.prototype._getPath = function(e2, t2, r2, i2) {
        var n2 = (i2 && i2.renderer && i2.renderer._pInst || this.parent)._renderer, a2 = this._handleAlignment(n2, e2, t2, r2);
        return this.font.getPath(e2, a2.x, a2.y, n2._textSize, i2);
      }, n.default.Font.prototype._getPathData = function(e2, t2, r2, i2) {
        var n2 = 3;
        return typeof e2 == "string" && 2 < arguments.length ? e2 = this._getPath(e2, t2, r2, i2) : d(t2) === "object" && (i2 = t2), i2 && typeof i2.decimals == "number" && (n2 = i2.decimals), e2.toPathData(n2);
      }, n.default.Font.prototype._getSVG = function(e2, t2, r2, i2) {
        var n2 = 3;
        return typeof e2 == "string" && 2 < arguments.length ? e2 = this._getPath(e2, t2, r2, i2) : d(t2) === "object" && (i2 = t2), i2 && (typeof i2.decimals == "number" && (n2 = i2.decimals), typeof i2.strokeWidth == "number" && (e2.strokeWidth = i2.strokeWidth), i2.fill !== void 0 && (e2.fill = i2.fill), i2.stroke !== void 0 && (e2.stroke = i2.stroke)), e2.toSVG(n2);
      }, n.default.Font.prototype._renderPath = function(e2, t2, r2, i2) {
        var n2, a2 = i2 && i2.renderer || this.parent._renderer, o2 = a2.drawingContext;
        n2 = d(e2) === "object" && e2.commands ? e2.commands : this._getPath(e2, t2, r2, i2).commands, o2.beginPath();
        var s2 = true, l2 = false, u2 = void 0;
        try {
          for (var h, c2 = n2[Symbol.iterator](); !(s2 = (h = c2.next()).done); s2 = true) {
            var f2 = h.value;
            f2.type === "M" ? o2.moveTo(f2.x, f2.y) : f2.type === "L" ? o2.lineTo(f2.x, f2.y) : f2.type === "C" ? o2.bezierCurveTo(f2.x1, f2.y1, f2.x2, f2.y2, f2.x, f2.y) : f2.type === "Q" ? o2.quadraticCurveTo(f2.x1, f2.y1, f2.x, f2.y) : f2.type === "Z" && o2.closePath();
          }
        } catch (e3) {
          l2 = true, u2 = e3;
        } finally {
          try {
            s2 || c2.return == null || c2.return();
          } finally {
            if (l2)
              throw u2;
          }
        }
        return a2._doStroke && a2._strokeSet && o2.stroke(), a2._doFill && (a2._fillSet || a2._setFill(x._DEFAULT_TEXT_FILL), o2.fill()), this;
      }, n.default.Font.prototype._textWidth = function(e2, t2) {
        return this.font.getAdvanceWidth(e2, t2);
      }, n.default.Font.prototype._textAscent = function(e2) {
        return this.font.ascender * this._scale(e2);
      }, n.default.Font.prototype._textDescent = function(e2) {
        return -this.font.descender * this._scale(e2);
      }, n.default.Font.prototype._scale = function(e2) {
        return 1 / this.font.unitsPerEm * (e2 || this.parent._renderer._textSize);
      }, n.default.Font.prototype._handleAlignment = function(e2, t2, r2, i2, n2) {
        var a2 = e2._textSize;
        switch (n2 === void 0 && (n2 = this._textWidth(t2, a2)), e2._textAlign) {
          case x.CENTER:
            r2 -= n2 / 2;
            break;
          case x.RIGHT:
            r2 -= n2;
        }
        switch (e2._textBaseline) {
          case x.TOP:
            i2 += this._textAscent(a2);
            break;
          case x.CENTER:
            i2 += this._textAscent(a2) / 2;
            break;
          case x.BOTTOM:
            i2 -= this._textDescent(a2);
        }
        return {x: r2, y: i2};
      };
      var u = n.default;
      r.default = u;
    }, {"../core/constants": 26, "../core/main": 36}], 75: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype.append = function(e2, t2) {
        return e2.push(t2), e2;
      }, n.default.prototype.arrayCopy = function(e2, t2, r2, i2, n2) {
        var a2, o;
        e2 = n2 !== void 0 ? (o = Math.min(n2, e2.length), a2 = i2, e2.slice(t2, o + t2)) : (o = r2 !== void 0 ? (o = r2, Math.min(o, e2.length)) : e2.length, a2 = 0, r2 = t2, e2.slice(0, o)), Array.prototype.splice.apply(r2, [a2, o].concat(e2));
      }, n.default.prototype.concat = function(e2, t2) {
        return e2.concat(t2);
      }, n.default.prototype.reverse = function(e2) {
        return e2.reverse();
      }, n.default.prototype.shorten = function(e2) {
        return e2.pop(), e2;
      }, n.default.prototype.shuffle = function(e2, t2) {
        for (var r2, i2, n2 = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e2), a2 = (e2 = t2 || n2 ? e2 : e2.slice()).length; 1 < a2; )
          r2 = this.random(0, 1) * a2 | 0, i2 = e2[--a2], e2[a2] = e2[r2], e2[r2] = i2;
        return e2;
      }, n.default.prototype.sort = function(e2, t2) {
        var r2 = t2 ? e2.slice(0, Math.min(t2, e2.length)) : e2, i2 = t2 ? e2.slice(Math.min(t2, e2.length)) : [];
        return (r2 = typeof r2[0] == "string" ? r2.sort() : r2.sort(function(e3, t3) {
          return e3 - t3;
        })).concat(i2);
      }, n.default.prototype.splice = function(e2, t2, r2) {
        return Array.prototype.splice.apply(e2, [r2, 0].concat(t2)), e2;
      }, n.default.prototype.subset = function(e2, t2, r2) {
        return r2 !== void 0 ? e2.slice(t2, t2 + r2) : e2.slice(t2, e2.length);
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 76: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype.float = function(e2) {
        return e2 instanceof Array ? e2.map(parseFloat) : parseFloat(e2);
      }, n.default.prototype.int = function(e2) {
        var t2 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 10;
        return e2 === 1 / 0 || e2 === "Infinity" ? 1 / 0 : e2 === -1 / 0 || e2 === "-Infinity" ? -1 / 0 : typeof e2 == "string" ? parseInt(e2, t2) : typeof e2 == "number" ? 0 | e2 : typeof e2 == "boolean" ? e2 ? 1 : 0 : e2 instanceof Array ? e2.map(function(e3) {
          return n.default.prototype.int(e3, t2);
        }) : void 0;
      }, n.default.prototype.str = function(e2) {
        return e2 instanceof Array ? e2.map(n.default.prototype.str) : String(e2);
      }, n.default.prototype.boolean = function(e2) {
        return typeof e2 == "number" ? e2 !== 0 : typeof e2 == "string" ? e2.toLowerCase() === "true" : typeof e2 == "boolean" ? e2 : e2 instanceof Array ? e2.map(n.default.prototype.boolean) : void 0;
      }, n.default.prototype.byte = function(e2) {
        var t2 = n.default.prototype.int(e2, 10);
        return typeof t2 == "number" ? (t2 + 128) % 256 - 128 : t2 instanceof Array ? t2.map(n.default.prototype.byte) : void 0;
      }, n.default.prototype.char = function(e2) {
        return typeof e2 != "number" || isNaN(e2) ? e2 instanceof Array ? e2.map(n.default.prototype.char) : typeof e2 == "string" ? n.default.prototype.char(parseInt(e2, 10)) : void 0 : String.fromCharCode(e2);
      }, n.default.prototype.unchar = function(e2) {
        return typeof e2 == "string" && e2.length === 1 ? e2.charCodeAt(0) : e2 instanceof Array ? e2.map(n.default.prototype.unchar) : void 0;
      }, n.default.prototype.hex = function(e2, t2) {
        if (t2 = t2 == null ? t2 = 8 : t2, e2 instanceof Array)
          return e2.map(function(e3) {
            return n.default.prototype.hex(e3, t2);
          });
        if (e2 === 1 / 0 || e2 === -1 / 0)
          return (e2 === 1 / 0 ? "F" : "0").repeat(t2);
        if (typeof e2 == "number") {
          e2 < 0 && (e2 = 4294967295 + e2 + 1);
          for (var r2 = Number(e2).toString(16).toUpperCase(); r2.length < t2; )
            r2 = "0".concat(r2);
          return r2.length >= t2 && (r2 = r2.substring(r2.length - t2, r2.length)), r2;
        }
      }, n.default.prototype.unhex = function(e2) {
        return e2 instanceof Array ? e2.map(n.default.prototype.unhex) : parseInt("0x".concat(e2), 16);
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 77: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, o = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function n(e2, t2, r2) {
        var i2 = e2 < 0, n2 = i2 ? e2.toString().substring(1) : e2.toString(), a2 = n2.indexOf("."), o2 = a2 !== -1 ? n2.substring(0, a2) : n2, s2 = a2 !== -1 ? n2.substring(a2 + 1) : "", l2 = i2 ? "-" : "";
        if (r2 !== void 0) {
          var u2 = "";
          (a2 !== -1 || 0 < r2 - s2.length) && (u2 = "."), s2.length > r2 && (s2 = s2.substring(0, r2));
          for (var h = 0; h < t2 - o2.length; h++)
            l2 += "0";
          l2 += o2, l2 += u2, l2 += s2;
          for (var c = 0; c < r2 - s2.length; c++)
            l2 += "0";
          return l2;
        }
        for (var f = 0; f < Math.max(t2 - o2.length, 0); f++)
          l2 += "0";
        return l2 += n2;
      }
      function a(e2, t2) {
        var r2 = (e2 = e2.toString()).indexOf("."), i2 = r2 !== -1 ? e2.substring(r2) : "", n2 = r2 !== -1 ? e2.substring(0, r2) : e2;
        if (n2 = n2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","), t2 === 0)
          i2 = "";
        else if (t2 !== void 0)
          if (t2 > i2.length)
            for (var a2 = t2 - (i2 += r2 === -1 ? "." : "").length + 1, o2 = 0; o2 < a2; o2++)
              i2 += "0";
          else
            i2 = i2.substring(0, t2 + 1);
        return n2 + i2;
      }
      function s(e2) {
        return 0 < parseFloat(e2) ? "+".concat(e2.toString()) : e2.toString();
      }
      function l(e2) {
        return 0 <= parseFloat(e2) ? " ".concat(e2.toString()) : e2.toString();
      }
      e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), o.default.prototype.join = function(e2, t2) {
        return o.default._validateParameters("join", arguments), e2.join(t2);
      }, o.default.prototype.match = function(e2, t2) {
        return o.default._validateParameters("match", arguments), e2.match(t2);
      }, o.default.prototype.matchAll = function(e2, t2) {
        o.default._validateParameters("matchAll", arguments);
        for (var r2 = new RegExp(t2, "g"), i2 = r2.exec(e2), n2 = []; i2 !== null; )
          n2.push(i2), i2 = r2.exec(e2);
        return n2;
      }, o.default.prototype.nf = function(e2, t2, r2) {
        return o.default._validateParameters("nf", arguments), e2 instanceof Array ? e2.map(function(e3) {
          return n(e3, t2, r2);
        }) : Object.prototype.toString.call(e2) === "[object Arguments]" ? e2.length === 3 ? this.nf(e2[0], e2[1], e2[2]) : e2.length === 2 ? this.nf(e2[0], e2[1]) : this.nf(e2[0]) : n(e2, t2, r2);
      }, o.default.prototype.nfc = function(e2, t2) {
        return o.default._validateParameters("nfc", arguments), e2 instanceof Array ? e2.map(function(e3) {
          return a(e3, t2);
        }) : a(e2, t2);
      }, o.default.prototype.nfp = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        o.default._validateParameters("nfp", t2);
        var i2 = o.default.prototype.nf.apply(this, t2);
        return i2 instanceof Array ? i2.map(s) : s(i2);
      }, o.default.prototype.nfs = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        o.default._validateParameters("nfs", t2);
        var i2 = o.default.prototype.nf.apply(this, t2);
        return i2 instanceof Array ? i2.map(l) : l(i2);
      }, o.default.prototype.split = function(e2, t2) {
        return o.default._validateParameters("split", arguments), e2.split(t2);
      }, o.default.prototype.splitTokens = function(e2, t2) {
        var r2;
        if (o.default._validateParameters("splitTokens", arguments), t2 !== void 0) {
          var i2 = t2, n2 = /\]/g.exec(i2), a2 = /\[/g.exec(i2);
          r2 = a2 && n2 ? (i2 = i2.slice(0, n2.index) + i2.slice(n2.index + 1), a2 = /\[/g.exec(i2), i2 = i2.slice(0, a2.index) + i2.slice(a2.index + 1), new RegExp("[\\[".concat(i2, "\\]]"), "g")) : n2 ? (i2 = i2.slice(0, n2.index) + i2.slice(n2.index + 1), new RegExp("[".concat(i2, "\\]]"), "g")) : a2 ? (i2 = i2.slice(0, a2.index) + i2.slice(a2.index + 1), new RegExp("[".concat(i2, "\\[]"), "g")) : new RegExp("[".concat(i2, "]"), "g");
        } else
          r2 = /\s/g;
        return e2.split(r2).filter(function(e3) {
          return e3;
        });
      }, o.default.prototype.trim = function(e2) {
        return o.default._validateParameters("trim", arguments), e2 instanceof Array ? e2.map(this.trim) : e2.trim();
      };
      var u = o.default;
      r.default = u;
    }, {"../core/friendly_errors/fes_core": 28, "../core/friendly_errors/file_errors": 29, "../core/friendly_errors/validate_params": 31, "../core/main": 36}], 78: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.prototype.day = function() {
        return new Date().getDate();
      }, n.default.prototype.hour = function() {
        return new Date().getHours();
      }, n.default.prototype.minute = function() {
        return new Date().getMinutes();
      }, n.default.prototype.millis = function() {
        return this._millisStart === -1 ? 0 : window.performance.now() - this._millisStart;
      }, n.default.prototype.month = function() {
        return new Date().getMonth() + 1;
      }, n.default.prototype.second = function() {
        return new Date().getSeconds();
      }, n.default.prototype.year = function() {
        return new Date().getFullYear();
      };
      var a = n.default;
      r.default = a;
    }, {"../core/main": 36}], 79: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, E = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      e("./p5.Geometry");
      var d = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      E.default.prototype.plane = function(e2, t2, r2, i2) {
        this._assert3d("plane"), E.default._validateParameters("plane", arguments), e2 === void 0 && (e2 = 50), t2 === void 0 && (t2 = e2), r2 === void 0 && (r2 = 1), i2 === void 0 && (i2 = 1);
        var n2 = "plane|".concat(r2, "|").concat(i2);
        if (!this._renderer.geometryInHash(n2)) {
          var a = new E.default.Geometry(r2, i2, function() {
            for (var e3, t3, r3, i3 = 0; i3 <= this.detailY; i3++) {
              t3 = i3 / this.detailY;
              for (var n3 = 0; n3 <= this.detailX; n3++)
                e3 = n3 / this.detailX, r3 = new E.default.Vector(e3 - 0.5, t3 - 0.5, 0), this.vertices.push(r3), this.uvs.push(e3, t3);
            }
          });
          a.computeFaces().computeNormals(), r2 <= 1 && i2 <= 1 ? a._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), this._renderer.createBuffers(n2, a);
        }
        return this._renderer.drawBuffersScaled(n2, e2, t2, 1), this;
      }, E.default.prototype.box = function(e2, t2, r2, i2, n2) {
        this._assert3d("box"), E.default._validateParameters("box", arguments), e2 === void 0 && (e2 = 50), t2 === void 0 && (t2 = e2), r2 === void 0 && (r2 = t2);
        var a = this._renderer.attributes && this._renderer.attributes.perPixelLighting;
        i2 === void 0 && (i2 = a ? 1 : 4), n2 === void 0 && (n2 = a ? 1 : 4);
        var o2 = "box|".concat(i2, "|").concat(n2);
        if (!this._renderer.geometryInHash(o2)) {
          var s2 = new E.default.Geometry(i2, n2, function() {
            var e3 = [[0, 4, 2, 6], [1, 3, 5, 7], [0, 1, 4, 5], [2, 6, 3, 7], [0, 2, 1, 3], [4, 5, 6, 7]];
            this.strokeIndices = [[0, 1], [1, 3], [3, 2], [6, 7], [8, 9], [9, 11], [14, 15], [16, 17], [17, 19], [18, 19], [20, 21], [22, 23]];
            for (var t3 = 0; t3 < e3.length; t3++) {
              for (var r3 = e3[t3], i3 = 4 * t3, n3 = 0; n3 < 4; n3++) {
                var a2 = r3[n3], o3 = new E.default.Vector((2 * (1 & a2) - 1) / 2, ((2 & a2) - 1) / 2, ((4 & a2) / 2 - 1) / 2);
                this.vertices.push(o3), this.uvs.push(1 & n3, (2 & n3) / 2);
              }
              this.faces.push([i3, 1 + i3, 2 + i3]), this.faces.push([2 + i3, 1 + i3, 3 + i3]);
            }
          });
          s2.computeNormals(), i2 <= 4 && n2 <= 4 ? s2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), this._renderer.createBuffers(o2, s2);
        }
        return this._renderer.drawBuffersScaled(o2, e2, t2, r2), this;
      }, E.default.prototype.sphere = function(e2, t2, r2) {
        return this._assert3d("sphere"), E.default._validateParameters("sphere", arguments), e2 === void 0 && (e2 = 50), t2 === void 0 && (t2 = 24), r2 === void 0 && (r2 = 16), this.ellipsoid(e2, e2, e2, t2, r2), this;
      };
      function l(e2, t2, r2, i2, n2, a, o2) {
        e2 = e2 <= 0 ? 1 : e2, t2 = t2 < 0 ? 0 : t2, r2 = r2 <= 0 ? e2 : r2, i2 = i2 < 3 ? 3 : i2;
        var s2, l2, u, h = (a = a === void 0 || a) ? -2 : 0, c = (n2 = n2 < 1 ? 1 : n2) + ((o2 = o2 === void 0 ? t2 !== 0 : o2) ? 2 : 0), f = Math.atan2(e2 - t2, r2), d2 = Math.sin(f), p = Math.cos(f);
        for (s2 = h; s2 <= c; ++s2) {
          var m = s2 / n2, v = r2 * m, y = void 0;
          for (y = s2 < 0 ? (m = v = 0, e2) : n2 < s2 ? (v = r2, m = 1, t2) : e2 + (t2 - e2) * m, s2 !== -2 && s2 !== n2 + 2 || (y = 0), v -= r2 / 2, l2 = 0; l2 < i2; ++l2) {
            var g = l2 / (i2 - 1), b = 2 * Math.PI * g, _ = Math.sin(b), x = Math.cos(b);
            this.vertices.push(new E.default.Vector(_ * y, v, x * y));
            var w = void 0;
            w = s2 < 0 ? new E.default.Vector(0, -1, 0) : n2 < s2 && t2 ? new E.default.Vector(0, 1, 0) : new E.default.Vector(_ * p, d2, x * p), this.vertexNormals.push(w), this.uvs.push(g, m);
          }
        }
        var S = 0;
        if (a) {
          for (u = 0; u < i2; ++u) {
            var M = (u + 1) % i2;
            this.faces.push([S + u, S + i2 + M, S + i2 + u]);
          }
          S += 2 * i2;
        }
        for (s2 = 0; s2 < n2; ++s2) {
          for (l2 = 0; l2 < i2; ++l2) {
            var T = (l2 + 1) % i2;
            this.faces.push([S + l2, S + T, S + i2 + T]), this.faces.push([S + l2, S + i2 + T, S + i2 + l2]);
          }
          S += i2;
        }
        if (o2)
          for (S += i2, l2 = 0; l2 < i2; ++l2)
            this.faces.push([S + l2, S + (l2 + 1) % i2, S + i2]);
      }
      E.default.prototype.cylinder = function(e2, t2, r2, i2, n2, a) {
        this._assert3d("cylinder"), E.default._validateParameters("cylinder", arguments), e2 === void 0 && (e2 = 50), t2 === void 0 && (t2 = e2), r2 === void 0 && (r2 = 24), i2 === void 0 && (i2 = 1), a === void 0 && (a = true), n2 === void 0 && (n2 = true);
        var o2 = "cylinder|".concat(r2, "|").concat(i2, "|").concat(n2, "|").concat(a);
        if (!this._renderer.geometryInHash(o2)) {
          var s2 = new E.default.Geometry(r2, i2);
          l.call(s2, 1, 1, 1, r2, i2, n2, a), r2 <= 24 && i2 <= 16 ? s2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(o2, s2);
        }
        return this._renderer.drawBuffersScaled(o2, e2, t2, e2), this;
      }, E.default.prototype.cone = function(e2, t2, r2, i2, n2) {
        this._assert3d("cone"), E.default._validateParameters("cone", arguments), e2 === void 0 && (e2 = 50), t2 === void 0 && (t2 = e2), r2 === void 0 && (r2 = 24), i2 === void 0 && (i2 = 1), n2 === void 0 && (n2 = true);
        var a = "cone|".concat(r2, "|").concat(i2, "|").concat(n2);
        if (!this._renderer.geometryInHash(a)) {
          var o2 = new E.default.Geometry(r2, i2);
          l.call(o2, 1, 0, 1, r2, i2, n2, false), r2 <= 24 && i2 <= 16 ? o2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(a, o2);
        }
        return this._renderer.drawBuffersScaled(a, e2, t2, e2), this;
      }, E.default.prototype.ellipsoid = function(e2, t2, r2, i2, n2) {
        this._assert3d("ellipsoid"), E.default._validateParameters("ellipsoid", arguments), e2 === void 0 && (e2 = 50), t2 === void 0 && (t2 = e2), r2 === void 0 && (r2 = e2), i2 === void 0 && (i2 = 24), n2 === void 0 && (n2 = 16);
        var a = "ellipsoid|".concat(i2, "|").concat(n2);
        if (!this._renderer.geometryInHash(a)) {
          var o2 = new E.default.Geometry(i2, n2, function() {
            for (var e3 = 0; e3 <= this.detailY; e3++)
              for (var t3 = e3 / this.detailY, r3 = Math.PI * t3 - Math.PI / 2, i3 = Math.cos(r3), n3 = Math.sin(r3), a2 = 0; a2 <= this.detailX; a2++) {
                var o3 = a2 / this.detailX, s2 = 2 * Math.PI * o3, l2 = Math.cos(s2), u = Math.sin(s2), h = new E.default.Vector(i3 * u, n3, i3 * l2);
                this.vertices.push(h), this.vertexNormals.push(h), this.uvs.push(o3, t3);
              }
          });
          o2.computeFaces(), i2 <= 24 && n2 <= 24 ? o2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), this._renderer.createBuffers(a, o2);
        }
        return this._renderer.drawBuffersScaled(a, e2, t2, r2), this;
      }, E.default.prototype.torus = function(e2, t2, r2, i2) {
        if (this._assert3d("torus"), E.default._validateParameters("torus", arguments), e2 === void 0)
          e2 = 50;
        else if (!e2)
          return;
        if (t2 === void 0)
          t2 = 10;
        else if (!t2)
          return;
        r2 === void 0 && (r2 = 24), i2 === void 0 && (i2 = 16);
        var d2 = (t2 / e2).toPrecision(4), n2 = "torus|".concat(d2, "|").concat(r2, "|").concat(i2);
        if (!this._renderer.geometryInHash(n2)) {
          var a = new E.default.Geometry(r2, i2, function() {
            for (var e3 = 0; e3 <= this.detailY; e3++)
              for (var t3 = e3 / this.detailY, r3 = 2 * Math.PI * t3, i3 = Math.cos(r3), n3 = Math.sin(r3), a2 = 1 + d2 * i3, o2 = 0; o2 <= this.detailX; o2++) {
                var s2 = o2 / this.detailX, l2 = 2 * Math.PI * s2, u = Math.cos(l2), h = Math.sin(l2), c = new E.default.Vector(a2 * u, a2 * h, d2 * n3), f = new E.default.Vector(i3 * u, i3 * h, n3);
                this.vertices.push(c), this.vertexNormals.push(f), this.uvs.push(s2, t3);
              }
          });
          a.computeFaces(), r2 <= 24 && i2 <= 16 ? a._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(n2, a);
        }
        return this._renderer.drawBuffersScaled(n2, e2, e2, e2), this;
      }, E.default.RendererGL.prototype.point = function(e2, t2, r2) {
        r2 === void 0 && (r2 = 0);
        var i2 = [];
        return i2.push(new E.default.Vector(e2, t2, r2)), this._drawPoints(i2, this.immediateMode.buffers.point), this;
      }, E.default.RendererGL.prototype.triangle = function(e2) {
        var t2 = e2[0], r2 = e2[1], i2 = e2[2], n2 = e2[3], a = e2[4], o2 = e2[5];
        if (!this.geometryInHash("tri")) {
          var s2 = new E.default.Geometry(1, 1, function() {
            var e3 = [];
            e3.push(new E.default.Vector(0, 0, 0)), e3.push(new E.default.Vector(0, 1, 0)), e3.push(new E.default.Vector(1, 0, 0)), this.strokeIndices = [[0, 1], [1, 2], [2, 0]], this.vertices = e3, this.faces = [[0, 1, 2]], this.uvs = [0, 0, 0, 1, 1, 1];
          });
          s2._makeTriangleEdges()._edgesToVertices(), s2.computeNormals(), this.createBuffers("tri", s2);
        }
        var l2 = this.uMVMatrix.copy();
        try {
          var u = new E.default.Matrix([i2 - t2, n2 - r2, 0, 0, a - t2, o2 - r2, 0, 0, 0, 0, 1, 0, t2, r2, 0, 1]).mult(this.uMVMatrix);
          this.uMVMatrix = u, this.drawBuffers("tri");
        } finally {
          this.uMVMatrix = l2;
        }
        return this;
      }, E.default.RendererGL.prototype.ellipse = function(e2) {
        this.arc(e2[0], e2[1], e2[2], e2[3], 0, d.TWO_PI, d.OPEN, e2[4]);
      }, E.default.RendererGL.prototype.arc = function(e2) {
        var t2, r2 = e2, i2 = arguments[1], n2 = arguments[2], a = arguments[3], o2 = arguments[4], s2 = arguments[5], l2 = arguments[6], u = arguments[7] || 25;
        if (t2 = Math.abs(s2 - o2) >= d.TWO_PI ? "".concat("ellipse", "|").concat(u, "|") : "".concat("arc", "|").concat(o2, "|").concat(s2, "|").concat(l2, "|").concat(u, "|"), !this.geometryInHash(t2)) {
          var h = new E.default.Geometry(u, 1, function() {
            if (this.strokeIndices = [], o2.toFixed(10) !== s2.toFixed(10)) {
              l2 !== d.PIE && l2 !== void 0 || (this.vertices.push(new E.default.Vector(0.5, 0.5, 0)), this.uvs.push([0.5, 0.5]));
              for (var e3 = 0; e3 <= u; e3++) {
                var t3 = (s2 - o2) * (e3 / u) + o2, r3 = 0.5 + Math.cos(t3) / 2, i3 = 0.5 + Math.sin(t3) / 2;
                this.vertices.push(new E.default.Vector(r3, i3, 0)), this.uvs.push([r3, i3]), e3 < u - 1 && (this.faces.push([0, e3 + 1, e3 + 2]), this.strokeIndices.push([e3 + 1, e3 + 2]));
              }
              switch (l2) {
                case d.PIE:
                  this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.strokeIndices.push([0, 1]), this.strokeIndices.push([this.vertices.length - 2, this.vertices.length - 1]), this.strokeIndices.push([0, this.vertices.length - 1]);
                  break;
                case d.CHORD:
                  this.strokeIndices.push([0, 1]), this.strokeIndices.push([0, this.vertices.length - 1]);
                  break;
                case d.OPEN:
                  this.strokeIndices.push([0, 1]);
                  break;
                default:
                  this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.strokeIndices.push([this.vertices.length - 2, this.vertices.length - 1]);
              }
            }
          });
          h.computeNormals(), u <= 50 ? h._makeTriangleEdges()._edgesToVertices(h) : this._renderer._doStroke && console.log("Cannot stroke ${shape} with more than 50 detail"), this.createBuffers(t2, h);
        }
        var c = this.uMVMatrix.copy();
        try {
          this.uMVMatrix.translate([r2, i2, 0]), this.uMVMatrix.scale(n2, a, 1), this.drawBuffers(t2);
        } finally {
          this.uMVMatrix = c;
        }
        return this;
      }, E.default.RendererGL.prototype.rect = function(e2) {
        var t2 = this._pInst._glAttributes.perPixelLighting, r2 = e2[0], i2 = e2[1], n2 = e2[2], a = e2[3], o2 = e2[4] || (t2 ? 1 : 24), s2 = e2[5] || (t2 ? 1 : 16), l2 = "rect|".concat(o2, "|").concat(s2);
        if (!this.geometryInHash(l2)) {
          var u = new E.default.Geometry(o2, s2, function() {
            for (var e3 = 0; e3 <= this.detailY; e3++)
              for (var t3 = e3 / this.detailY, r3 = 0; r3 <= this.detailX; r3++) {
                var i3 = r3 / this.detailX, n3 = new E.default.Vector(i3, t3, 0);
                this.vertices.push(n3), this.uvs.push(i3, t3);
              }
            0 < o2 && 0 < s2 && (this.strokeIndices = [[0, o2], [o2, (o2 + 1) * (s2 + 1) - 1], [(o2 + 1) * (s2 + 1) - 1, (o2 + 1) * s2], [(o2 + 1) * s2, 0]]);
          });
          u.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(), this.createBuffers(l2, u);
        }
        var h = this.uMVMatrix.copy();
        try {
          this.uMVMatrix.translate([r2, i2, 0]), this.uMVMatrix.scale(n2, a, 1), this.drawBuffers(l2);
        } finally {
          this.uMVMatrix = h;
        }
        return this;
      }, E.default.RendererGL.prototype.quad = function(e2, t2, r2, i2, n2, a, o2, s2, l2, u, h, c) {
        var f = "quad|".concat(e2, "|").concat(t2, "|").concat(r2, "|").concat(i2, "|").concat(n2, "|").concat(a, "|").concat(o2, "|").concat(s2, "|").concat(l2, "|").concat(u, "|").concat(h, "|").concat(c);
        if (!this.geometryInHash(f)) {
          var d2 = new E.default.Geometry(2, 2, function() {
            this.vertices.push(new E.default.Vector(e2, t2, r2)), this.vertices.push(new E.default.Vector(i2, n2, a)), this.vertices.push(new E.default.Vector(o2, s2, l2)), this.vertices.push(new E.default.Vector(u, h, c)), this.uvs.push(0, 0, 1, 0, 1, 1, 0, 1), this.strokeIndices = [[0, 1], [1, 2], [2, 3], [3, 0]];
          });
          d2.computeNormals()._makeTriangleEdges()._edgesToVertices(), d2.faces = [[0, 1, 2], [2, 3, 0]], this.createBuffers(f, d2);
        }
        return this.drawBuffers(f), this;
      }, E.default.RendererGL.prototype.bezier = function(e2, t2, r2, i2, n2, a, o2, s2, l2, u, h, c) {
        arguments.length === 8 && (h = s2, u = o2, s2 = a, o2 = n2, n2 = i2, i2 = r2, r2 = a = l2 = c = 0);
        var f = this._pInst._bezierDetail || 20;
        this.beginShape();
        for (var d2 = 0; d2 <= f; d2++) {
          var p = Math.pow(1 - d2 / f, 3), m = d2 / f * 3 * Math.pow(1 - d2 / f, 2), v = 3 * Math.pow(d2 / f, 2) * (1 - d2 / f), y = Math.pow(d2 / f, 3);
          this.vertex(e2 * p + i2 * m + o2 * v + u * y, t2 * p + n2 * m + s2 * v + h * y, r2 * p + a * m + l2 * v + c * y);
        }
        return this.endShape(), this;
      }, E.default.RendererGL.prototype.curve = function(e2, t2, r2, i2, n2, a, o2, s2, l2, u, h, c) {
        arguments.length === 8 && (u = o2, h = s2, o2 = n2, s2 = i2, n2 = i2 = r2, r2 = a = l2 = c = 0);
        var f = this._pInst._curveDetail;
        this.beginShape();
        for (var d2 = 0; d2 <= f; d2++) {
          var p = 0.5 * Math.pow(d2 / f, 3), m = 0.5 * Math.pow(d2 / f, 2), v = d2 / f * 0.5, y = p * (3 * i2 - e2 - 3 * o2 + u) + m * (2 * e2 - 5 * i2 + 4 * o2 - u) + v * (-e2 + o2) + 2 * i2 * 0.5, g = p * (3 * n2 - t2 - 3 * s2 + h) + m * (2 * t2 - 5 * n2 + 4 * s2 - h) + v * (-t2 + s2) + 2 * n2 * 0.5, b = p * (3 * a - r2 - 3 * l2 + c) + m * (2 * r2 - 5 * a + 4 * l2 - c) + v * (-r2 + l2) + 2 * a * 0.5;
          this.vertex(y, g, b);
        }
        return this.endShape(), this;
      }, E.default.RendererGL.prototype.line = function() {
        return arguments.length === 6 ? (this.beginShape(d.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 2 ? void 0 : arguments[2]), this.vertex(arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 5 ? void 0 : arguments[5]), this.endShape()) : arguments.length === 4 && (this.beginShape(d.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], 0), this.vertex(arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 3 ? void 0 : arguments[3], 0), this.endShape()), this;
      }, E.default.RendererGL.prototype.bezierVertex = function() {
        if (this.immediateMode._bezierVertex.length === 0)
          throw Error("vertex() must be used once before calling bezierVertex()");
        var e2, t2, r2, i2, n2, a = [], o2 = [], s2 = [], l2 = arguments.length;
        if ((e2 = 0) === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
          this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutBezierDetail, h = 0, c = 1, f = 0; h < 1; ) {
            if (e2 = parseFloat(h.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(e2), c.toFixed(6) === u.toFixed(6)) {
              e2 = parseFloat(c.toFixed(6)) + parseFloat(h.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(e2);
              break;
            }
            h += u, c -= u, ++f;
          }
        }
        var d2 = this._lookUpTableBezier.length;
        if (l2 === 6) {
          for (this.isBezier = true, a = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 4 ? void 0 : arguments[4]], o2 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 5 ? void 0 : arguments[5]], n2 = 0; n2 < d2; n2++)
            t2 = a[0] * this._lookUpTableBezier[n2][0] + a[1] * this._lookUpTableBezier[n2][1] + a[2] * this._lookUpTableBezier[n2][2] + a[3] * this._lookUpTableBezier[n2][3], r2 = o2[0] * this._lookUpTableBezier[n2][0] + o2[1] * this._lookUpTableBezier[n2][1] + o2[2] * this._lookUpTableBezier[n2][2] + o2[3] * this._lookUpTableBezier[n2][3], this.vertex(t2, r2);
          this.immediateMode._bezierVertex[0] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._bezierVertex[1] = arguments.length <= 5 ? void 0 : arguments[5];
        } else if (l2 === 9) {
          for (this.isBezier = true, a = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 6 ? void 0 : arguments[6]], o2 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 7 ? void 0 : arguments[7]], s2 = [this.immediateMode._bezierVertex[2], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 5 ? void 0 : arguments[5], arguments.length <= 8 ? void 0 : arguments[8]], n2 = 0; n2 < d2; n2++)
            t2 = a[0] * this._lookUpTableBezier[n2][0] + a[1] * this._lookUpTableBezier[n2][1] + a[2] * this._lookUpTableBezier[n2][2] + a[3] * this._lookUpTableBezier[n2][3], r2 = o2[0] * this._lookUpTableBezier[n2][0] + o2[1] * this._lookUpTableBezier[n2][1] + o2[2] * this._lookUpTableBezier[n2][2] + o2[3] * this._lookUpTableBezier[n2][3], i2 = s2[0] * this._lookUpTableBezier[n2][0] + s2[1] * this._lookUpTableBezier[n2][1] + s2[2] * this._lookUpTableBezier[n2][2] + s2[3] * this._lookUpTableBezier[n2][3], this.vertex(t2, r2, i2);
          this.immediateMode._bezierVertex[0] = arguments.length <= 6 ? void 0 : arguments[6], this.immediateMode._bezierVertex[1] = arguments.length <= 7 ? void 0 : arguments[7], this.immediateMode._bezierVertex[2] = arguments.length <= 8 ? void 0 : arguments[8];
        }
      }, E.default.RendererGL.prototype.quadraticVertex = function() {
        if (this.immediateMode._quadraticVertex.length === 0)
          throw Error("vertex() must be used once before calling quadraticVertex()");
        var e2, t2, r2, i2, n2, a = [], o2 = [], s2 = [], l2 = arguments.length;
        if ((e2 = 0) === this._lookUpTableQuadratic.length || this._lutQuadraticDetail !== this._pInst._curveDetail) {
          this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutQuadraticDetail, h = 0, c = 1, f = 0; h < 1; ) {
            if (e2 = parseFloat(h.toFixed(6)), this._lookUpTableQuadratic[f] = this._quadraticCoefficients(e2), c.toFixed(6) === u.toFixed(6)) {
              e2 = parseFloat(c.toFixed(6)) + parseFloat(h.toFixed(6)), ++f, this._lookUpTableQuadratic[f] = this._quadraticCoefficients(e2);
              break;
            }
            h += u, c -= u, ++f;
          }
        }
        var d2 = this._lookUpTableQuadratic.length;
        if (l2 === 4) {
          for (this.isQuadratic = true, a = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 2 ? void 0 : arguments[2]], o2 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 3 ? void 0 : arguments[3]], n2 = 0; n2 < d2; n2++)
            t2 = a[0] * this._lookUpTableQuadratic[n2][0] + a[1] * this._lookUpTableQuadratic[n2][1] + a[2] * this._lookUpTableQuadratic[n2][2], r2 = o2[0] * this._lookUpTableQuadratic[n2][0] + o2[1] * this._lookUpTableQuadratic[n2][1] + o2[2] * this._lookUpTableQuadratic[n2][2], this.vertex(t2, r2);
          this.immediateMode._quadraticVertex[0] = arguments.length <= 2 ? void 0 : arguments[2], this.immediateMode._quadraticVertex[1] = arguments.length <= 3 ? void 0 : arguments[3];
        } else if (l2 === 6) {
          for (this.isQuadratic = true, a = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 3 ? void 0 : arguments[3]], o2 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 4 ? void 0 : arguments[4]], s2 = [this.immediateMode._quadraticVertex[2], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 5 ? void 0 : arguments[5]], n2 = 0; n2 < d2; n2++)
            t2 = a[0] * this._lookUpTableQuadratic[n2][0] + a[1] * this._lookUpTableQuadratic[n2][1] + a[2] * this._lookUpTableQuadratic[n2][2], r2 = o2[0] * this._lookUpTableQuadratic[n2][0] + o2[1] * this._lookUpTableQuadratic[n2][1] + o2[2] * this._lookUpTableQuadratic[n2][2], i2 = s2[0] * this._lookUpTableQuadratic[n2][0] + s2[1] * this._lookUpTableQuadratic[n2][1] + s2[2] * this._lookUpTableQuadratic[n2][2], this.vertex(t2, r2, i2);
          this.immediateMode._quadraticVertex[0] = arguments.length <= 3 ? void 0 : arguments[3], this.immediateMode._quadraticVertex[1] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._quadraticVertex[2] = arguments.length <= 5 ? void 0 : arguments[5];
        }
      }, E.default.RendererGL.prototype.curveVertex = function() {
        var e2, t2, r2, i2, n2, a = [], o2 = [], s2 = [], l2 = arguments.length;
        if ((e2 = 0) === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
          this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutBezierDetail, h = 0, c = 1, f = 0; h < 1; ) {
            if (e2 = parseFloat(h.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(e2), c.toFixed(6) === u.toFixed(6)) {
              e2 = parseFloat(c.toFixed(6)) + parseFloat(h.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(e2);
              break;
            }
            h += u, c -= u, ++f;
          }
        }
        var d2 = this._lookUpTableBezier.length;
        if (l2 === 2) {
          if (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), this.immediateMode._curveVertex.length === 8) {
            for (this.isCurve = true, a = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[6]]), o2 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[7]]), n2 = 0; n2 < d2; n2++)
              t2 = a[0] * this._lookUpTableBezier[n2][0] + a[1] * this._lookUpTableBezier[n2][1] + a[2] * this._lookUpTableBezier[n2][2] + a[3] * this._lookUpTableBezier[n2][3], r2 = o2[0] * this._lookUpTableBezier[n2][0] + o2[1] * this._lookUpTableBezier[n2][1] + o2[2] * this._lookUpTableBezier[n2][2] + o2[3] * this._lookUpTableBezier[n2][3], this.vertex(t2, r2);
            for (n2 = 0; n2 < l2; n2++)
              this.immediateMode._curveVertex.shift();
          }
        } else if (l2 === 3 && (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), this.immediateMode._curveVertex.push(arguments.length <= 2 ? void 0 : arguments[2]), this.immediateMode._curveVertex.length === 12)) {
          for (this.isCurve = true, a = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[6], this.immediateMode._curveVertex[9]]), o2 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[7], this.immediateMode._curveVertex[10]]), s2 = this._bezierToCatmull([this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[8], this.immediateMode._curveVertex[11]]), n2 = 0; n2 < d2; n2++)
            t2 = a[0] * this._lookUpTableBezier[n2][0] + a[1] * this._lookUpTableBezier[n2][1] + a[2] * this._lookUpTableBezier[n2][2] + a[3] * this._lookUpTableBezier[n2][3], r2 = o2[0] * this._lookUpTableBezier[n2][0] + o2[1] * this._lookUpTableBezier[n2][1] + o2[2] * this._lookUpTableBezier[n2][2] + o2[3] * this._lookUpTableBezier[n2][3], i2 = s2[0] * this._lookUpTableBezier[n2][0] + s2[1] * this._lookUpTableBezier[n2][1] + s2[2] * this._lookUpTableBezier[n2][2] + s2[3] * this._lookUpTableBezier[n2][3], this.vertex(t2, r2, i2);
          for (n2 = 0; n2 < l2; n2++)
            this.immediateMode._curveVertex.shift();
        }
      }, E.default.RendererGL.prototype.image = function(e2, t2, r2, i2, n2, a, o2, s2, l2) {
        this._isErasing && this.blendMode(this._cachedBlendMode), this._pInst.push(), this._pInst.noLights(), this._pInst.texture(e2), this._pInst.textureMode(d.NORMAL);
        var u = 0;
        t2 <= e2.width && (u = t2 / e2.width);
        var h = 1;
        t2 + i2 <= e2.width && (h = (t2 + i2) / e2.width);
        var c = 0;
        r2 <= e2.height && (c = r2 / e2.height);
        var f = 1;
        r2 + n2 <= e2.height && (f = (r2 + n2) / e2.height), this.beginShape(), this.vertex(a, o2, 0, u, c), this.vertex(a + s2, o2, 0, h, c), this.vertex(a + s2, o2 + l2, 0, h, f), this.vertex(a, o2 + l2, 0, u, f), this.endShape(d.CLOSE), this._pInst.pop(), this._isErasing && this.blendMode(d.REMOVE);
      };
      var n = E.default;
      r.default = n;
    }, {"../core/constants": 26, "../core/main": 36, "./p5.Geometry": 85}], 80: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, f = (i = e("../core/main")) && i.__esModule ? i : {default: i}, n = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      f.default.prototype.orbitControl = function(e2, t2, r2) {
        if (this._assert3d("orbitControl"), f.default._validateParameters("orbitControl", arguments), this.mouseX < this.width && 0 < this.mouseX && this.mouseY < this.height && 0 < this.mouseY) {
          var i2 = this._renderer._curCamera;
          e2 === void 0 && (e2 = 1), t2 === void 0 && (t2 = e2), r2 === void 0 && (r2 = 0.5), this.contextMenuDisabled !== true && (this.canvas.oncontextmenu = function() {
            return false;
          }, this._setProperty("contextMenuDisabled", true)), this.wheelDefaultDisabled !== true && (this.canvas.onwheel = function() {
            return false;
          }, this._setProperty("wheelDefaultDisabled", true));
          var n2 = this.height < this.width ? this.height : this.width;
          if (this._mouseWheelDeltaY !== this._pmouseWheelDeltaY && (0 < this._mouseWheelDeltaY ? this._renderer._curCamera._orbit(0, 0, r2 * n2) : this._renderer._curCamera._orbit(0, 0, -r2 * n2)), this.mouseIsPressed) {
            if (this.mouseButton === this.LEFT) {
              var a2 = -e2 * (this.mouseX - this.pmouseX) / n2, o2 = t2 * (this.mouseY - this.pmouseY) / n2;
              this._renderer._curCamera._orbit(a2, o2, 0);
            } else if (this.mouseButton === this.RIGHT) {
              var s2 = i2._getLocalAxes(), l = Math.sqrt(s2.x[0] * s2.x[0] + s2.x[2] * s2.x[2]);
              l !== 0 && (s2.x[0] /= l, s2.x[2] /= l);
              var u = Math.sqrt(s2.y[0] * s2.y[0] + s2.y[2] * s2.y[2]);
              u !== 0 && (s2.y[0] /= u, s2.y[2] /= u);
              var h = -1 * e2 * (this.mouseX - this.pmouseX), c = -1 * t2 * (this.mouseY - this.pmouseY);
              i2.setPosition(i2.eyeX + h * s2.x[0] + c * s2.z[0], i2.eyeY, i2.eyeZ + h * s2.x[2] + c * s2.z[2]);
            }
          }
          return this;
        }
      }, f.default.prototype.debugMode = function() {
        this._assert3d("debugMode");
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        f.default._validateParameters("debugMode", t2);
        for (var i2 = this._registeredMethods.post.length - 1; 0 <= i2; i2--)
          this._registeredMethods.post[i2].toString() !== this._grid().toString() && this._registeredMethods.post[i2].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(i2, 1);
        t2[0] === n.GRID ? this.registerMethod("post", this._grid.call(this, t2[1], t2[2], t2[3], t2[4], t2[5])) : t2[0] === n.AXES ? this.registerMethod("post", this._axesIcon.call(this, t2[1], t2[2], t2[3], t2[4])) : (this.registerMethod("post", this._grid.call(this, t2[0], t2[1], t2[2], t2[3], t2[4])), this.registerMethod("post", this._axesIcon.call(this, t2[5], t2[6], t2[7], t2[8])));
      }, f.default.prototype.noDebugMode = function() {
        this._assert3d("noDebugMode");
        for (var e2 = this._registeredMethods.post.length - 1; 0 <= e2; e2--)
          this._registeredMethods.post[e2].toString() !== this._grid().toString() && this._registeredMethods.post[e2].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e2, 1);
      }, f.default.prototype._grid = function(e2, r2, i2, n2, a2) {
        e2 === void 0 && (e2 = this.width / 2), r2 === void 0 && (r2 = Math.round(e2 / 30) < 4 ? 4 : Math.round(e2 / 30)), i2 === void 0 && (i2 = 0), n2 === void 0 && (n2 = 0), a2 === void 0 && (a2 = 0);
        var o2 = e2 / r2, s2 = e2 / 2;
        return function() {
          this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]);
          for (var e3 = 0; e3 <= r2; e3++)
            this.beginShape(this.LINES), this.vertex(-s2 + i2, n2, e3 * o2 - s2 + a2), this.vertex(+s2 + i2, n2, e3 * o2 - s2 + a2), this.endShape();
          for (var t2 = 0; t2 <= r2; t2++)
            this.beginShape(this.LINES), this.vertex(t2 * o2 - s2 + i2, n2, -s2 + a2), this.vertex(t2 * o2 - s2 + i2, n2, +s2 + a2), this.endShape();
          this.pop();
        };
      }, f.default.prototype._axesIcon = function(e2, t2, r2, i2) {
        return e2 === void 0 && (e2 = 40 < this.width / 20 ? this.width / 20 : 40), t2 === void 0 && (t2 = -this.width / 4), r2 === void 0 && (r2 = t2), i2 === void 0 && (i2 = t2), function() {
          this.push(), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]), this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t2, r2, i2), this.vertex(t2 + e2, r2, i2), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), this.vertex(t2, r2, i2), this.vertex(t2, r2 + e2, i2), this.endShape(), this.stroke(0, 0, 255), this.beginShape(this.LINES), this.vertex(t2, r2, i2), this.vertex(t2, r2, i2 + e2), this.endShape(), this.pop();
        };
      };
      var a = f.default;
      r.default = a;
    }, {"../core/constants": 26, "../core/main": 36}], 81: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, m = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      m.default.prototype.ambientLight = function(e2, t2, r2, i2) {
        this._assert3d("ambientLight"), m.default._validateParameters("ambientLight", arguments);
        var n2 = this.color.apply(this, arguments);
        return this._renderer.ambientLightColors.push(n2._array[0], n2._array[1], n2._array[2]), this._renderer._enableLighting = true, this;
      }, m.default.prototype.specularColor = function(e2, t2, r2) {
        this._assert3d("specularColor"), m.default._validateParameters("specularColor", arguments);
        var i2 = this.color.apply(this, arguments);
        return this._renderer.specularColors = [i2._array[0], i2._array[1], i2._array[2]], this;
      }, m.default.prototype.directionalLight = function(e2, t2, r2, i2, n2, a) {
        var o, s, l, u;
        this._assert3d("directionalLight"), m.default._validateParameters("directionalLight", arguments), o = e2 instanceof m.default.Color ? e2 : this.color(e2, t2, r2);
        var h = arguments[arguments.length - 1];
        u = typeof h == "number" ? (s = arguments[arguments.length - 3], l = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (s = h.x, l = h.y, h.z);
        var c = Math.sqrt(s * s + l * l + u * u);
        return this._renderer.directionalLightDirections.push(s / c, l / c, u / c), this._renderer.directionalLightDiffuseColors.push(o._array[0], o._array[1], o._array[2]), Array.prototype.push.apply(this._renderer.directionalLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
      }, m.default.prototype.pointLight = function(e2, t2, r2, i2, n2, a) {
        var o, s, l, u;
        this._assert3d("pointLight"), m.default._validateParameters("pointLight", arguments), o = e2 instanceof m.default.Color ? e2 : this.color(e2, t2, r2);
        var h = arguments[arguments.length - 1];
        return u = typeof h == "number" ? (s = arguments[arguments.length - 3], l = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (s = h.x, l = h.y, h.z), this._renderer.pointLightPositions.push(s, l, u), this._renderer.pointLightDiffuseColors.push(o._array[0], o._array[1], o._array[2]), Array.prototype.push.apply(this._renderer.pointLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
      }, m.default.prototype.lights = function() {
        return this._assert3d("lights"), this.ambientLight(128, 128, 128), this.directionalLight(128, 128, 128, 0, 0, -1), this;
      }, m.default.prototype.lightFalloff = function(e2, t2, r2) {
        return this._assert3d("lightFalloff"), m.default._validateParameters("lightFalloff", arguments), e2 < 0 && (e2 = 0, console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")), t2 < 0 && (t2 = 0, console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")), r2 < 0 && (r2 = 0, console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")), e2 === 0 && t2 === 0 && r2 === 0 && (e2 = 1, console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")), this._renderer.constantAttenuation = e2, this._renderer.linearAttenuation = t2, this._renderer.quadraticAttenuation = r2, this;
      }, m.default.prototype.spotLight = function(e2, t2, r2, i2, n2, a, o, s, l, u, h) {
        var c, f, d;
        this._assert3d("spotLight"), m.default._validateParameters("spotLight", arguments);
        var p = arguments.length;
        switch (p) {
          case 11:
          case 10:
            c = this.color(e2, t2, r2), f = new m.default.Vector(i2, n2, a), d = new m.default.Vector(o, s, l);
            break;
          case 9:
            e2 instanceof m.default.Color ? (c = e2, f = new m.default.Vector(t2, r2, i2), d = new m.default.Vector(n2, a, o), u = s, h = l) : i2 instanceof m.default.Vector ? (c = this.color(e2, t2, r2), f = i2, d = new m.default.Vector(n2, a, o), u = s, h = l) : o instanceof m.default.Vector ? (c = this.color(e2, t2, r2), f = new m.default.Vector(i2, n2, a), d = o, u = s, h = l) : (c = this.color(e2, t2, r2), f = new m.default.Vector(i2, n2, a), d = new m.default.Vector(o, s, l));
            break;
          case 8:
            u = (d = e2 instanceof m.default.Color ? (c = e2, f = new m.default.Vector(t2, r2, i2), new m.default.Vector(n2, a, o)) : i2 instanceof m.default.Vector ? (c = this.color(e2, t2, r2), f = i2, new m.default.Vector(n2, a, o)) : (c = this.color(e2, t2, r2), f = new m.default.Vector(i2, n2, a), o), s);
            break;
          case 7:
            e2 instanceof m.default.Color && t2 instanceof m.default.Vector ? (c = e2, f = t2, d = new m.default.Vector(r2, i2, n2), u = a, h = o) : e2 instanceof m.default.Color && n2 instanceof m.default.Vector ? (c = e2, f = new m.default.Vector(t2, r2, i2), d = n2, u = a, h = o) : i2 instanceof m.default.Vector && n2 instanceof m.default.Vector ? (c = this.color(e2, t2, r2), f = i2, d = n2, u = a, h = o) : d = e2 instanceof m.default.Color ? (c = e2, f = new m.default.Vector(t2, r2, i2), new m.default.Vector(n2, a, o)) : i2 instanceof m.default.Vector ? (c = this.color(e2, t2, r2), f = i2, new m.default.Vector(n2, a, o)) : (c = this.color(e2, t2, r2), f = new m.default.Vector(i2, n2, a), o);
            break;
          case 6:
            i2 instanceof m.default.Vector && n2 instanceof m.default.Vector ? (c = this.color(e2, t2, r2), f = i2, d = n2, u = a) : e2 instanceof m.default.Color && n2 instanceof m.default.Vector ? (c = e2, f = new m.default.Vector(t2, r2, i2), d = n2, u = a) : e2 instanceof m.default.Color && t2 instanceof m.default.Vector && (c = e2, f = t2, d = new m.default.Vector(r2, i2, n2), u = a);
            break;
          case 5:
            e2 instanceof m.default.Color && t2 instanceof m.default.Vector && r2 instanceof m.default.Vector ? (c = e2, f = t2, d = r2, u = i2, h = n2) : i2 instanceof m.default.Vector && n2 instanceof m.default.Vector ? (c = this.color(e2, t2, r2), f = i2, d = n2) : e2 instanceof m.default.Color && n2 instanceof m.default.Vector ? (c = e2, f = new m.default.Vector(t2, r2, i2), d = n2) : e2 instanceof m.default.Color && t2 instanceof m.default.Vector && (c = e2, f = t2, d = new m.default.Vector(r2, i2, n2));
            break;
          case 4:
            c = e2, f = t2, d = r2, u = i2;
            break;
          case 3:
            c = e2, f = t2, d = r2;
            break;
          default:
            return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p < 3 ? "few" : "many", " arguments were provided")), this;
        }
        return this._renderer.spotLightDiffuseColors.push(c._array[0], c._array[1], c._array[2]), Array.prototype.push.apply(this._renderer.spotLightSpecularColors, this._renderer.specularColors), this._renderer.spotLightPositions.push(f.x, f.y, f.z), d.normalize(), this._renderer.spotLightDirections.push(d.x, d.y, d.z), u === void 0 && (u = Math.PI / 3), h !== void 0 && h < 1 ? (h = 1, console.warn("Value of concentration needs to be greater than 1. Setting it to 1")) : h === void 0 && (h = 100), u = this._renderer._pInst._toRadians(u), this._renderer.spotLightAngle.push(Math.cos(u)), this._renderer.spotLightConc.push(h), this._renderer._enableLighting = true, this;
      }, m.default.prototype.noLights = function() {
        return this._assert3d("noLights"), m.default._validateParameters("noLights", arguments), this._renderer._enableLighting = false, this._renderer.ambientLightColors.length = 0, this._renderer.specularColors = [1, 1, 1], this._renderer.directionalLightDirections.length = 0, this._renderer.directionalLightDiffuseColors.length = 0, this._renderer.directionalLightSpecularColors.length = 0, this._renderer.pointLightPositions.length = 0, this._renderer.pointLightDiffuseColors.length = 0, this._renderer.pointLightSpecularColors.length = 0, this._renderer.spotLightPositions.length = 0, this._renderer.spotLightDirections.length = 0, this._renderer.spotLightDiffuseColors.length = 0, this._renderer.spotLightSpecularColors.length = 0, this._renderer.spotLightAngle.length = 0, this._renderer.spotLightConc.length = 0, this._renderer.constantAttenuation = 1, this._renderer.linearAttenuation = 0, this._renderer.quadraticAttenuation = 0, this._renderer._useShininess = 1, this;
      };
      var n = m.default;
      r.default = n;
    }, {"../core/main": 36}], 82: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, S = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      function s(e2, t2, r2) {
        for (var i2 = 0, n2 = e2.length; i2 < n2; i2++)
          if (e2[i2] !== t2.getUint8(r2 + i2, false))
            return false;
        return true;
      }
      e("./p5.Geometry"), S.default.prototype.loadModel = function(e2) {
        var t2, r2, i2;
        S.default._validateParameters("loadModel", arguments);
        var n2 = e2.slice(-4);
        typeof arguments[1] == "boolean" ? (t2 = arguments[1], r2 = arguments[2], i2 = arguments[3], arguments[4] !== void 0 && (n2 = arguments[4])) : (t2 = false, r2 = arguments[1], i2 = arguments[2], arguments[3] !== void 0 && (n2 = arguments[3]));
        var a = new S.default.Geometry();
        a.gid = "".concat(e2, "|").concat(t2);
        var o = this;
        return n2.match(/\.stl$/i) ? this.httpDo(e2, "GET", "arrayBuffer", function(e3) {
          !function(e4, t3) {
            if (function(e5) {
              for (var t4 = new DataView(e5), r4 = [115, 111, 108, 105, 100], i4 = 0; i4 < 5; i4++)
                if (s(r4, t4, i4))
                  return false;
              return true;
            }(t3))
              !function(e5, t4) {
                for (var r4, i4, n3, a2, o2, s2, l, u = new DataView(t4), h = u.getUint32(80, true), c = false, f = 0; f < 70; f++)
                  u.getUint32(f, false) === 1129270351 && u.getUint8(f + 4) === 82 && u.getUint8(f + 5) === 61 && (c = true, a2 = [], o2 = u.getUint8(f + 6) / 255, s2 = u.getUint8(f + 7) / 255, l = u.getUint8(f + 8) / 255);
                for (var d = 0; d < h; d++) {
                  var p = 84 + 50 * d, m = u.getFloat32(p, true), v = u.getFloat32(4 + p, true), y = u.getFloat32(8 + p, true);
                  if (c) {
                    var g = u.getUint16(48 + p, true);
                    n3 = (32768 & g) == 0 ? (r4 = (31 & g) / 31, i4 = (g >> 5 & 31) / 31, (g >> 10 & 31) / 31) : (r4 = o2, i4 = s2, l);
                  }
                  for (var b = new S.default.Vector(m, v, y), _ = 1; _ <= 3; _++) {
                    var x = p + 12 * _, w = new S.default.Vector(u.getFloat32(x, true), u.getFloat32(4 + x, true), u.getFloat32(8 + x, true));
                    e5.vertices.push(w), e5.vertexNormals.push(b), c && a2.push(r4, i4, n3);
                  }
                  e5.faces.push([3 * d, 3 * d + 1, 3 * d + 2]), e5.uvs.push([0, 0], [0, 0], [0, 0]);
                }
              }(e4, t3);
            else {
              var r3 = new DataView(t3);
              if (!("TextDecoder" in window))
                return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");
              var i3 = new TextDecoder("utf-8").decode(r3).split("\n");
              !function(e5, t4) {
                for (var r4, i4, n3 = "", a2 = [], o2 = 0; o2 < t4.length; ++o2) {
                  for (var s2 = t4[o2].trim(), l = s2.split(" "), u = 0; u < l.length; ++u)
                    l[u] === "" && l.splice(u, 1);
                  if (l.length !== 0)
                    switch (n3) {
                      case "":
                        if (l[0] !== "solid")
                          return console.error(s2), console.error('Invalid state "'.concat(l[0], '", should be "solid"'));
                        n3 = "solid";
                        break;
                      case "solid":
                        if (l[0] !== "facet" || l[1] !== "normal")
                          return console.error(s2), console.error('Invalid state "'.concat(l[0], '", should be "facet normal"'));
                        r4 = new S.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e5.vertexNormals.push(r4, r4, r4), n3 = "facet normal";
                        break;
                      case "facet normal":
                        if (l[0] !== "outer" || l[1] !== "loop")
                          return console.error(s2), console.error('Invalid state "'.concat(l[0], '", should be "outer loop"'));
                        n3 = "vertex";
                        break;
                      case "vertex":
                        if (l[0] === "vertex")
                          i4 = new S.default.Vector(parseFloat(l[1]), parseFloat(l[2]), parseFloat(l[3])), e5.vertices.push(i4), e5.uvs.push([0, 0]), a2.push(e5.vertices.indexOf(i4));
                        else {
                          if (l[0] !== "endloop")
                            return console.error(s2), console.error('Invalid state "'.concat(l[0], '", should be "vertex" or "endloop"'));
                          e5.faces.push(a2), a2 = [], n3 = "endloop";
                        }
                        break;
                      case "endloop":
                        if (l[0] !== "endfacet")
                          return console.error(s2), console.error('Invalid state "'.concat(l[0], '", should be "endfacet"'));
                        n3 = "endfacet";
                        break;
                      case "endfacet":
                        if (l[0] !== "endsolid") {
                          if (l[0] !== "facet" || l[1] !== "normal")
                            return console.error(s2), console.error('Invalid state "'.concat(l[0], '", should be "endsolid" or "facet normal"'));
                          r4 = new S.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e5.vertexNormals.push(r4, r4, r4), n3 = "facet normal";
                        }
                        break;
                      default:
                        console.error('Invalid state "'.concat(n3, '"'));
                    }
                }
              }(e4, i3);
            }
          }(a, e3), t2 && a.normalize(), o._decrementPreload(), typeof r2 == "function" && r2(a);
        }, i2) : n2.match(/\.obj$/i) ? this.loadStrings(e2, function(e3) {
          !function(e4, t3) {
            for (var r3 = {v: [], vt: [], vn: []}, i3 = {}, n3 = 0; n3 < t3.length; ++n3) {
              var a2 = t3[n3].trim().split(/\b\s+/);
              if (0 < a2.length) {
                if (a2[0] === "v" || a2[0] === "vn") {
                  var o2 = new S.default.Vector(parseFloat(a2[1]), parseFloat(a2[2]), parseFloat(a2[3]));
                  r3[a2[0]].push(o2);
                } else if (a2[0] === "vt") {
                  var s2 = [parseFloat(a2[1]), parseFloat(a2[2])];
                  r3[a2[0]].push(s2);
                } else if (a2[0] === "f")
                  for (var l = 3; l < a2.length; ++l) {
                    for (var u = [], h = [1, l - 1, l], c = 0; c < h.length; ++c) {
                      var f = a2[h[c]], d = 0;
                      if (i3[f] !== void 0)
                        d = i3[f];
                      else {
                        for (var p = f.split("/"), m = 0; m < p.length; m++)
                          p[m] = parseInt(p[m]) - 1;
                        d = i3[f] = e4.vertices.length, e4.vertices.push(r3.v[p[0]].copy()), r3.vt[p[1]] ? e4.uvs.push(r3.vt[p[1]].slice()) : e4.uvs.push([0, 0]), r3.vn[p[2]] && e4.vertexNormals.push(r3.vn[p[2]].copy());
                      }
                      u.push(d);
                    }
                    u[0] !== u[1] && u[0] !== u[2] && u[1] !== u[2] && e4.faces.push(u);
                  }
              }
            }
            e4.vertexNormals.length === 0 && e4.computeNormals();
          }(a, e3), t2 && a.normalize(), o._decrementPreload(), typeof r2 == "function" && r2(a);
        }, i2) : (S.default._friendlyFileLoadError(3, e2), i2 ? i2() : console.error("Sorry, the file type is invalid. Only OBJ and STL files are supported.")), a;
      }, S.default.prototype.model = function(e2) {
        this._assert3d("model"), S.default._validateParameters("model", arguments), 0 < e2.vertices.length && (this._renderer.geometryInHash(e2.gid) || (e2._makeTriangleEdges()._edgesToVertices(), this._renderer.createBuffers(e2.gid, e2)), this._renderer.drawBuffers(e2.gid));
      };
      var n = S.default;
      r.default = n;
    }, {"../core/main": 36, "./p5.Geometry": 85}], 83: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, u = (i = e("../core/main")) && i.__esModule ? i : {default: i}, n = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      e("./p5.Texture"), u.default.prototype.loadShader = function(e2, t2, r2, i2) {
        u.default._validateParameters("loadShader", arguments), i2 = i2 || console.error;
        function n2() {
          o2._decrementPreload(), r2 && r2(a2);
        }
        var a2 = new u.default.Shader(), o2 = this, s2 = false, l = false;
        return this.loadStrings(e2, function(e3) {
          a2._vertSrc = e3.join("\n"), l = true, s2 && n2();
        }, i2), this.loadStrings(t2, function(e3) {
          a2._fragSrc = e3.join("\n"), s2 = true, l && n2();
        }, i2), a2;
      }, u.default.prototype.createShader = function(e2, t2) {
        return this._assert3d("createShader"), u.default._validateParameters("createShader", arguments), new u.default.Shader(this._renderer, e2, t2);
      }, u.default.prototype.shader = function(e2) {
        return this._assert3d("shader"), u.default._validateParameters("shader", arguments), e2._renderer === void 0 && (e2._renderer = this._renderer), e2.isStrokeShader() ? this._renderer.userStrokeShader = e2 : (this._renderer.userFillShader = e2, this._renderer._useNormalMaterial = false), e2.init(), this;
      }, u.default.prototype.resetShader = function() {
        return this._renderer.userFillShader = this._renderer.userStrokeShader = null, this;
      }, u.default.prototype.normalMaterial = function() {
        this._assert3d("normalMaterial");
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++)
          t2[r2] = arguments[r2];
        return u.default._validateParameters("normalMaterial", t2), this._renderer.drawMode = n.FILL, this._renderer._useSpecularMaterial = false, this._renderer._useEmissiveMaterial = false, this._renderer._useNormalMaterial = true, this._renderer.curFillColor = [1, 1, 1, 1], this._renderer._setProperty("_doFill", true), this.noStroke(), this;
      }, u.default.prototype.texture = function(e2) {
        return this._assert3d("texture"), u.default._validateParameters("texture", arguments), e2.gifProperties && e2._animateGif(this), this._renderer.drawMode = n.TEXTURE, this._renderer._useSpecularMaterial = false, this._renderer._useEmissiveMaterial = false, this._renderer._useNormalMaterial = false, this._renderer._tex = e2, this._renderer._setProperty("_doFill", true), this;
      }, u.default.prototype.textureMode = function(e2) {
        e2 !== n.IMAGE && e2 !== n.NORMAL ? console.warn("You tried to set ".concat(e2, " textureMode only supports IMAGE & NORMAL ")) : this._renderer.textureMode = e2;
      }, u.default.prototype.textureWrap = function(e2) {
        var t2 = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : e2;
        this._renderer.textureWrapX = e2, this._renderer.textureWrapY = t2;
        for (var r2 = this._renderer.textures, i2 = 0; i2 < r2.length; i2++)
          r2[i2].setWrapMode(e2, t2);
      }, u.default.prototype.ambientMaterial = function(e2, t2, r2) {
        this._assert3d("ambientMaterial"), u.default._validateParameters("ambientMaterial", arguments);
        var i2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer.curFillColor = i2._array, this._renderer._useSpecularMaterial = false, this._renderer._useEmissiveMaterial = false, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this._renderer._tex = null, this;
      }, u.default.prototype.emissiveMaterial = function(e2, t2, r2, i2) {
        this._assert3d("emissiveMaterial"), u.default._validateParameters("emissiveMaterial", arguments);
        var n2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer.curFillColor = n2._array, this._renderer._useSpecularMaterial = false, this._renderer._useEmissiveMaterial = true, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this._renderer._tex = null, this;
      }, u.default.prototype.specularMaterial = function(e2, t2, r2, i2) {
        this._assert3d("specularMaterial"), u.default._validateParameters("specularMaterial", arguments);
        var n2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer.curFillColor = n2._array, this._renderer._useSpecularMaterial = true, this._renderer._useEmissiveMaterial = false, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this._renderer._tex = null, this;
      }, u.default.prototype.shininess = function(e2) {
        return this._assert3d("shininess"), u.default._validateParameters("shininess", arguments), e2 < 1 && (e2 = 1), this._renderer._useShininess = e2, this;
      }, u.default.RendererGL.prototype._applyColorBlend = function(e2) {
        var t2 = this.GL, r2 = this.drawMode === n.TEXTURE || e2[e2.length - 1] < 1 || this._isErasing;
        return r2 !== this._isBlending && (r2 || this.curBlendMode !== n.BLEND && this.curBlendMode !== n.ADD ? t2.enable(t2.BLEND) : t2.disable(t2.BLEND), t2.depthMask(true), this._isBlending = r2), this._applyBlendMode(), e2;
      }, u.default.RendererGL.prototype._applyBlendMode = function() {
        if (this._cachedBlendMode !== this.curBlendMode) {
          var e2 = this.GL;
          switch (this.curBlendMode) {
            case n.BLEND:
            case n.ADD:
              e2.blendEquation(e2.FUNC_ADD), e2.blendFunc(e2.SRC_ALPHA, e2.ONE_MINUS_SRC_ALPHA);
              break;
            case n.REMOVE:
              e2.blendEquation(e2.FUNC_REVERSE_SUBTRACT), e2.blendFunc(e2.SRC_ALPHA, e2.DST_ALPHA);
              break;
            case n.MULTIPLY:
              e2.blendEquationSeparate(e2.FUNC_ADD, e2.FUNC_ADD), e2.blendFuncSeparate(e2.ZERO, e2.SRC_COLOR, e2.ONE, e2.ONE);
              break;
            case n.SCREEN:
              e2.blendEquationSeparate(e2.FUNC_ADD, e2.FUNC_ADD), e2.blendFuncSeparate(e2.ONE_MINUS_DST_COLOR, e2.ONE, e2.ONE, e2.ONE);
              break;
            case n.EXCLUSION:
              e2.blendEquationSeparate(e2.FUNC_ADD, e2.FUNC_ADD), e2.blendFuncSeparate(e2.ONE_MINUS_DST_COLOR, e2.ONE_MINUS_SRC_COLOR, e2.ONE, e2.ONE);
              break;
            case n.REPLACE:
              e2.blendEquation(e2.FUNC_ADD), e2.blendFunc(e2.ONE, e2.ZERO);
              break;
            case n.SUBTRACT:
              e2.blendEquationSeparate(e2.FUNC_REVERSE_SUBTRACT, e2.FUNC_ADD), e2.blendFuncSeparate(e2.SRC_ALPHA, e2.ONE, e2.ONE, e2.ONE);
              break;
            case n.DARKEST:
              this.blendExt ? (e2.blendEquationSeparate(this.blendExt.MIN_EXT, e2.FUNC_ADD), e2.blendFuncSeparate(e2.ONE, e2.ONE, e2.ONE, e2.ONE)) : console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");
              break;
            case n.LIGHTEST:
              this.blendExt ? (e2.blendEquationSeparate(this.blendExt.MAX_EXT, e2.FUNC_ADD), e2.blendFuncSeparate(e2.ONE, e2.ONE, e2.ONE, e2.ONE)) : console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");
              break;
            default:
              console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.");
          }
          this._isErasing || (this._cachedBlendMode = this.curBlendMode);
        }
      };
      var a = u.default;
      r.default = a;
    }, {"../core/constants": 26, "../core/main": 36, "./p5.Texture": 92}], 84: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, m = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      m.default.prototype.camera = function() {
        var e2;
        this._assert3d("camera");
        for (var t2 = arguments.length, r2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r2[i2] = arguments[i2];
        return m.default._validateParameters("camera", r2), (e2 = this._renderer._curCamera).camera.apply(e2, r2), this;
      }, m.default.prototype.perspective = function() {
        var e2;
        this._assert3d("perspective");
        for (var t2 = arguments.length, r2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r2[i2] = arguments[i2];
        return m.default._validateParameters("perspective", r2), (e2 = this._renderer._curCamera).perspective.apply(e2, r2), this;
      }, m.default.prototype.ortho = function() {
        var e2;
        this._assert3d("ortho");
        for (var t2 = arguments.length, r2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r2[i2] = arguments[i2];
        return m.default._validateParameters("ortho", r2), (e2 = this._renderer._curCamera).ortho.apply(e2, r2), this;
      }, m.default.prototype.frustum = function() {
        var e2;
        this._assert3d("frustum");
        for (var t2 = arguments.length, r2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          r2[i2] = arguments[i2];
        return m.default._validateParameters("frustum", r2), (e2 = this._renderer._curCamera).frustum.apply(e2, r2), this;
      }, m.default.prototype.createCamera = function() {
        this._assert3d("createCamera");
        var e2 = new m.default.Camera(this._renderer);
        return e2._computeCameraDefaultSettings(), e2._setDefaultCamera(), this._renderer._curCamera = e2;
      }, m.default.Camera = function(e2) {
        this._renderer = e2, this.cameraType = "default", this.cameraMatrix = new m.default.Matrix(), this.projMatrix = new m.default.Matrix();
      }, m.default.Camera.prototype.perspective = function(e2, t2, r2, i2) {
        this.cameraType = 0 < arguments.length ? "custom" : "default", e2 === void 0 ? (e2 = this.defaultCameraFOV, this.cameraFOV = e2) : this.cameraFOV = this._renderer._pInst._toRadians(e2), t2 === void 0 && (t2 = this.defaultAspectRatio), r2 === void 0 && (r2 = this.defaultCameraNear), i2 === void 0 && (i2 = this.defaultCameraFar), r2 <= 1e-4 && (r2 = 0.01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), i2 < r2 && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), this.aspectRatio = t2, this.cameraNear = r2, this.cameraFar = i2, this.projMatrix = m.default.Matrix.identity();
        var n2 = 1 / Math.tan(this.cameraFOV / 2), a = 1 / (this.cameraNear - this.cameraFar);
        this.projMatrix.set(n2 / t2, 0, 0, 0, 0, -n2, 0, 0, 0, 0, (i2 + r2) * a, -1, 0, 0, 2 * i2 * r2 * a, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]);
      }, m.default.Camera.prototype.ortho = function(e2, t2, r2, i2, n2, a) {
        e2 === void 0 && (e2 = -this._renderer.width / 2), t2 === void 0 && (t2 = this._renderer.width / 2), r2 === void 0 && (r2 = -this._renderer.height / 2), i2 === void 0 && (i2 = this._renderer.height / 2), n2 === void 0 && (n2 = 0), a === void 0 && (a = Math.max(this._renderer.width, this._renderer.height));
        var o = t2 - e2, s = i2 - r2, l = a - n2, u = 2 / o, h = 2 / s, c = -2 / l, f = -(t2 + e2) / o, d = -(i2 + r2) / s, p = -(a + n2) / l;
        this.projMatrix = m.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -h, 0, 0, 0, 0, c, 0, f, d, p, 1), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
      }, m.default.Camera.prototype.frustum = function(e2, t2, r2, i2, n2, a) {
        e2 === void 0 && (e2 = -this._renderer.width / 2), t2 === void 0 && (t2 = this._renderer.width / 2), r2 === void 0 && (r2 = -this._renderer.height / 2), i2 === void 0 && (i2 = this._renderer.height / 2), n2 === void 0 && (n2 = 0), a === void 0 && (a = Math.max(this._renderer.width, this._renderer.height));
        var o = t2 - e2, s = i2 - r2, l = a - n2, u = 2 * n2 / o, h = 2 * n2 / s, c = -2 * a * n2 / l, f = (t2 + e2) / o, d = (i2 + r2) / s, p = -(a + n2) / l;
        this.projMatrix = m.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, h, 0, 0, f, d, p, -1, 0, 0, c, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
      }, m.default.Camera.prototype._rotateView = function(e2, t2, r2, i2) {
        var n2 = this.centerX, a = this.centerY, o = this.centerZ;
        n2 -= this.eyeX, a -= this.eyeY, o -= this.eyeZ;
        var s = m.default.Matrix.identity(this._renderer._pInst);
        s.rotate(this._renderer._pInst._toRadians(e2), t2, r2, i2);
        var l = [n2 * s.mat4[0] + a * s.mat4[4] + o * s.mat4[8], n2 * s.mat4[1] + a * s.mat4[5] + o * s.mat4[9], n2 * s.mat4[2] + a * s.mat4[6] + o * s.mat4[10]];
        l[0] += this.eyeX, l[1] += this.eyeY, l[2] += this.eyeZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, l[0], l[1], l[2], this.upX, this.upY, this.upZ);
      }, m.default.Camera.prototype.pan = function(e2) {
        var t2 = this._getLocalAxes();
        this._rotateView(e2, t2.y[0], t2.y[1], t2.y[2]);
      }, m.default.Camera.prototype.tilt = function(e2) {
        var t2 = this._getLocalAxes();
        this._rotateView(e2, t2.x[0], t2.x[1], t2.x[2]);
      }, m.default.Camera.prototype.lookAt = function(e2, t2, r2) {
        this.camera(this.eyeX, this.eyeY, this.eyeZ, e2, t2, r2, this.upX, this.upY, this.upZ);
      }, m.default.Camera.prototype.camera = function(e2, t2, r2, i2, n2, a, o, s, l) {
        e2 === void 0 && (e2 = this.defaultEyeX, t2 = this.defaultEyeY, r2 = this.defaultEyeZ, i2 = e2, n2 = t2, s = 1, l = o = a = 0), this.eyeX = e2, this.eyeY = t2, this.eyeZ = r2, i2 !== void 0 && (this.centerX = i2, this.centerY = n2, this.centerZ = a), o !== void 0 && (this.upX = o, this.upY = s, this.upZ = l);
        var u = this._getLocalAxes();
        this.cameraMatrix.set(u.x[0], u.y[0], u.z[0], 0, u.x[1], u.y[1], u.z[1], 0, u.x[2], u.y[2], u.z[2], 0, 0, 0, 0, 1);
        var h = -e2, c = -t2, f = -r2;
        return this.cameraMatrix.translate([h, c, f]), this._isActive() && this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0], this.cameraMatrix.mat4[1], this.cameraMatrix.mat4[2], this.cameraMatrix.mat4[3], this.cameraMatrix.mat4[4], this.cameraMatrix.mat4[5], this.cameraMatrix.mat4[6], this.cameraMatrix.mat4[7], this.cameraMatrix.mat4[8], this.cameraMatrix.mat4[9], this.cameraMatrix.mat4[10], this.cameraMatrix.mat4[11], this.cameraMatrix.mat4[12], this.cameraMatrix.mat4[13], this.cameraMatrix.mat4[14], this.cameraMatrix.mat4[15]), this;
      }, m.default.Camera.prototype.move = function(e2, t2, r2) {
        var i2 = this._getLocalAxes(), n2 = [i2.x[0] * e2, i2.x[1] * e2, i2.x[2] * e2], a = [i2.y[0] * t2, i2.y[1] * t2, i2.y[2] * t2], o = [i2.z[0] * r2, i2.z[1] * r2, i2.z[2] * r2];
        this.camera(this.eyeX + n2[0] + a[0] + o[0], this.eyeY + n2[1] + a[1] + o[1], this.eyeZ + n2[2] + a[2] + o[2], this.centerX + n2[0] + a[0] + o[0], this.centerY + n2[1] + a[1] + o[1], this.centerZ + n2[2] + a[2] + o[2], 0, 1, 0);
      }, m.default.Camera.prototype.setPosition = function(e2, t2, r2) {
        var i2 = e2 - this.eyeX, n2 = t2 - this.eyeY, a = r2 - this.eyeZ;
        this.camera(e2, t2, r2, this.centerX + i2, this.centerY + n2, this.centerZ + a, 0, 1, 0);
      }, m.default.Camera.prototype._computeCameraDefaultSettings = function() {
        this.defaultCameraFOV = 60 / 180 * Math.PI, this.defaultAspectRatio = this._renderer.width / this._renderer.height, this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = this._renderer.height / 2 / Math.tan(this.defaultCameraFOV / 2), this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = 0.1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
      }, m.default.Camera.prototype._setDefaultCamera = function() {
        this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
      }, m.default.Camera.prototype._resize = function() {
        this.cameraType === "default" ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this._renderer.width / this._renderer.height);
      }, m.default.Camera.prototype.copy = function() {
        var e2 = new m.default.Camera(this._renderer);
        return e2.cameraFOV = this.cameraFOV, e2.aspectRatio = this.aspectRatio, e2.eyeX = this.eyeX, e2.eyeY = this.eyeY, e2.eyeZ = this.eyeZ, e2.centerX = this.centerX, e2.centerY = this.centerY, e2.centerZ = this.centerZ, e2.cameraNear = this.cameraNear, e2.cameraFar = this.cameraFar, e2.cameraType = this.cameraType, e2.cameraMatrix = this.cameraMatrix.copy(), e2.projMatrix = this.projMatrix.copy(), e2;
      }, m.default.Camera.prototype._getLocalAxes = function() {
        var e2 = this.eyeX - this.centerX, t2 = this.eyeY - this.centerY, r2 = this.eyeZ - this.centerZ, i2 = Math.sqrt(e2 * e2 + t2 * t2 + r2 * r2);
        i2 !== 0 && (e2 /= i2, t2 /= i2, r2 /= i2);
        var n2 = this.upX, a = this.upY, o = this.upZ, s = a * r2 - o * t2, l = -n2 * r2 + o * e2, u = n2 * t2 - a * e2;
        n2 = t2 * u - r2 * l, a = -e2 * u + r2 * s, o = e2 * l - t2 * s;
        var h = Math.sqrt(s * s + l * l + u * u);
        h !== 0 && (s /= h, l /= h, u /= h);
        var c = Math.sqrt(n2 * n2 + a * a + o * o);
        return c !== 0 && (n2 /= c, a /= c, o /= c), {x: [s, l, u], y: [n2, a, o], z: [e2, t2, r2]};
      }, m.default.Camera.prototype._orbit = function(e2, t2, r2) {
        var i2 = this.eyeX - this.centerX, n2 = this.eyeY - this.centerY, a = this.eyeZ - this.centerZ, o = Math.sqrt(i2 * i2 + n2 * n2 + a * a), s = Math.atan2(i2, a), l = Math.acos(Math.max(-1, Math.min(1, n2 / o)));
        s += e2, (o += r2) < 0 && (o = 0.1), (l += t2) > Math.PI ? l = Math.PI : l <= 0 && (l = 1e-3);
        var u = Math.sin(l) * o * Math.sin(s), h = Math.cos(l) * o, c = Math.sin(l) * o * Math.cos(s);
        this.camera(u + this.centerX, h + this.centerY, c + this.centerZ, this.centerX, this.centerY, this.centerZ, 0, 1, 0);
      }, m.default.Camera.prototype._isActive = function() {
        return this === this._renderer._curCamera;
      }, m.default.prototype.setCamera = function(e2) {
        this._renderer._curCamera = e2, this._renderer.uPMatrix.set(e2.projMatrix.mat4[0], e2.projMatrix.mat4[1], e2.projMatrix.mat4[2], e2.projMatrix.mat4[3], e2.projMatrix.mat4[4], e2.projMatrix.mat4[5], e2.projMatrix.mat4[6], e2.projMatrix.mat4[7], e2.projMatrix.mat4[8], e2.projMatrix.mat4[9], e2.projMatrix.mat4[10], e2.projMatrix.mat4[11], e2.projMatrix.mat4[12], e2.projMatrix.mat4[13], e2.projMatrix.mat4[14], e2.projMatrix.mat4[15]);
      };
      var n = m.default.Camera;
      r.default = n;
    }, {"../core/main": 36}], 85: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, h = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      h.default.Geometry = function(e2, t2, r2) {
        return this.vertices = [], this.lineVertices = [], this.lineNormals = [], this.vertexNormals = [], this.faces = [], this.uvs = [], this.edges = [], this.vertexColors = [], this.detailX = e2 !== void 0 ? e2 : 1, this.detailY = t2 !== void 0 ? t2 : 1, this.dirtyFlags = {}, r2 instanceof Function && r2.call(this), this;
      }, h.default.Geometry.prototype.reset = function() {
        this.lineVertices.length = 0, this.lineNormals.length = 0, this.vertices.length = 0, this.edges.length = 0, this.vertexColors.length = 0, this.vertexNormals.length = 0, this.uvs.length = 0, this.dirtyFlags = {};
      }, h.default.Geometry.prototype.computeFaces = function() {
        this.faces.length = 0;
        for (var e2, t2, r2, i2, n2 = this.detailX + 1, a = 0; a < this.detailY; a++)
          for (var o = 0; o < this.detailX; o++)
            t2 = (e2 = a * n2 + o) + 1, r2 = (a + 1) * n2 + o + 1, i2 = (a + 1) * n2 + o, this.faces.push([e2, t2, i2]), this.faces.push([i2, t2, r2]);
        return this;
      }, h.default.Geometry.prototype._getFaceNormal = function(e2) {
        var t2 = this.faces[e2], r2 = this.vertices[t2[0]], i2 = this.vertices[t2[1]], n2 = this.vertices[t2[2]], a = h.default.Vector.sub(i2, r2), o = h.default.Vector.sub(n2, r2), s = h.default.Vector.cross(a, o), l = h.default.Vector.mag(s), u = l / (h.default.Vector.mag(a) * h.default.Vector.mag(o));
        return u === 0 || isNaN(u) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), s) : (1 < u && (u = 1), s.mult(Math.asin(u) / l));
      }, h.default.Geometry.prototype.computeNormals = function() {
        var e2, t2 = this.vertexNormals, r2 = this.vertices, i2 = this.faces;
        for (e2 = t2.length = 0; e2 < r2.length; ++e2)
          t2.push(new h.default.Vector());
        for (var n2 = 0; n2 < i2.length; ++n2)
          for (var a = i2[n2], o = this._getFaceNormal(n2), s = 0; s < 3; ++s) {
            t2[a[s]].add(o);
          }
        for (e2 = 0; e2 < r2.length; ++e2)
          t2[e2].normalize();
        return this;
      }, h.default.Geometry.prototype.averageNormals = function() {
        for (var e2 = 0; e2 <= this.detailY; e2++) {
          var t2 = this.detailX + 1, r2 = h.default.Vector.add(this.vertexNormals[e2 * t2], this.vertexNormals[e2 * t2 + this.detailX]);
          r2 = h.default.Vector.div(r2, 2), this.vertexNormals[e2 * t2] = r2, this.vertexNormals[e2 * t2 + this.detailX] = r2;
        }
        return this;
      }, h.default.Geometry.prototype.averagePoleNormals = function() {
        for (var e2 = new h.default.Vector(0, 0, 0), t2 = 0; t2 < this.detailX; t2++)
          e2.add(this.vertexNormals[t2]);
        e2 = h.default.Vector.div(e2, this.detailX);
        for (var r2 = 0; r2 < this.detailX; r2++)
          this.vertexNormals[r2] = e2;
        e2 = new h.default.Vector(0, 0, 0);
        for (var i2 = this.vertices.length - 1; i2 > this.vertices.length - 1 - this.detailX; i2--)
          e2.add(this.vertexNormals[i2]);
        e2 = h.default.Vector.div(e2, this.detailX);
        for (var n2 = this.vertices.length - 1; n2 > this.vertices.length - 1 - this.detailX; n2--)
          this.vertexNormals[n2] = e2;
        return this;
      }, h.default.Geometry.prototype._makeTriangleEdges = function() {
        if (this.edges.length = 0, Array.isArray(this.strokeIndices))
          for (var e2 = 0, t2 = this.strokeIndices.length; e2 < t2; e2++)
            this.edges.push(this.strokeIndices[e2]);
        else
          for (var r2 = 0; r2 < this.faces.length; r2++)
            this.edges.push([this.faces[r2][0], this.faces[r2][1]]), this.edges.push([this.faces[r2][1], this.faces[r2][2]]), this.edges.push([this.faces[r2][2], this.faces[r2][0]]);
        return this;
      }, h.default.Geometry.prototype._edgesToVertices = function() {
        this.lineVertices.length = 0;
        for (var e2 = this.lineNormals.length = 0; e2 < this.edges.length; e2++) {
          var t2 = this.vertices[this.edges[e2][0]], r2 = this.vertices[this.edges[e2][1]], i2 = r2.copy().sub(t2).normalize(), n2 = t2.array(), a = t2.array(), o = r2.array(), s = r2.array(), l = i2.array(), u = i2.array();
          l.push(1), u.push(-1), this.lineNormals.push(l, u, l, l, u, u), this.lineVertices.push(n2, a, o, o, a, s);
        }
        return this;
      }, h.default.Geometry.prototype.normalize = function() {
        if (0 < this.vertices.length) {
          for (var e2 = this.vertices[0].copy(), t2 = this.vertices[0].copy(), r2 = 0; r2 < this.vertices.length; r2++)
            e2.x = Math.max(e2.x, this.vertices[r2].x), t2.x = Math.min(t2.x, this.vertices[r2].x), e2.y = Math.max(e2.y, this.vertices[r2].y), t2.y = Math.min(t2.y, this.vertices[r2].y), e2.z = Math.max(e2.z, this.vertices[r2].z), t2.z = Math.min(t2.z, this.vertices[r2].z);
          for (var i2 = h.default.Vector.lerp(e2, t2, 0.5), n2 = h.default.Vector.sub(e2, t2), a = 200 / Math.max(Math.max(n2.x, n2.y), n2.z), o = 0; o < this.vertices.length; o++)
            this.vertices[o].sub(i2), this.vertices[o].mult(a);
        }
        return this;
      };
      var n = h.default.Geometry;
      r.default = n;
    }, {"../core/main": 36}], 86: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, P = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      var n = Array, R = function(e2) {
        return e2 instanceof Array;
      };
      typeof Float32Array != "undefined" && (n = Float32Array, R = function(e2) {
        return e2 instanceof Array || e2 instanceof Float32Array;
      }), P.default.Matrix = function() {
        for (var e2 = new Array(arguments.length), t2 = 0; t2 < e2.length; ++t2)
          e2[t2] = arguments[t2];
        return e2.length && e2[e2.length - 1] instanceof P.default && (this.p5 = e2[e2.length - 1]), e2[0] === "mat3" ? this.mat3 = Array.isArray(e2[1]) ? e2[1] : new n([1, 0, 0, 0, 1, 0, 0, 0, 1]) : this.mat4 = Array.isArray(e2[0]) ? e2[0] : new n([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this;
      }, P.default.Matrix.prototype.set = function(e2) {
        return e2 instanceof P.default.Matrix ? this.mat4 = e2.mat4 : R(e2) ? this.mat4 = e2 : arguments.length === 16 && (this.mat4[0] = e2, this.mat4[1] = arguments[1], this.mat4[2] = arguments[2], this.mat4[3] = arguments[3], this.mat4[4] = arguments[4], this.mat4[5] = arguments[5], this.mat4[6] = arguments[6], this.mat4[7] = arguments[7], this.mat4[8] = arguments[8], this.mat4[9] = arguments[9], this.mat4[10] = arguments[10], this.mat4[11] = arguments[11], this.mat4[12] = arguments[12], this.mat4[13] = arguments[13], this.mat4[14] = arguments[14], this.mat4[15] = arguments[15]), this;
      }, P.default.Matrix.prototype.get = function() {
        return new P.default.Matrix(this.mat4, this.p5);
      }, P.default.Matrix.prototype.copy = function() {
        var e2 = new P.default.Matrix(this.p5);
        return e2.mat4[0] = this.mat4[0], e2.mat4[1] = this.mat4[1], e2.mat4[2] = this.mat4[2], e2.mat4[3] = this.mat4[3], e2.mat4[4] = this.mat4[4], e2.mat4[5] = this.mat4[5], e2.mat4[6] = this.mat4[6], e2.mat4[7] = this.mat4[7], e2.mat4[8] = this.mat4[8], e2.mat4[9] = this.mat4[9], e2.mat4[10] = this.mat4[10], e2.mat4[11] = this.mat4[11], e2.mat4[12] = this.mat4[12], e2.mat4[13] = this.mat4[13], e2.mat4[14] = this.mat4[14], e2.mat4[15] = this.mat4[15], e2;
      }, P.default.Matrix.identity = function(e2) {
        return new P.default.Matrix(e2);
      }, P.default.Matrix.prototype.transpose = function(e2) {
        var t2, r2, i2, n2, a2, o;
        return e2 instanceof P.default.Matrix ? (t2 = e2.mat4[1], r2 = e2.mat4[2], i2 = e2.mat4[3], n2 = e2.mat4[6], a2 = e2.mat4[7], o = e2.mat4[11], this.mat4[0] = e2.mat4[0], this.mat4[1] = e2.mat4[4], this.mat4[2] = e2.mat4[8], this.mat4[3] = e2.mat4[12], this.mat4[4] = t2, this.mat4[5] = e2.mat4[5], this.mat4[6] = e2.mat4[9], this.mat4[7] = e2.mat4[13], this.mat4[8] = r2, this.mat4[9] = n2, this.mat4[10] = e2.mat4[10], this.mat4[11] = e2.mat4[14], this.mat4[12] = i2, this.mat4[13] = a2, this.mat4[14] = o, this.mat4[15] = e2.mat4[15]) : R(e2) && (t2 = e2[1], r2 = e2[2], i2 = e2[3], n2 = e2[6], a2 = e2[7], o = e2[11], this.mat4[0] = e2[0], this.mat4[1] = e2[4], this.mat4[2] = e2[8], this.mat4[3] = e2[12], this.mat4[4] = t2, this.mat4[5] = e2[5], this.mat4[6] = e2[9], this.mat4[7] = e2[13], this.mat4[8] = r2, this.mat4[9] = n2, this.mat4[10] = e2[10], this.mat4[11] = e2[14], this.mat4[12] = i2, this.mat4[13] = a2, this.mat4[14] = o, this.mat4[15] = e2[15]), this;
      }, P.default.Matrix.prototype.invert = function(e2) {
        var t2, r2, i2, n2, a2, o, s, l, u, h, c, f, d, p, m, v;
        e2 instanceof P.default.Matrix ? (t2 = e2.mat4[0], r2 = e2.mat4[1], i2 = e2.mat4[2], n2 = e2.mat4[3], a2 = e2.mat4[4], o = e2.mat4[5], s = e2.mat4[6], l = e2.mat4[7], u = e2.mat4[8], h = e2.mat4[9], c = e2.mat4[10], f = e2.mat4[11], d = e2.mat4[12], p = e2.mat4[13], m = e2.mat4[14], v = e2.mat4[15]) : R(e2) && (t2 = e2[0], r2 = e2[1], i2 = e2[2], n2 = e2[3], a2 = e2[4], o = e2[5], s = e2[6], l = e2[7], u = e2[8], h = e2[9], c = e2[10], f = e2[11], d = e2[12], p = e2[13], m = e2[14], v = e2[15]);
        var y = t2 * o - r2 * a2, g = t2 * s - i2 * a2, b = t2 * l - n2 * a2, _ = r2 * s - i2 * o, x = r2 * l - n2 * o, w = i2 * l - n2 * s, S = u * p - h * d, M = u * m - c * d, T = u * v - f * d, E = h * m - c * p, C = h * v - f * p, L = c * v - f * m, O = y * L - g * C + b * E + _ * T - x * M + w * S;
        return O ? (O = 1 / O, this.mat4[0] = (o * L - s * C + l * E) * O, this.mat4[1] = (i2 * C - r2 * L - n2 * E) * O, this.mat4[2] = (p * w - m * x + v * _) * O, this.mat4[3] = (c * x - h * w - f * _) * O, this.mat4[4] = (s * T - a2 * L - l * M) * O, this.mat4[5] = (t2 * L - i2 * T + n2 * M) * O, this.mat4[6] = (m * b - d * w - v * g) * O, this.mat4[7] = (u * w - c * b + f * g) * O, this.mat4[8] = (a2 * C - o * T + l * S) * O, this.mat4[9] = (r2 * T - t2 * C - n2 * S) * O, this.mat4[10] = (d * x - p * b + v * y) * O, this.mat4[11] = (h * b - u * x - f * y) * O, this.mat4[12] = (o * M - a2 * E - s * S) * O, this.mat4[13] = (t2 * E - r2 * M + i2 * S) * O, this.mat4[14] = (p * g - d * _ - m * y) * O, this.mat4[15] = (u * _ - h * g + c * y) * O, this) : null;
      }, P.default.Matrix.prototype.invert3x3 = function() {
        var e2 = this.mat3[0], t2 = this.mat3[1], r2 = this.mat3[2], i2 = this.mat3[3], n2 = this.mat3[4], a2 = this.mat3[5], o = this.mat3[6], s = this.mat3[7], l = this.mat3[8], u = l * n2 - a2 * s, h = -l * i2 + a2 * o, c = s * i2 - n2 * o, f = e2 * u + t2 * h + r2 * c;
        return f ? (f = 1 / f, this.mat3[0] = u * f, this.mat3[1] = (-l * t2 + r2 * s) * f, this.mat3[2] = (a2 * t2 - r2 * n2) * f, this.mat3[3] = h * f, this.mat3[4] = (l * e2 - r2 * o) * f, this.mat3[5] = (-a2 * e2 + r2 * i2) * f, this.mat3[6] = c * f, this.mat3[7] = (-s * e2 + t2 * o) * f, this.mat3[8] = (n2 * e2 - t2 * i2) * f, this) : null;
      }, P.default.Matrix.prototype.transpose3x3 = function(e2) {
        var t2 = e2[1], r2 = e2[2], i2 = e2[5];
        return this.mat3[1] = e2[3], this.mat3[2] = e2[6], this.mat3[3] = t2, this.mat3[5] = e2[7], this.mat3[6] = r2, this.mat3[7] = i2, this;
      }, P.default.Matrix.prototype.inverseTranspose = function(e2) {
        this.mat3 === void 0 ? console.error("sorry, this function only works with mat3") : (this.mat3[0] = e2.mat4[0], this.mat3[1] = e2.mat4[1], this.mat3[2] = e2.mat4[2], this.mat3[3] = e2.mat4[4], this.mat3[4] = e2.mat4[5], this.mat3[5] = e2.mat4[6], this.mat3[6] = e2.mat4[8], this.mat3[7] = e2.mat4[9], this.mat3[8] = e2.mat4[10]);
        var t2 = this.invert3x3();
        if (t2)
          t2.transpose3x3(this.mat3);
        else
          for (var r2 = 0; r2 < 9; r2++)
            this.mat3[r2] = 0;
        return this;
      }, P.default.Matrix.prototype.determinant = function() {
        var e2 = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4], t2 = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4], r2 = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4], i2 = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5], n2 = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5], a2 = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6], o = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12], s = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12], l = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12], u = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13], h = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
        return e2 * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t2 * h + r2 * u + i2 * l - n2 * s + a2 * o;
      }, P.default.Matrix.prototype.mult = function(e2) {
        var t2;
        if (e2 === this || e2 === this.mat4)
          t2 = this.copy().mat4;
        else if (e2 instanceof P.default.Matrix)
          t2 = e2.mat4;
        else if (R(e2))
          t2 = e2;
        else {
          if (arguments.length !== 16)
            return;
          t2 = arguments;
        }
        var r2 = this.mat4[0], i2 = this.mat4[1], n2 = this.mat4[2], a2 = this.mat4[3];
        return this.mat4[0] = r2 * t2[0] + i2 * t2[4] + n2 * t2[8] + a2 * t2[12], this.mat4[1] = r2 * t2[1] + i2 * t2[5] + n2 * t2[9] + a2 * t2[13], this.mat4[2] = r2 * t2[2] + i2 * t2[6] + n2 * t2[10] + a2 * t2[14], this.mat4[3] = r2 * t2[3] + i2 * t2[7] + n2 * t2[11] + a2 * t2[15], r2 = this.mat4[4], i2 = this.mat4[5], n2 = this.mat4[6], a2 = this.mat4[7], this.mat4[4] = r2 * t2[0] + i2 * t2[4] + n2 * t2[8] + a2 * t2[12], this.mat4[5] = r2 * t2[1] + i2 * t2[5] + n2 * t2[9] + a2 * t2[13], this.mat4[6] = r2 * t2[2] + i2 * t2[6] + n2 * t2[10] + a2 * t2[14], this.mat4[7] = r2 * t2[3] + i2 * t2[7] + n2 * t2[11] + a2 * t2[15], r2 = this.mat4[8], i2 = this.mat4[9], n2 = this.mat4[10], a2 = this.mat4[11], this.mat4[8] = r2 * t2[0] + i2 * t2[4] + n2 * t2[8] + a2 * t2[12], this.mat4[9] = r2 * t2[1] + i2 * t2[5] + n2 * t2[9] + a2 * t2[13], this.mat4[10] = r2 * t2[2] + i2 * t2[6] + n2 * t2[10] + a2 * t2[14], this.mat4[11] = r2 * t2[3] + i2 * t2[7] + n2 * t2[11] + a2 * t2[15], r2 = this.mat4[12], i2 = this.mat4[13], n2 = this.mat4[14], a2 = this.mat4[15], this.mat4[12] = r2 * t2[0] + i2 * t2[4] + n2 * t2[8] + a2 * t2[12], this.mat4[13] = r2 * t2[1] + i2 * t2[5] + n2 * t2[9] + a2 * t2[13], this.mat4[14] = r2 * t2[2] + i2 * t2[6] + n2 * t2[10] + a2 * t2[14], this.mat4[15] = r2 * t2[3] + i2 * t2[7] + n2 * t2[11] + a2 * t2[15], this;
      }, P.default.Matrix.prototype.apply = function(e2) {
        var t2;
        if (e2 === this || e2 === this.mat4)
          t2 = this.copy().mat4;
        else if (e2 instanceof P.default.Matrix)
          t2 = e2.mat4;
        else if (R(e2))
          t2 = e2;
        else {
          if (arguments.length !== 16)
            return;
          t2 = arguments;
        }
        var r2 = this.mat4, i2 = r2[0], n2 = r2[4], a2 = r2[8], o = r2[12];
        r2[0] = t2[0] * i2 + t2[1] * n2 + t2[2] * a2 + t2[3] * o, r2[4] = t2[4] * i2 + t2[5] * n2 + t2[6] * a2 + t2[7] * o, r2[8] = t2[8] * i2 + t2[9] * n2 + t2[10] * a2 + t2[11] * o, r2[12] = t2[12] * i2 + t2[13] * n2 + t2[14] * a2 + t2[15] * o;
        var s = r2[1], l = r2[5], u = r2[9], h = r2[13];
        r2[1] = t2[0] * s + t2[1] * l + t2[2] * u + t2[3] * h, r2[5] = t2[4] * s + t2[5] * l + t2[6] * u + t2[7] * h, r2[9] = t2[8] * s + t2[9] * l + t2[10] * u + t2[11] * h, r2[13] = t2[12] * s + t2[13] * l + t2[14] * u + t2[15] * h;
        var c = r2[2], f = r2[6], d = r2[10], p = r2[14];
        r2[2] = t2[0] * c + t2[1] * f + t2[2] * d + t2[3] * p, r2[6] = t2[4] * c + t2[5] * f + t2[6] * d + t2[7] * p, r2[10] = t2[8] * c + t2[9] * f + t2[10] * d + t2[11] * p, r2[14] = t2[12] * c + t2[13] * f + t2[14] * d + t2[15] * p;
        var m = r2[3], v = r2[7], y = r2[11], g = r2[15];
        return r2[3] = t2[0] * m + t2[1] * v + t2[2] * y + t2[3] * g, r2[7] = t2[4] * m + t2[5] * v + t2[6] * y + t2[7] * g, r2[11] = t2[8] * m + t2[9] * v + t2[10] * y + t2[11] * g, r2[15] = t2[12] * m + t2[13] * v + t2[14] * y + t2[15] * g, this;
      }, P.default.Matrix.prototype.scale = function(e2, t2, r2) {
        return e2 instanceof P.default.Vector ? (t2 = e2.y, r2 = e2.z, e2 = e2.x) : e2 instanceof Array && (t2 = e2[1], r2 = e2[2], e2 = e2[0]), this.mat4[0] *= e2, this.mat4[1] *= e2, this.mat4[2] *= e2, this.mat4[3] *= e2, this.mat4[4] *= t2, this.mat4[5] *= t2, this.mat4[6] *= t2, this.mat4[7] *= t2, this.mat4[8] *= r2, this.mat4[9] *= r2, this.mat4[10] *= r2, this.mat4[11] *= r2, this;
      }, P.default.Matrix.prototype.rotate = function(e2, t2, r2, i2) {
        t2 instanceof P.default.Vector ? (r2 = t2.y, i2 = t2.z, t2 = t2.x) : t2 instanceof Array && (r2 = t2[1], i2 = t2[2], t2 = t2[0]);
        var n2 = Math.sqrt(t2 * t2 + r2 * r2 + i2 * i2);
        t2 *= 1 / n2, r2 *= 1 / n2, i2 *= 1 / n2;
        var a2 = this.mat4[0], o = this.mat4[1], s = this.mat4[2], l = this.mat4[3], u = this.mat4[4], h = this.mat4[5], c = this.mat4[6], f = this.mat4[7], d = this.mat4[8], p = this.mat4[9], m = this.mat4[10], v = this.mat4[11], y = Math.sin(e2), g = Math.cos(e2), b = 1 - g, _ = t2 * t2 * b + g, x = r2 * t2 * b + i2 * y, w = i2 * t2 * b - r2 * y, S = t2 * r2 * b - i2 * y, M = r2 * r2 * b + g, T = i2 * r2 * b + t2 * y, E = t2 * i2 * b + r2 * y, C = r2 * i2 * b - t2 * y, L = i2 * i2 * b + g;
        return this.mat4[0] = a2 * _ + u * x + d * w, this.mat4[1] = o * _ + h * x + p * w, this.mat4[2] = s * _ + c * x + m * w, this.mat4[3] = l * _ + f * x + v * w, this.mat4[4] = a2 * S + u * M + d * T, this.mat4[5] = o * S + h * M + p * T, this.mat4[6] = s * S + c * M + m * T, this.mat4[7] = l * S + f * M + v * T, this.mat4[8] = a2 * E + u * C + d * L, this.mat4[9] = o * E + h * C + p * L, this.mat4[10] = s * E + c * C + m * L, this.mat4[11] = l * E + f * C + v * L, this;
      }, P.default.Matrix.prototype.translate = function(e2) {
        var t2 = e2[0], r2 = e2[1], i2 = e2[2] || 0;
        this.mat4[12] += this.mat4[0] * t2 + this.mat4[4] * r2 + this.mat4[8] * i2, this.mat4[13] += this.mat4[1] * t2 + this.mat4[5] * r2 + this.mat4[9] * i2, this.mat4[14] += this.mat4[2] * t2 + this.mat4[6] * r2 + this.mat4[10] * i2, this.mat4[15] += this.mat4[3] * t2 + this.mat4[7] * r2 + this.mat4[11] * i2;
      }, P.default.Matrix.prototype.rotateX = function(e2) {
        this.rotate(e2, 1, 0, 0);
      }, P.default.Matrix.prototype.rotateY = function(e2) {
        this.rotate(e2, 0, 1, 0);
      }, P.default.Matrix.prototype.rotateZ = function(e2) {
        this.rotate(e2, 0, 0, 1);
      }, P.default.Matrix.prototype.perspective = function(e2, t2, r2, i2) {
        var n2 = 1 / Math.tan(e2 / 2), a2 = 1 / (r2 - i2);
        return this.mat4[0] = n2 / t2, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = n2, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = (i2 + r2) * a2, this.mat4[11] = -1, this.mat4[12] = 0, this.mat4[13] = 0, this.mat4[14] = 2 * i2 * r2 * a2, this.mat4[15] = 0, this;
      }, P.default.Matrix.prototype.ortho = function(e2, t2, r2, i2, n2, a2) {
        var o = 1 / (e2 - t2), s = 1 / (r2 - i2), l = 1 / (n2 - a2);
        return this.mat4[0] = -2 * o, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = -2 * s, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = 2 * l, this.mat4[11] = 0, this.mat4[12] = (e2 + t2) * o, this.mat4[13] = (i2 + r2) * s, this.mat4[14] = (a2 + n2) * l, this.mat4[15] = 1, this;
      };
      var a = P.default.Matrix;
      r.default = a;
    }, {"../core/main": 36}], 87: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.RenderBuffer = function(e2, t2, r2, i2, n2, a2) {
        this.size = e2, this.src = t2, this.dst = r2, this.attr = i2, this._renderer = n2, this.map = a2;
      }, n.default.RenderBuffer.prototype._prepareBuffer = function(e2, t2) {
        var r2, i2 = t2.attributes, n2 = this._renderer.GL;
        r2 = e2.model ? e2.model : e2;
        var a2 = i2[this.attr];
        if (a2) {
          var o = e2[this.dst], s = r2[this.src];
          if (0 < s.length) {
            var l = !o;
            if (l && (e2[this.dst] = o = n2.createBuffer()), n2.bindBuffer(n2.ARRAY_BUFFER, o), l || r2.dirtyFlags[this.src] !== false) {
              var u = this.map, h = u ? u(s) : s;
              this._renderer._bindBuffer(o, n2.ARRAY_BUFFER, h), r2.dirtyFlags[this.src] = false;
            }
            t2.enableAttrib(a2, this.size);
          }
        }
      };
      var a = n.default.RenderBuffer;
      r.default = a;
    }, {"../core/main": 36}], 88: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, s = (i = e("../core/main")) && i.__esModule ? i : {default: i}, l = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = u();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function u() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return u = function() {
          return e2;
        }, e2;
      }
      e("./p5.RenderBuffer"), s.default.RendererGL.prototype.beginShape = function(e2) {
        return this.immediateMode.shapeMode = e2 !== void 0 ? e2 : l.TRIANGLE_FAN, this.immediateMode.geometry.reset(), this;
      }, s.default.RendererGL.prototype.vertex = function(e2, t2) {
        var r2, i2, n2;
        r2 = i2 = n2 = 0, arguments.length === 3 ? r2 = arguments[2] : arguments.length === 4 ? (i2 = arguments[2], n2 = arguments[3]) : arguments.length === 5 && (r2 = arguments[2], i2 = arguments[3], n2 = arguments[4]);
        var a = new s.default.Vector(e2, t2, r2);
        this.immediateMode.geometry.vertices.push(a);
        var o2 = this.curFillColor || [0.5, 0.5, 0.5, 1];
        return this.immediateMode.geometry.vertexColors.push(o2[0], o2[1], o2[2], o2[3]), this.textureMode === l.IMAGE && (this._tex !== null ? 0 < this._tex.width && 0 < this._tex.height && (i2 /= this._tex.width, n2 /= this._tex.height) : this._tex === null && 4 <= arguments.length && console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), this.immediateMode.geometry.uvs.push(i2, n2), this.immediateMode._bezierVertex[0] = e2, this.immediateMode._bezierVertex[1] = t2, this.immediateMode._bezierVertex[2] = r2, this.immediateMode._quadraticVertex[0] = e2, this.immediateMode._quadraticVertex[1] = t2, this.immediateMode._quadraticVertex[2] = r2, this;
      }, s.default.RendererGL.prototype.endShape = function(e2, t2, r2, i2, n2, a) {
        return this.immediateMode.shapeMode === l.POINTS ? this._drawPoints(this.immediateMode.geometry.vertices, this.immediateMode.buffers.point) : (this._processVertices.apply(this, arguments), this._doFill && 1 < this.immediateMode.geometry.vertices.length && this._drawImmediateFill(), this._doStroke && 1 < this.immediateMode.geometry.lineVertices.length && this._drawImmediateStroke(), this.isBezier = false, this.isQuadratic = false, this.isCurve = false, this.immediateMode._bezierVertex.length = 0, this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0), this;
      }, s.default.RendererGL.prototype._processVertices = function(e2) {
        if (this.immediateMode.geometry.vertices.length !== 0) {
          var t2 = this._doStroke && this.drawMode !== l.TEXTURE, r2 = e2 === l.CLOSE;
          t2 && (this.immediateMode.geometry.edges = this._calculateEdges(this.immediateMode.shapeMode, this.immediateMode.geometry.vertices, r2), this.immediateMode.geometry._edgesToVertices());
          var i2 = this.immediateMode.shapeMode === l.TESS;
          (this.isBezier || this.isQuadratic || this.isCurve || i2) && this.immediateMode.shapeMode !== l.LINES && this._tesselateShape();
        }
      }, s.default.RendererGL.prototype._calculateEdges = function(e2, t2, r2) {
        var i2 = [], n2 = 0;
        switch (e2) {
          case l.TRIANGLE_STRIP:
            for (n2 = 0; n2 < t2.length - 2; n2++)
              i2.push([n2, n2 + 1]), i2.push([n2, n2 + 2]);
            i2.push([n2, n2 + 1]);
            break;
          case l.TRIANGLES:
            for (n2 = 0; n2 < t2.length - 2; n2 += 3)
              i2.push([n2, n2 + 1]), i2.push([n2 + 1, n2 + 2]), i2.push([n2 + 2, n2]);
            break;
          case l.LINES:
            for (n2 = 0; n2 < t2.length - 1; n2 += 2)
              i2.push([n2, n2 + 1]);
            break;
          default:
            for (n2 = 0; n2 < t2.length - 1; n2++)
              i2.push([n2, n2 + 1]);
        }
        return r2 && i2.push([t2.length - 1, 0]), i2;
      }, s.default.RendererGL.prototype._tesselateShape = function() {
        this.immediateMode.shapeMode = l.TRIANGLES;
        var e2 = [new Float32Array(this._vToNArray(this.immediateMode.geometry.vertices))], t2 = this._triangulate(e2);
        this.immediateMode.geometry.vertices = [];
        for (var r2 = 0, i2 = t2.length; r2 < i2; r2 += 3)
          this.vertex(t2[r2], t2[r2 + 1], t2[r2 + 2]);
      }, s.default.RendererGL.prototype._drawImmediateFill = function() {
        var e2 = this.GL, t2 = this._getImmediateFillShader();
        this._calculateNormals(this.immediateMode.geometry), this._setFillUniforms(t2);
        var r2 = true, i2 = false, n2 = void 0;
        try {
          for (var a, o2 = this.immediateMode.buffers.fill[Symbol.iterator](); !(r2 = (a = o2.next()).done); r2 = true) {
            a.value._prepareBuffer(this.immediateMode.geometry, t2);
          }
        } catch (e3) {
          i2 = true, n2 = e3;
        } finally {
          try {
            r2 || o2.return == null || o2.return();
          } finally {
            if (i2)
              throw n2;
          }
        }
        this.immediateMode.shapeMode !== l.LINE_STRIP && this.immediateMode.shapeMode !== l.LINES || (this.immediateMode.shapeMode = l.TRIANGLE_FAN), this._applyColorBlend(this.curFillColor), e2.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length), t2.unbindShader();
      }, s.default.RendererGL.prototype._drawImmediateStroke = function() {
        var e2 = this.GL, t2 = this._getImmediateStrokeShader();
        this._setStrokeUniforms(t2);
        var r2 = true, i2 = false, n2 = void 0;
        try {
          for (var a, o2 = this.immediateMode.buffers.stroke[Symbol.iterator](); !(r2 = (a = o2.next()).done); r2 = true) {
            a.value._prepareBuffer(this.immediateMode.geometry, t2);
          }
        } catch (e3) {
          i2 = true, n2 = e3;
        } finally {
          try {
            r2 || o2.return == null || o2.return();
          } finally {
            if (i2)
              throw n2;
          }
        }
        this._applyColorBlend(this.curStrokeColor), e2.drawArrays(e2.TRIANGLES, 0, this.immediateMode.geometry.lineVertices.length), t2.unbindShader();
      }, s.default.RendererGL.prototype._calculateNormals = function(e2) {
        e2.vertices.forEach(function() {
          e2.vertexNormals.push(new s.default.Vector(0, 0, 1));
        });
      };
      var n = s.default.RendererGL;
      r.default = n;
    }, {"../core/constants": 26, "../core/main": 36, "./p5.RenderBuffer": 87}], 89: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, o = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      e("./p5.RendererGL"), e("./p5.RenderBuffer");
      var n = 0;
      o.default.RendererGL.prototype._initBufferDefaults = function(e2) {
        if (this._freeBuffers(e2), 1e3 < ++n) {
          var t2 = Object.keys(this.retainedMode.geometry)[0];
          delete this.retainedMode.geometry[t2], n--;
        }
        return this.retainedMode.geometry[e2] = {};
      }, o.default.RendererGL.prototype._freeBuffers = function(e2) {
        var s = this.retainedMode.geometry[e2];
        if (s) {
          delete this.retainedMode.geometry[e2], n--;
          var l = this.GL;
          s.indexBuffer && l.deleteBuffer(s.indexBuffer), t2(this.retainedMode.buffers.stroke), t2(this.retainedMode.buffers.fill);
        }
        function t2(e3) {
          var t3 = true, r2 = false, i2 = void 0;
          try {
            for (var n2, a2 = e3[Symbol.iterator](); !(t3 = (n2 = a2.next()).done); t3 = true) {
              var o2 = n2.value;
              s[o2.dst] && (l.deleteBuffer(s[o2.dst]), s[o2.dst] = null);
            }
          } catch (e4) {
            r2 = true, i2 = e4;
          } finally {
            try {
              t3 || a2.return == null || a2.return();
            } finally {
              if (r2)
                throw i2;
            }
          }
        }
      }, o.default.RendererGL.prototype.createBuffers = function(e2, t2) {
        var r2 = this.GL, i2 = this._initBufferDefaults(e2);
        i2.model = t2;
        var n2 = i2.indexBuffer;
        if (t2.faces.length) {
          n2 = n2 || (i2.indexBuffer = r2.createBuffer());
          var a2 = o.default.RendererGL.prototype._flatten(t2.faces);
          this._bindBuffer(n2, r2.ELEMENT_ARRAY_BUFFER, a2, Uint16Array), i2.vertexCount = 3 * t2.faces.length;
        } else
          n2 && (r2.deleteBuffer(n2), i2.indexBuffer = null), i2.vertexCount = t2.vertices ? t2.vertices.length : 0;
        return i2.lineVertexCount = t2.lineVertices ? t2.lineVertices.length : 0, i2;
      }, o.default.RendererGL.prototype.drawBuffers = function(e2) {
        var t2 = this.GL, r2 = this.retainedMode.geometry[e2];
        if (this._doStroke && 0 < r2.lineVertexCount) {
          var i2 = this._getRetainedStrokeShader();
          this._setStrokeUniforms(i2);
          var n2 = true, a2 = false, o2 = void 0;
          try {
            for (var s, l = this.retainedMode.buffers.stroke[Symbol.iterator](); !(n2 = (s = l.next()).done); n2 = true) {
              s.value._prepareBuffer(r2, i2);
            }
          } catch (e3) {
            a2 = true, o2 = e3;
          } finally {
            try {
              n2 || l.return == null || l.return();
            } finally {
              if (a2)
                throw o2;
            }
          }
          this._applyColorBlend(this.curStrokeColor), this._drawArrays(t2.TRIANGLES, e2), i2.unbindShader();
        }
        if (this._doFill) {
          var u = this._getRetainedFillShader();
          this._setFillUniforms(u);
          var h = true, c = false, f = void 0;
          try {
            for (var d, p = this.retainedMode.buffers.fill[Symbol.iterator](); !(h = (d = p.next()).done); h = true) {
              d.value._prepareBuffer(r2, u);
            }
          } catch (e3) {
            c = true, f = e3;
          } finally {
            try {
              h || p.return == null || p.return();
            } finally {
              if (c)
                throw f;
            }
          }
          r2.indexBuffer && this._bindBuffer(r2.indexBuffer, t2.ELEMENT_ARRAY_BUFFER), this._applyColorBlend(this.curFillColor), this._drawElements(t2.TRIANGLES, e2), u.unbindShader();
        }
        return this;
      }, o.default.RendererGL.prototype.drawBuffersScaled = function(e2, t2, r2, i2) {
        var n2 = this.uMVMatrix.copy();
        try {
          this.uMVMatrix.scale(t2, r2, i2), this.drawBuffers(e2);
        } finally {
          this.uMVMatrix = n2;
        }
      }, o.default.RendererGL.prototype._drawArrays = function(e2, t2) {
        return this.GL.drawArrays(e2, 0, this.retainedMode.geometry[t2].lineVertexCount), this;
      }, o.default.RendererGL.prototype._drawElements = function(e2, t2) {
        var r2 = this.retainedMode.geometry[t2], i2 = this.GL;
        r2.indexBuffer ? i2.drawElements(i2.TRIANGLES, r2.vertexCount, i2.UNSIGNED_SHORT, 0) : i2.drawArrays(e2 || i2.TRIANGLES, 0, r2.vertexCount);
      }, o.default.RendererGL.prototype._drawPoints = function(e2, t2) {
        var r2 = this.GL, i2 = this._getImmediatePointShader();
        this._setPointUniforms(i2), this._bindBuffer(t2, r2.ARRAY_BUFFER, this._vToNArray(e2), Float32Array, r2.STATIC_DRAW), i2.enableAttrib(i2.attributes.aPosition, 3), r2.drawArrays(r2.Points, 0, e2.length), i2.unbindShader();
      };
      var a = o.default.RendererGL;
      r.default = a;
    }, {"../core/main": 36, "./p5.RenderBuffer": 87, "./p5.RendererGL": 90}], 90: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var u = n(e("../core/main")), a = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants")), i = n(e("libtess"));
      e("./p5.Shader"), e("./p5.Camera"), e("../core/p5.Renderer"), e("./p5.Matrix");
      e("path");
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      function n(e2) {
        return e2 && e2.__esModule ? e2 : {default: e2};
      }
      function l(e2) {
        return function(e3) {
          if (Array.isArray(e3)) {
            for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++)
              r2[t2] = e3[t2];
            return r2;
          }
        }(e2) || function(e3) {
          if (Symbol.iterator in Object(e3) || Object.prototype.toString.call(e3) === "[object Arguments]")
            return Array.from(e3);
        }(e2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      var h = "precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];	\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n", c = {immediateVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n", vertexColorVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n", vertexColorFrag: "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}", normalVert: "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n", normalFrag: "precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}", basicFrag: "precision mediump float;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}", lightVert: h + "// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n}\n", lightTextureFrag: "precision highp float;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * vDiffuseColor + vSpecularColor;\n  }\n}", phongVert: "precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n}\n", phongFrag: h + "// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * (diffuse + vAmbientColor) + specular;\n  }\n}", fontVert: "precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n", fontFrag: "#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n	#define int float\n	#define ivec2 vec2\n	#define INT(x) float(x)\n\n	int ifloor(float v) { return floor(v); }\n	ivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n	precision highp int;\n	#define INT(x) x\n\n	int ifloor(float v) { return int(v); }\n	int ifloor(int v) { return v; }\n	ivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}", lineVert: "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  vec3 scale = vec3(0.9995);\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  vec2 curPerspScale;\n\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n}\n", lineFrag: "precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}", pointVert: "attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n	vec4 positionVec4 =  vec4(aPosition, 1.0);\n	gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n	gl_PointSize = uPointSize;\n	vStrokeWeight = uPointSize;\n}", pointFrag: "precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n	float mask = 0.0;\n\n	// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n	mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n	// if strokeWeight is 1 or less lets just draw a square\n	// this prevents weird artifacting from carving circles when our points are really small\n	// if strokeWeight is larger than 1, we just use it as is\n\n	mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n	// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n	if(mask > 0.98){\n      discard;\n  	}\n\n  	gl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}"};
      u.default.RendererGL = function(e2, t2, r2, i2) {
        return u.default.Renderer.call(this, e2, t2, r2), this._setAttributeDefaults(t2), this._initContext(), this.isP3D = true, this.GL = this.drawingContext, this._pInst._setProperty("drawingContext", this.drawingContext), this._isErasing = false, this._enableLighting = false, this.ambientLightColors = [], this.specularColors = [1, 1, 1], this.directionalLightDirections = [], this.directionalLightDiffuseColors = [], this.directionalLightSpecularColors = [], this.pointLightPositions = [], this.pointLightDiffuseColors = [], this.pointLightSpecularColors = [], this.spotLightPositions = [], this.spotLightDirections = [], this.spotLightDiffuseColors = [], this.spotLightSpecularColors = [], this.spotLightAngle = [], this.spotLightConc = [], this.drawMode = a.FILL, this.curFillColor = this._cachedFillStyle = [1, 1, 1, 1], this.curStrokeColor = this._cachedStrokeStyle = [0, 0, 0, 1], this.curBlendMode = a.BLEND, this._cachedBlendMode = void 0, this.blendExt = this.GL.getExtension("EXT_blend_minmax"), this._isBlending = false, this._useSpecularMaterial = false, this._useEmissiveMaterial = false, this._useNormalMaterial = false, this._useShininess = 1, this._tint = [255, 255, 255, 255], this.constantAttenuation = 1, this.linearAttenuation = 0, this.quadraticAttenuation = 0, this.uMVMatrix = new u.default.Matrix(), this.uPMatrix = new u.default.Matrix(), this.uNMatrix = new u.default.Matrix("mat3"), this._curCamera = new u.default.Camera(this), this._curCamera._computeCameraDefaultSettings(), this._curCamera._setDefaultCamera(), this._defaultLightShader = void 0, this._defaultImmediateModeShader = void 0, this._defaultNormalShader = void 0, this._defaultColorShader = void 0, this._defaultPointShader = void 0, this.userFillShader = void 0, this.userStrokeShader = void 0, this.userPointShader = void 0, this.retainedMode = {geometry: {}, buffers: {stroke: [new u.default.RenderBuffer(3, "lineVertices", "lineVertexBuffer", "aPosition", this, this._flatten), new u.default.RenderBuffer(4, "lineNormals", "lineNormalBuffer", "aDirection", this, this._flatten)], fill: [new u.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", this, this._vToNArray), new u.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", this, this._vToNArray), new u.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aMaterialColor", this), new u.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", this), new u.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", this, this._flatten)], text: [new u.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", this, this._vToNArray), new u.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", this, this._flatten)]}}, this.immediateMode = {geometry: new u.default.Geometry(), shapeMode: a.TRIANGLE_FAN, _bezierVertex: [], _quadraticVertex: [], _curveVertex: [], buffers: {fill: [new u.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", this, this._vToNArray), new u.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", this, this._vToNArray), new u.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", this), new u.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", this), new u.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", this, this._flatten)], stroke: [new u.default.RenderBuffer(3, "lineVertices", "lineVertexBuffer", "aPosition", this, this._flatten), new u.default.RenderBuffer(4, "lineNormals", "lineNormalBuffer", "aDirection", this, this._flatten)], point: this.GL.createBuffer()}}, this.pointSize = 5, this.curStrokeWeight = 1, this.textures = [], this.textureMode = a.IMAGE, this.textureWrapX = a.CLAMP, this.textureWrapY = a.CLAMP, this._tex = null, this._curveTightness = 6, this._lookUpTableBezier = [], this._lookUpTableQuadratic = [], this._lutBezierDetail = 0, this._lutQuadraticDetail = 0, this._tessy = this._initTessy(), this.fontInfos = {}, this._curShader = void 0, this;
      }, u.default.RendererGL.prototype = Object.create(u.default.Renderer.prototype), u.default.RendererGL.prototype._setAttributeDefaults = function(e2) {
        var t2 = {alpha: true, depth: true, stencil: true, antialias: navigator.userAgent.toLowerCase().includes("safari"), premultipliedAlpha: false, preserveDrawingBuffer: true, perPixelLighting: true};
        e2._glAttributes === null ? e2._glAttributes = t2 : e2._glAttributes = Object.assign(t2, e2._glAttributes);
      }, u.default.RendererGL.prototype._initContext = function() {
        try {
          if (this.drawingContext = this.canvas.getContext("webgl", this._pInst._glAttributes) || this.canvas.getContext("experimental-webgl", this._pInst._glAttributes), this.drawingContext === null)
            throw new Error("Error creating webgl context");
          var e2 = this.drawingContext;
          e2.enable(e2.DEPTH_TEST), e2.depthFunc(e2.LEQUAL), e2.viewport(0, 0, e2.drawingBufferWidth, e2.drawingBufferHeight), this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
        } catch (e3) {
          throw e3;
        }
      }, u.default.RendererGL.prototype._resetContext = function(e2, t2) {
        var r2 = this.width, i2 = this.height, n2 = this.canvas.id, a2 = this._pInst instanceof u.default.Graphics;
        if (a2) {
          var o2 = this._pInst;
          o2.canvas.parentNode.removeChild(o2.canvas), o2.canvas = document.createElement("canvas"), (o2._pInst._userNode || document.body).appendChild(o2.canvas), u.default.Element.call(o2, o2.canvas, o2._pInst), o2.width = r2, o2.height = i2;
        } else {
          var s2 = this.canvas;
          s2 && s2.parentNode.removeChild(s2), (s2 = document.createElement("canvas")).id = n2, this._pInst._userNode ? this._pInst._userNode.appendChild(s2) : document.body.appendChild(s2), this._pInst.canvas = s2;
        }
        var l2 = new u.default.RendererGL(this._pInst.canvas, this._pInst, !a2);
        this._pInst._setProperty("_renderer", l2), l2.resize(r2, i2), l2._applyDefaults(), a2 || this._pInst._elements.push(l2), typeof t2 == "function" && setTimeout(function() {
          t2.apply(window._renderer, e2);
        }, 0);
      }, u.default.prototype.setAttributes = function(e2, t2) {
        if (this._glAttributes !== void 0) {
          var r2 = true;
          if (t2 !== void 0 ? (this._glAttributes === null && (this._glAttributes = {}), this._glAttributes[e2] !== t2 && (this._glAttributes[e2] = t2, r2 = false)) : e2 instanceof Object && this._glAttributes !== e2 && (this._glAttributes = e2, r2 = false), this._renderer.isP3D && !r2) {
            if (!this._setupDone) {
              for (var i2 in this._renderer.retainedMode.geometry)
                if (this._renderer.retainedMode.geometry.hasOwnProperty(i2))
                  return void console.error("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");
            }
            this.push(), this._renderer._resetContext(), this.pop(), this._renderer._curCamera && (this._renderer._curCamera._renderer = this._renderer);
          }
        } else
          console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.");
      }, u.default.RendererGL.prototype._update = function() {
        this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this.ambientLightColors.length = 0, this.specularColors = [1, 1, 1], this.directionalLightDirections.length = 0, this.directionalLightDiffuseColors.length = 0, this.directionalLightSpecularColors.length = 0, this.pointLightPositions.length = 0, this.pointLightDiffuseColors.length = 0, this.pointLightSpecularColors.length = 0, this.spotLightPositions.length = 0, this.spotLightDirections.length = 0, this.spotLightDiffuseColors.length = 0, this.spotLightSpecularColors.length = 0, this.spotLightAngle.length = 0, this.spotLightConc.length = 0, this._enableLighting = false, this._tint = [255, 255, 255, 255], this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
      }, u.default.RendererGL.prototype.background = function() {
        var e2, t2 = (e2 = this._pInst).color.apply(e2, arguments), r2 = t2.levels[0] / 255, i2 = t2.levels[1] / 255, n2 = t2.levels[2] / 255, a2 = t2.levels[3] / 255;
        this.GL.clearColor(r2, i2, n2, a2), this.GL.clear(this.GL.COLOR_BUFFER_BIT);
      }, u.default.RendererGL.prototype.fill = function(e2, t2, r2, i2) {
        var n2 = u.default.prototype.color.apply(this._pInst, arguments);
        this.curFillColor = n2._array, this.drawMode = a.FILL, this._useNormalMaterial = false, this._tex = null;
      }, u.default.RendererGL.prototype.stroke = function(e2, t2, r2, i2) {
        arguments[3] = 255;
        var n2 = u.default.prototype.color.apply(this._pInst, arguments);
        this.curStrokeColor = n2._array;
      }, u.default.RendererGL.prototype.strokeCap = function(e2) {
        console.error("Sorry, strokeCap() is not yet implemented in WEBGL mode");
      }, u.default.RendererGL.prototype.strokeJoin = function(e2) {
        console.error("Sorry, strokeJoin() is not yet implemented in WEBGL mode");
      }, u.default.RendererGL.prototype.filter = function(e2) {
        console.error("filter() does not work in WEBGL mode");
      }, u.default.RendererGL.prototype.blendMode = function(e2) {
        e2 === a.DARKEST || e2 === a.LIGHTEST || e2 === a.ADD || e2 === a.BLEND || e2 === a.SUBTRACT || e2 === a.SCREEN || e2 === a.EXCLUSION || e2 === a.REPLACE || e2 === a.MULTIPLY || e2 === a.REMOVE ? this.curBlendMode = e2 : e2 !== a.BURN && e2 !== a.OVERLAY && e2 !== a.HARD_LIGHT && e2 !== a.SOFT_LIGHT && e2 !== a.DODGE || console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.");
      }, u.default.RendererGL.prototype.erase = function(e2, t2) {
        this._isErasing || (this._applyBlendMode(a.REMOVE), this._isErasing = true, this._cachedFillStyle = this.curFillColor.slice(), this.curFillColor = [1, 1, 1, e2 / 255], this._cachedStrokeStyle = this.curStrokeColor.slice(), this.curStrokeColor = [1, 1, 1, t2 / 255]);
      }, u.default.RendererGL.prototype.noErase = function() {
        this._isErasing && (this._isErasing = false, this.curFillColor = this._cachedFillStyle.slice(), this.curStrokeColor = this._cachedStrokeStyle.slice(), this.blendMode(this._cachedBlendMode));
      }, u.default.RendererGL.prototype.strokeWeight = function(e2) {
        this.curStrokeWeight !== e2 && (this.pointSize = e2, this.curStrokeWeight = e2);
      }, u.default.RendererGL.prototype._getPixel = function(e2, t2) {
        var r2;
        return r2 = new Uint8Array(4), this.drawingContext.readPixels(e2, t2, 1, 1, this.drawingContext.RGBA, this.drawingContext.UNSIGNED_BYTE, r2), [r2[0], r2[1], r2[2], r2[3]];
      }, u.default.RendererGL.prototype.loadPixels = function() {
        var e2 = this._pixelsState;
        if (this._pInst._glAttributes.preserveDrawingBuffer === true) {
          var t2 = e2.pixels, r2 = this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4;
          t2 instanceof Uint8Array && t2.length === r2 || (t2 = new Uint8Array(r2), this._pixelsState._setProperty("pixels", t2));
          var i2 = this._pInst._pixelDensity;
          this.GL.readPixels(0, 0, this.width * i2, this.height * i2, this.GL.RGBA, this.GL.UNSIGNED_BYTE, t2);
        } else
          console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.");
      }, u.default.RendererGL.prototype.geometryInHash = function(e2) {
        return this.retainedMode.geometry[e2] !== void 0;
      }, u.default.RendererGL.prototype.resize = function(e2, t2) {
        u.default.Renderer.prototype.resize.call(this, e2, t2), this.GL.viewport(0, 0, this.GL.drawingBufferWidth, this.GL.drawingBufferHeight), this._viewport = this.GL.getParameter(this.GL.VIEWPORT), this._curCamera._resize();
        var r2 = this._pixelsState;
        r2.pixels !== void 0 && r2._setProperty("pixels", new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4));
      }, u.default.RendererGL.prototype.clear = function() {
        var e2 = (arguments.length <= 0 ? void 0 : arguments[0]) || 0, t2 = (arguments.length <= 1 ? void 0 : arguments[1]) || 0, r2 = (arguments.length <= 2 ? void 0 : arguments[2]) || 0, i2 = (arguments.length <= 3 ? void 0 : arguments[3]) || 0;
        this.GL.clearColor(e2, t2, r2, i2), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
      }, u.default.RendererGL.prototype.applyMatrix = function(e2, t2, r2, i2, n2, a2) {
        arguments.length === 16 ? u.default.Matrix.prototype.apply.apply(this.uMVMatrix, arguments) : this.uMVMatrix.apply([e2, t2, 0, 0, r2, i2, 0, 0, 0, 0, 1, 0, n2, a2, 0, 1]);
      }, u.default.RendererGL.prototype.translate = function(e2, t2, r2) {
        return e2 instanceof u.default.Vector && (r2 = e2.z, t2 = e2.y, e2 = e2.x), this.uMVMatrix.translate([e2, t2, r2]), this;
      }, u.default.RendererGL.prototype.scale = function(e2, t2, r2) {
        return this.uMVMatrix.scale(e2, t2, r2), this;
      }, u.default.RendererGL.prototype.rotate = function(e2, t2) {
        return t2 === void 0 ? this.rotateZ(e2) : (u.default.Matrix.prototype.rotate.apply(this.uMVMatrix, arguments), this);
      }, u.default.RendererGL.prototype.rotateX = function(e2) {
        return this.rotate(e2, 1, 0, 0), this;
      }, u.default.RendererGL.prototype.rotateY = function(e2) {
        return this.rotate(e2, 0, 1, 0), this;
      }, u.default.RendererGL.prototype.rotateZ = function(e2) {
        return this.rotate(e2, 0, 0, 1), this;
      }, u.default.RendererGL.prototype.push = function() {
        var e2 = u.default.Renderer.prototype.push.apply(this), t2 = e2.properties;
        return t2.uMVMatrix = this.uMVMatrix.copy(), t2.uPMatrix = this.uPMatrix.copy(), t2._curCamera = this._curCamera, this._curCamera = this._curCamera.copy(), t2.ambientLightColors = this.ambientLightColors.slice(), t2.specularColors = this.specularColors.slice(), t2.directionalLightDirections = this.directionalLightDirections.slice(), t2.directionalLightDiffuseColors = this.directionalLightDiffuseColors.slice(), t2.directionalLightSpecularColors = this.directionalLightSpecularColors.slice(), t2.pointLightPositions = this.pointLightPositions.slice(), t2.pointLightDiffuseColors = this.pointLightDiffuseColors.slice(), t2.pointLightSpecularColors = this.pointLightSpecularColors.slice(), t2.spotLightPositions = this.spotLightPositions.slice(), t2.spotLightDirections = this.spotLightDirections.slice(), t2.spotLightDiffuseColors = this.spotLightDiffuseColors.slice(), t2.spotLightSpecularColors = this.spotLightSpecularColors.slice(), t2.spotLightAngle = this.spotLightAngle.slice(), t2.spotLightConc = this.spotLightConc.slice(), t2.userFillShader = this.userFillShader, t2.userStrokeShader = this.userStrokeShader, t2.userPointShader = this.userPointShader, t2.pointSize = this.pointSize, t2.curStrokeWeight = this.curStrokeWeight, t2.curStrokeColor = this.curStrokeColor, t2.curFillColor = this.curFillColor, t2._useSpecularMaterial = this._useSpecularMaterial, t2._useEmissiveMaterial = this._useEmissiveMaterial, t2._useShininess = this._useShininess, t2.constantAttenuation = this.constantAttenuation, t2.linearAttenuation = this.linearAttenuation, t2.quadraticAttenuation = this.quadraticAttenuation, t2._enableLighting = this._enableLighting, t2._useNormalMaterial = this._useNormalMaterial, t2._tex = this._tex, t2.drawMode = this.drawMode, e2;
      }, u.default.RendererGL.prototype.resetMatrix = function() {
        return this.uMVMatrix = u.default.Matrix.identity(this._pInst), this;
      }, u.default.RendererGL.prototype._getImmediateStrokeShader = function() {
        var e2 = this.userStrokeShader;
        return e2 && e2.isStrokeShader() ? e2 : this._getLineShader();
      }, u.default.RendererGL.prototype._getRetainedStrokeShader = u.default.RendererGL.prototype._getImmediateStrokeShader, u.default.RendererGL.prototype._getImmediateFillShader = function() {
        var e2 = this.userFillShader;
        if (this._useNormalMaterial && (!e2 || !e2.isNormalShader()))
          return this._getNormalShader();
        if (this._enableLighting) {
          if (!e2 || !e2.isLightShader())
            return this._getLightShader();
        } else if (this._tex) {
          if (!e2 || !e2.isTextureShader())
            return this._getLightShader();
        } else if (!e2)
          return this._getImmediateModeShader();
        return e2;
      }, u.default.RendererGL.prototype._getRetainedFillShader = function() {
        if (this._useNormalMaterial)
          return this._getNormalShader();
        var e2 = this.userFillShader;
        if (this._enableLighting) {
          if (!e2 || !e2.isLightShader())
            return this._getLightShader();
        } else if (this._tex) {
          if (!e2 || !e2.isTextureShader())
            return this._getLightShader();
        } else if (!e2)
          return this._getColorShader();
        return e2;
      }, u.default.RendererGL.prototype._getImmediatePointShader = function() {
        var e2 = this.userPointShader;
        return e2 && e2.isPointShader() ? e2 : this._getPointShader();
      }, u.default.RendererGL.prototype._getRetainedLineShader = u.default.RendererGL.prototype._getImmediateLineShader, u.default.RendererGL.prototype._getLightShader = function() {
        return this._defaultLightShader || (this._pInst._glAttributes.perPixelLighting ? this._defaultLightShader = new u.default.Shader(this, c.phongVert, c.phongFrag) : this._defaultLightShader = new u.default.Shader(this, c.lightVert, c.lightTextureFrag)), this._defaultLightShader;
      }, u.default.RendererGL.prototype._getImmediateModeShader = function() {
        return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new u.default.Shader(this, c.immediateVert, c.vertexColorFrag)), this._defaultImmediateModeShader;
      }, u.default.RendererGL.prototype._getNormalShader = function() {
        return this._defaultNormalShader || (this._defaultNormalShader = new u.default.Shader(this, c.normalVert, c.normalFrag)), this._defaultNormalShader;
      }, u.default.RendererGL.prototype._getColorShader = function() {
        return this._defaultColorShader || (this._defaultColorShader = new u.default.Shader(this, c.normalVert, c.basicFrag)), this._defaultColorShader;
      }, u.default.RendererGL.prototype._getPointShader = function() {
        return this._defaultPointShader || (this._defaultPointShader = new u.default.Shader(this, c.pointVert, c.pointFrag)), this._defaultPointShader;
      }, u.default.RendererGL.prototype._getLineShader = function() {
        return this._defaultLineShader || (this._defaultLineShader = new u.default.Shader(this, c.lineVert, c.lineFrag)), this._defaultLineShader;
      }, u.default.RendererGL.prototype._getFontShader = function() {
        return this._defaultFontShader || (this.GL.getExtension("OES_standard_derivatives"), this._defaultFontShader = new u.default.Shader(this, c.fontVert, c.fontFrag)), this._defaultFontShader;
      }, u.default.RendererGL.prototype._getEmptyTexture = function() {
        if (!this._emptyTexture) {
          var e2 = new u.default.Image(1, 1);
          e2.set(0, 0, 255), this._emptyTexture = new u.default.Texture(this, e2);
        }
        return this._emptyTexture;
      }, u.default.RendererGL.prototype.getTexture = function(e2) {
        var t2 = this.textures, r2 = true, i2 = false, n2 = void 0;
        try {
          for (var a2, o2 = t2[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
            var s2 = a2.value;
            if (s2.src === e2)
              return s2;
          }
        } catch (e3) {
          i2 = true, n2 = e3;
        } finally {
          try {
            r2 || o2.return == null || o2.return();
          } finally {
            if (i2)
              throw n2;
          }
        }
        var l2 = new u.default.Texture(this, e2);
        return t2.push(l2), l2;
      }, u.default.RendererGL.prototype._setStrokeUniforms = function(e2) {
        e2.bindShader(), e2.setUniform("uMaterialColor", this.curStrokeColor), e2.setUniform("uStrokeWeight", this.curStrokeWeight);
      }, u.default.RendererGL.prototype._setFillUniforms = function(e2) {
        e2.bindShader(), e2.setUniform("uMaterialColor", this.curFillColor), e2.setUniform("isTexture", !!this._tex), this._tex && e2.setUniform("uSampler", this._tex), e2.setUniform("uTint", this._tint), e2.setUniform("uSpecular", this._useSpecularMaterial), e2.setUniform("uEmissive", this._useEmissiveMaterial), e2.setUniform("uShininess", this._useShininess), e2.setUniform("uUseLighting", this._enableLighting);
        var t2 = this.pointLightDiffuseColors.length / 3;
        e2.setUniform("uPointLightCount", t2), e2.setUniform("uPointLightLocation", this.pointLightPositions), e2.setUniform("uPointLightDiffuseColors", this.pointLightDiffuseColors), e2.setUniform("uPointLightSpecularColors", this.pointLightSpecularColors);
        var r2 = this.directionalLightDiffuseColors.length / 3;
        e2.setUniform("uDirectionalLightCount", r2), e2.setUniform("uLightingDirection", this.directionalLightDirections), e2.setUniform("uDirectionalDiffuseColors", this.directionalLightDiffuseColors), e2.setUniform("uDirectionalSpecularColors", this.directionalLightSpecularColors);
        var i2 = this.ambientLightColors.length / 3;
        e2.setUniform("uAmbientLightCount", i2), e2.setUniform("uAmbientColor", this.ambientLightColors);
        var n2 = this.spotLightDiffuseColors.length / 3;
        e2.setUniform("uSpotLightCount", n2), e2.setUniform("uSpotLightAngle", this.spotLightAngle), e2.setUniform("uSpotLightConc", this.spotLightConc), e2.setUniform("uSpotLightDiffuseColors", this.spotLightDiffuseColors), e2.setUniform("uSpotLightSpecularColors", this.spotLightSpecularColors), e2.setUniform("uSpotLightLocation", this.spotLightPositions), e2.setUniform("uSpotLightDirection", this.spotLightDirections), e2.setUniform("uConstantAttenuation", this.constantAttenuation), e2.setUniform("uLinearAttenuation", this.linearAttenuation), e2.setUniform("uQuadraticAttenuation", this.quadraticAttenuation), e2.bindTextures();
      }, u.default.RendererGL.prototype._setPointUniforms = function(e2) {
        e2.bindShader(), e2.setUniform("uMaterialColor", this.curStrokeColor), e2.setUniform("uPointSize", this.pointSize * this._pInst._pixelDensity);
      }, u.default.RendererGL.prototype._bindBuffer = function(e2, t2, r2, i2, n2) {
        if (t2 = t2 || this.GL.ARRAY_BUFFER, this.GL.bindBuffer(t2, e2), r2 !== void 0) {
          var a2 = new (i2 || Float32Array)(r2);
          this.GL.bufferData(t2, a2, n2 || this.GL.STATIC_DRAW);
        }
      }, u.default.RendererGL.prototype._arraysEqual = function(e2, t2) {
        var r2 = e2.length;
        if (r2 !== t2.length)
          return false;
        for (var i2 = 0; i2 < r2; i2++)
          if (e2[i2] !== t2[i2])
            return false;
        return true;
      }, u.default.RendererGL.prototype._isTypedArray = function(e2) {
        return e2 instanceof Uint32Array;
      }, u.default.RendererGL.prototype._flatten = function(e2) {
        if (e2.length === 0)
          return [];
        if (2e4 < e2.length) {
          var t2, r2 = Object.prototype.toString, i2 = [], n2 = e2.slice();
          for (t2 = n2.pop(); r2.call(t2) === "[object Array]" ? n2.push.apply(n2, l(t2)) : i2.push(t2), n2.length && (t2 = n2.pop()) !== void 0; )
            ;
          return i2.reverse(), i2;
        }
        var a2;
        return (a2 = []).concat.apply(a2, l(e2));
      }, u.default.RendererGL.prototype._vToNArray = function(e2) {
        var t2 = [], r2 = true, i2 = false, n2 = void 0;
        try {
          for (var a2, o2 = e2[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
            var s2 = a2.value;
            t2.push(s2.x, s2.y, s2.z);
          }
        } catch (e3) {
          i2 = true, n2 = e3;
        } finally {
          try {
            r2 || o2.return == null || o2.return();
          } finally {
            if (i2)
              throw n2;
          }
        }
        return t2;
      }, u.default.prototype._assert3d = function(e2) {
        if (!this._renderer.isP3D)
          throw new Error("".concat(e2, "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."));
      }, u.default.RendererGL.prototype._initTessy = function() {
        var e2 = new i.default.GluTesselator();
        return e2.gluTessCallback(i.default.gluEnum.GLU_TESS_VERTEX_DATA, function(e3, t2) {
          t2[t2.length] = e3[0], t2[t2.length] = e3[1], t2[t2.length] = e3[2];
        }), e2.gluTessCallback(i.default.gluEnum.GLU_TESS_BEGIN, function(e3) {
          e3 !== i.default.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: ".concat(e3));
        }), e2.gluTessCallback(i.default.gluEnum.GLU_TESS_ERROR, function(e3) {
          console.log("error callback"), console.log("error number: ".concat(e3));
        }), e2.gluTessCallback(i.default.gluEnum.GLU_TESS_COMBINE, function(e3, t2, r2) {
          return [e3[0], e3[1], e3[2]];
        }), e2.gluTessCallback(i.default.gluEnum.GLU_TESS_EDGE_FLAG, function(e3) {
        }), e2;
      }, u.default.RendererGL.prototype._triangulate = function(e2) {
        this._tessy.gluTessNormal(0, 0, 1);
        var t2 = [];
        this._tessy.gluTessBeginPolygon(t2);
        for (var r2 = 0; r2 < e2.length; r2++) {
          this._tessy.gluTessBeginContour();
          for (var i2 = e2[r2], n2 = 0; n2 < i2.length; n2 += 3) {
            var a2 = [i2[n2], i2[n2 + 1], i2[n2 + 2]];
            this._tessy.gluTessVertex(a2, a2);
          }
          this._tessy.gluTessEndContour();
        }
        return this._tessy.gluTessEndPolygon(), t2;
      }, u.default.RendererGL.prototype._bezierCoefficients = function(e2) {
        var t2 = e2 * e2, r2 = 1 - e2, i2 = r2 * r2;
        return [i2 * r2, 3 * i2 * e2, 3 * r2 * t2, t2 * e2];
      }, u.default.RendererGL.prototype._quadraticCoefficients = function(e2) {
        var t2 = 1 - e2;
        return [t2 * t2, 2 * t2 * e2, e2 * e2];
      }, u.default.RendererGL.prototype._bezierToCatmull = function(e2) {
        return [e2[1], e2[1] + (e2[2] - e2[0]) / this._curveTightness, e2[2] - (e2[3] - e2[1]) / this._curveTightness, e2[2]];
      };
      var f = u.default.RendererGL;
      r.default = f;
    }, {"../core/constants": 26, "../core/main": 36, "../core/p5.Renderer": 39, "./p5.Camera": 84, "./p5.Matrix": 86, "./p5.Shader": 91, libtess: 10, path: 13}], 91: [function(e, t, r) {
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i};
      n.default.Shader = function(e2, t2, r2) {
        this._renderer = e2, this._vertSrc = t2, this._fragSrc = r2, this._vertShader = -1, this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = false, this.attributes = {}, this._loadedUniforms = false, this.uniforms = {}, this._bound = false, this.samplers = [];
      }, n.default.Shader.prototype.init = function() {
        if (this._glProgram === 0) {
          var e2 = this._renderer.GL;
          if (this._vertShader = e2.createShader(e2.VERTEX_SHADER), e2.shaderSource(this._vertShader, this._vertSrc), e2.compileShader(this._vertShader), !e2.getShaderParameter(this._vertShader, e2.COMPILE_STATUS))
            return console.error("Yikes! An error occurred compiling the vertex shader:".concat(e2.getShaderInfoLog(this._vertShader))), null;
          if (this._fragShader = e2.createShader(e2.FRAGMENT_SHADER), e2.shaderSource(this._fragShader, this._fragSrc), e2.compileShader(this._fragShader), !e2.getShaderParameter(this._fragShader, e2.COMPILE_STATUS))
            return console.error("Darn! An error occurred compiling the fragment shader:".concat(e2.getShaderInfoLog(this._fragShader))), null;
          this._glProgram = e2.createProgram(), e2.attachShader(this._glProgram, this._vertShader), e2.attachShader(this._glProgram, this._fragShader), e2.linkProgram(this._glProgram), e2.getProgramParameter(this._glProgram, e2.LINK_STATUS) || console.error("Snap! Error linking shader program: ".concat(e2.getProgramInfoLog(this._glProgram))), this._loadAttributes(), this._loadUniforms();
        }
        return this;
      }, n.default.Shader.prototype._loadAttributes = function() {
        if (!this._loadedAttributes) {
          this.attributes = {};
          for (var e2 = this._renderer.GL, t2 = e2.getProgramParameter(this._glProgram, e2.ACTIVE_ATTRIBUTES), r2 = 0; r2 < t2; ++r2) {
            var i2 = e2.getActiveAttrib(this._glProgram, r2), n2 = i2.name, a2 = e2.getAttribLocation(this._glProgram, n2), o = {};
            o.name = n2, o.location = a2, o.index = r2, o.type = i2.type, o.size = i2.size, this.attributes[n2] = o;
          }
          this._loadedAttributes = true;
        }
      }, n.default.Shader.prototype._loadUniforms = function() {
        if (!this._loadedUniforms) {
          for (var e2 = this._renderer.GL, t2 = e2.getProgramParameter(this._glProgram, e2.ACTIVE_UNIFORMS), r2 = 0, i2 = 0; i2 < t2; ++i2) {
            var n2 = e2.getActiveUniform(this._glProgram, i2), a2 = {};
            a2.location = e2.getUniformLocation(this._glProgram, n2.name), a2.size = n2.size;
            var o = n2.name;
            1 < n2.size && (o = o.substring(0, o.indexOf("[0]"))), a2.name = o, a2.type = n2.type, a2._cachedData = void 0, a2.type === e2.SAMPLER_2D && (a2.samplerIndex = r2, r2++, this.samplers.push(a2)), a2.isArray = a2.type === e2.FLOAT_MAT3 || a2.type === e2.FLOAT_MAT4 || a2.type === e2.FLOAT_VEC2 || a2.type === e2.FLOAT_VEC3 || a2.type === e2.FLOAT_VEC4 || a2.type === e2.INT_VEC2 || a2.type === e2.INT_VEC3 || a2.type === e2.INT_VEC4, this.uniforms[o] = a2;
          }
          this._loadedUniforms = true;
        }
      }, n.default.Shader.prototype.compile = function() {
      }, n.default.Shader.prototype.bindShader = function() {
        this.init(), this._bound || (this.useProgram(), this._bound = true, this._setMatrixUniforms(), this.setUniform("uViewport", this._renderer._viewport));
      }, n.default.Shader.prototype.unbindShader = function() {
        return this._bound && (this.unbindTextures(), this._bound = false), this;
      }, n.default.Shader.prototype.bindTextures = function() {
        var e2 = this._renderer.GL, t2 = true, r2 = false, i2 = void 0;
        try {
          for (var n2, a2 = this.samplers[Symbol.iterator](); !(t2 = (n2 = a2.next()).done); t2 = true) {
            var o = n2.value, s = o.texture;
            s === void 0 && (s = this._renderer._getEmptyTexture()), e2.activeTexture(e2.TEXTURE0 + o.samplerIndex), s.bindTexture(), s.update(), e2.uniform1i(o.location, o.samplerIndex);
          }
        } catch (e3) {
          r2 = true, i2 = e3;
        } finally {
          try {
            t2 || a2.return == null || a2.return();
          } finally {
            if (r2)
              throw i2;
          }
        }
      }, n.default.Shader.prototype.updateTextures = function() {
        var e2 = true, t2 = false, r2 = void 0;
        try {
          for (var i2, n2 = this.samplers[Symbol.iterator](); !(e2 = (i2 = n2.next()).done); e2 = true) {
            var a2 = i2.value.texture;
            a2 && a2.update();
          }
        } catch (e3) {
          t2 = true, r2 = e3;
        } finally {
          try {
            e2 || n2.return == null || n2.return();
          } finally {
            if (t2)
              throw r2;
          }
        }
      }, n.default.Shader.prototype.unbindTextures = function() {
      }, n.default.Shader.prototype._setMatrixUniforms = function() {
        this.setUniform("uProjectionMatrix", this._renderer.uPMatrix.mat4), this.isStrokeShader() && (this._renderer._curCamera.cameraType === "default" ? this.setUniform("uPerspective", 1) : this.setUniform("uPerspective", 0)), this.setUniform("uModelViewMatrix", this._renderer.uMVMatrix.mat4), this.setUniform("uViewMatrix", this._renderer._curCamera.cameraMatrix.mat4), this.uniforms.uNormalMatrix && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3));
      }, n.default.Shader.prototype.useProgram = function() {
        var e2 = this._renderer.GL;
        return this._renderer._curShader !== this && (e2.useProgram(this._glProgram), this._renderer._curShader = this), this;
      }, n.default.Shader.prototype.setUniform = function(e2, t2) {
        var r2 = this.uniforms[e2];
        if (r2) {
          var i2 = this._renderer.GL;
          if (r2.isArray) {
            if (r2._cachedData && this._renderer._arraysEqual(r2._cachedData, t2))
              return;
            r2._cachedData = t2.slice(0);
          } else {
            if (r2._cachedData && r2._cachedData === t2)
              return;
            r2._cachedData = t2;
          }
          var n2 = r2.location;
          switch (this.useProgram(), r2.type) {
            case i2.BOOL:
              t2 === true ? i2.uniform1i(n2, 1) : i2.uniform1i(n2, 0);
              break;
            case i2.INT:
              1 < r2.size ? t2.length && i2.uniform1iv(n2, t2) : i2.uniform1i(n2, t2);
              break;
            case i2.FLOAT:
              1 < r2.size ? t2.length && i2.uniform1fv(n2, t2) : i2.uniform1f(n2, t2);
              break;
            case i2.FLOAT_MAT3:
              i2.uniformMatrix3fv(n2, false, t2);
              break;
            case i2.FLOAT_MAT4:
              i2.uniformMatrix4fv(n2, false, t2);
              break;
            case i2.FLOAT_VEC2:
              1 < r2.size ? t2.length && i2.uniform2fv(n2, t2) : i2.uniform2f(n2, t2[0], t2[1]);
              break;
            case i2.FLOAT_VEC3:
              1 < r2.size ? t2.length && i2.uniform3fv(n2, t2) : i2.uniform3f(n2, t2[0], t2[1], t2[2]);
              break;
            case i2.FLOAT_VEC4:
              1 < r2.size ? t2.length && i2.uniform4fv(n2, t2) : i2.uniform4f(n2, t2[0], t2[1], t2[2], t2[3]);
              break;
            case i2.INT_VEC2:
              1 < r2.size ? t2.length && i2.uniform2iv(n2, t2) : i2.uniform2i(n2, t2[0], t2[1]);
              break;
            case i2.INT_VEC3:
              1 < r2.size ? t2.length && i2.uniform3iv(n2, t2) : i2.uniform3i(n2, t2[0], t2[1], t2[2]);
              break;
            case i2.INT_VEC4:
              1 < r2.size ? t2.length && i2.uniform4iv(n2, t2) : i2.uniform4i(n2, t2[0], t2[1], t2[2], t2[3]);
              break;
            case i2.SAMPLER_2D:
              i2.activeTexture(i2.TEXTURE0 + r2.samplerIndex), r2.texture = this._renderer.getTexture(t2), i2.uniform1i(r2.location, r2.samplerIndex);
          }
          return this;
        }
      }, n.default.Shader.prototype.isLightShader = function() {
        return this.attributes.aNormal !== void 0 || this.uniforms.uUseLighting !== void 0 || this.uniforms.uAmbientLightCount !== void 0 || this.uniforms.uDirectionalLightCount !== void 0 || this.uniforms.uPointLightCount !== void 0 || this.uniforms.uAmbientColor !== void 0 || this.uniforms.uDirectionalDiffuseColors !== void 0 || this.uniforms.uDirectionalSpecularColors !== void 0 || this.uniforms.uPointLightLocation !== void 0 || this.uniforms.uPointLightDiffuseColors !== void 0 || this.uniforms.uPointLightSpecularColors !== void 0 || this.uniforms.uLightingDirection !== void 0 || this.uniforms.uSpecular !== void 0;
      }, n.default.Shader.prototype.isNormalShader = function() {
        return this.attributes.aNormal !== void 0;
      }, n.default.Shader.prototype.isTextureShader = function() {
        return 0 < this.samplerIndex;
      }, n.default.Shader.prototype.isColorShader = function() {
        return this.attributes.aVertexColor !== void 0 || this.uniforms.uMaterialColor !== void 0;
      }, n.default.Shader.prototype.isTexLightShader = function() {
        return this.isLightShader() && this.isTextureShader();
      }, n.default.Shader.prototype.isStrokeShader = function() {
        return this.uniforms.uStrokeWeight !== void 0;
      }, n.default.Shader.prototype.enableAttrib = function(e2, t2, r2, i2, n2, a2) {
        if (e2) {
          var o = e2.location;
          if (o !== -1) {
            var s = this._renderer.GL;
            e2.enabled || (s.enableVertexAttribArray(o), e2.enabled = true), this._renderer.GL.vertexAttribPointer(o, t2, r2 || s.FLOAT, i2 || false, n2 || 0, a2 || 0);
          }
        }
        return this;
      };
      var a = n.default.Shader;
      r.default = a;
    }, {"../core/main": 36}], 92: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      Object.defineProperty(r, "__esModule", {value: true}), r.default = void 0;
      var i, n = (i = e("../core/main")) && i.__esModule ? i : {default: i}, s = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = l();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a2 = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a2 && (a2.get || a2.set) ? Object.defineProperty(r2, n2, a2) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function l() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return l = function() {
          return e2;
        }, e2;
      }
      n.default.Texture = function(e2, t2) {
        this._renderer = e2;
        var r2 = this._renderer.GL;
        this.src = t2, this.glTex = void 0, this.glTarget = r2.TEXTURE_2D, this.glFormat = r2.RGBA, this.mipmaps = false, this.glMinFilter = r2.LINEAR, this.glMagFilter = r2.LINEAR, this.glWrapS = r2.CLAMP_TO_EDGE, this.glWrapT = r2.CLAMP_TO_EDGE, this.isSrcMediaElement = n.default.MediaElement !== void 0 && t2 instanceof n.default.MediaElement, this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = n.default.Element !== void 0 && t2 instanceof n.default.Element && !(t2 instanceof n.default.Graphics), this.isSrcP5Image = t2 instanceof n.default.Image, this.isSrcP5Graphics = t2 instanceof n.default.Graphics, this.isImageData = typeof ImageData != "undefined" && t2 instanceof ImageData;
        var i2 = this._getTextureDataFromSource();
        return this.width = i2.width, this.height = i2.height, this.init(i2), this;
      }, n.default.Texture.prototype._getTextureDataFromSource = function() {
        var e2;
        return this.isSrcP5Image ? e2 = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcHTMLElement ? e2 = this.src.elt : this.isImageData && (e2 = this.src), e2;
      }, n.default.Texture.prototype.init = function(e2) {
        var t2 = this._renderer.GL;
        if (this.glTex = t2.createTexture(), this.glWrapS = this._renderer.textureWrapX, this.glWrapT = this._renderer.textureWrapY, this.setWrapMode(this.glWrapS, this.glWrapT), this.bindTexture(), t2.texParameteri(t2.TEXTURE_2D, t2.TEXTURE_MAG_FILTER, this.glMagFilter), t2.texParameteri(t2.TEXTURE_2D, t2.TEXTURE_MIN_FILTER, this.glMinFilter), this.width === 0 || this.height === 0 || this.isSrcMediaElement && !this.src.loadedmetadata) {
          var r2 = new Uint8Array([1, 1, 1, 1]);
          t2.texImage2D(this.glTarget, 0, t2.RGBA, 1, 1, 0, this.glFormat, t2.UNSIGNED_BYTE, r2);
        } else
          t2.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, t2.UNSIGNED_BYTE, e2);
      }, n.default.Texture.prototype.update = function() {
        var e2 = this.src;
        if (e2.width === 0 || e2.height === 0)
          return false;
        var t2 = this._getTextureDataFromSource(), r2 = false, i2 = this._renderer.GL;
        return t2.width !== this.width || t2.height !== this.height ? (r2 = true, this.width = t2.width, this.height = t2.height, this.isSrcP5Image ? e2.setModified(false) : (this.isSrcMediaElement || this.isSrcHTMLElement) && e2.setModified(true)) : this.isSrcP5Image ? e2.isModified() && (r2 = true, e2.setModified(false)) : this.isSrcMediaElement ? e2.isModified() ? (r2 = true, e2.setModified(false)) : e2.loadedmetadata && this._videoPrevUpdateTime !== e2.time() && (this._videoPrevUpdateTime = e2.time(), r2 = true) : this.isImageData ? e2._dirty && (r2 = !(e2._dirty = false)) : r2 = true, r2 && (this.bindTexture(), i2.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, i2.UNSIGNED_BYTE, t2)), r2;
      }, n.default.Texture.prototype.bindTexture = function() {
        return this._renderer.GL.bindTexture(this.glTarget, this.glTex), this;
      }, n.default.Texture.prototype.unbindTexture = function() {
        this._renderer.GL.bindTexture(this.glTarget, null);
      }, n.default.Texture.prototype.setInterpolation = function(e2, t2) {
        var r2 = this._renderer.GL;
        e2 === s.NEAREST ? this.glMinFilter = r2.NEAREST : this.glMinFilter = r2.LINEAR, t2 === s.NEAREST ? this.glMagFilter = r2.NEAREST : this.glMagFilter = r2.LINEAR, this.bindTexture(), r2.texParameteri(r2.TEXTURE_2D, r2.TEXTURE_MIN_FILTER, this.glMinFilter), r2.texParameteri(r2.TEXTURE_2D, r2.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
      }, n.default.Texture.prototype.setWrapMode = function(e2, t2) {
        function r2(e3) {
          return (e3 & e3 - 1) == 0;
        }
        var i2 = this._renderer.GL, n2 = r2(this.width), a2 = r2(this.height);
        e2 === s.REPEAT ? n2 && a2 ? this.glWrapS = i2.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = i2.CLAMP_TO_EDGE) : e2 === s.MIRROR ? n2 && a2 ? this.glWrapS = i2.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = i2.CLAMP_TO_EDGE) : this.glWrapS = i2.CLAMP_TO_EDGE, t2 === s.REPEAT ? n2 && a2 ? this.glWrapT = i2.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = i2.CLAMP_TO_EDGE) : t2 === s.MIRROR ? n2 && a2 ? this.glWrapT = i2.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = i2.CLAMP_TO_EDGE) : this.glWrapT = i2.CLAMP_TO_EDGE, this.bindTexture(), i2.texParameteri(i2.TEXTURE_2D, i2.TEXTURE_WRAP_S, this.glWrapS), i2.texParameteri(i2.TEXTURE_2D, i2.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
      };
      var a = n.default.Texture;
      r.default = a;
    }, {"../core/constants": 26, "../core/main": 36}], 93: [function(e, t, r) {
      function o(e2) {
        return (o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      var i, j = (i = e("../core/main")) && i.__esModule ? i : {default: i}, k = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || o(e2) !== "object" && typeof e2 != "function")
          return {default: e2};
        var t2 = s();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var r2 = {}, i2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var n2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, n2)) {
            var a = i2 ? Object.getOwnPropertyDescriptor(e2, n2) : null;
            a && (a.get || a.set) ? Object.defineProperty(r2, n2, a) : r2[n2] = e2[n2];
          }
        r2.default = e2, t2 && t2.set(e2, r2);
        return r2;
      }(e("../core/constants"));
      function s() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = new WeakMap();
        return s = function() {
          return e2;
        }, e2;
      }
      e("./p5.Shader"), e("./p5.RendererGL.Retained"), j.default.RendererGL.prototype._applyTextProperties = function() {
      }, j.default.RendererGL.prototype.textWidth = function(e2) {
        return this._isOpenType() ? this._textFont._textWidth(e2, this._textSize) : 0;
      };
      function n(e2, t2) {
        this.width = e2, this.height = t2, this.infos = [], this.findImage = function(e3) {
          var t3, r2, i2 = this.width * this.height;
          if (i2 < e3)
            throw new Error("font is too complex to render in 3D");
          for (var n2 = this.infos.length - 1; 0 <= n2; --n2) {
            var a = this.infos[n2];
            if (a.index + e3 < i2) {
              r2 = (t3 = a).imageData;
              break;
            }
          }
          if (!t3) {
            try {
              r2 = new ImageData(this.width, this.height);
            } catch (e4) {
              var o2 = document.getElementsByTagName("canvas")[0], s2 = !o2;
              o2 || ((o2 = document.createElement("canvas")).style.display = "none", document.body.appendChild(o2));
              var l = o2.getContext("2d");
              l && (r2 = l.createImageData(this.width, this.height)), s2 && document.body.removeChild(o2);
            }
            t3 = {index: 0, imageData: r2}, this.infos.push(t3);
          }
          var u = t3.index;
          return t3.index += e3, r2._dirty = true, {imageData: r2, index: u};
        };
      }
      function V(e2, t2, r2, i2, n2) {
        var a = e2.imageData.data, o2 = 4 * e2.index++;
        a[o2++] = t2, a[o2++] = r2, a[o2++] = i2, a[o2++] = n2;
      }
      function A(e2) {
        this.font = e2, this.strokeImageInfos = new n(64, 64), this.colDimImageInfos = new n(64, 64), this.rowDimImageInfos = new n(64, 64), this.colCellImageInfos = new n(64, 64), this.rowCellImageInfos = new n(64, 64), this.glyphInfos = {}, this.getGlyphInfo = function(e3) {
          var t2 = this.glyphInfos[e3.index];
          if (t2)
            return t2;
          var r2, i2 = e3.getBoundingBox(), n2 = i2.x1, a = i2.y1, o2 = i2.x2 - n2, s2 = i2.y2 - a, l = e3.path.commands;
          if (o2 == 0 || s2 == 0 || !l.length)
            return this.glyphInfos[e3.index] = {};
          var u, h, c, f, d = [], p = [], m = [];
          for (r2 = 8; 0 <= r2; --r2)
            m.push([]);
          for (r2 = 8; 0 <= r2; --r2)
            p.push([]);
          function v(e4, t3, r3) {
            var i3 = d.length;
            function n3(e5, t4, r4) {
              for (var i4 = e5.length; 0 < i4--; ) {
                var n4 = e5[i4];
                n4 < t4 && (t4 = n4), r4 < n4 && (r4 = n4);
              }
              return {min: t4, max: r4};
            }
            d.push(r3);
            for (var a2 = n3(e4, 1, 0), o3 = Math.max(Math.floor(9 * a2.min), 0), s3 = Math.min(Math.ceil(9 * a2.max), 9), l2 = o3; l2 < s3; ++l2)
              m[l2].push(i3);
            for (var u2 = n3(t3, 1, 0), h2 = Math.max(Math.floor(9 * u2.min), 0), c2 = Math.min(Math.ceil(9 * u2.max), 9), f2 = h2; f2 < c2; ++f2)
              p[f2].push(i3);
          }
          function y(e4) {
            return (t3 = (i3 = 255) * e4) < (r3 = 0) ? r3 : i3 < t3 ? i3 : t3;
            var t3, r3, i3;
          }
          function w(e4, t3, r3, i3) {
            this.p0 = e4, this.c0 = t3, this.c1 = r3, this.p1 = i3, this.toQuadratic = function() {
              return {x: this.p0.x, y: this.p0.y, x1: this.p1.x, y1: this.p1.y, cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4, cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4};
            }, this.quadError = function() {
              return j.default.Vector.sub(j.default.Vector.sub(this.p1, this.p0), j.default.Vector.mult(j.default.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
            }, this.split = function(e5) {
              var t4 = j.default.Vector.lerp(this.p0, this.c0, e5), r4 = j.default.Vector.lerp(this.c0, this.c1, e5), i4 = j.default.Vector.lerp(t4, r4, e5);
              this.c1 = j.default.Vector.lerp(this.c1, this.p1, e5), this.c0 = j.default.Vector.lerp(r4, this.c1, e5);
              var n3 = j.default.Vector.lerp(i4, this.c0, e5), a2 = new w(this.p0, t4, i4, n3);
              return this.p0 = n3, a2;
            }, this.splitInflections = function() {
              var e5 = j.default.Vector.sub(this.c0, this.p0), t4 = j.default.Vector.sub(j.default.Vector.sub(this.c1, this.c0), e5), r4 = j.default.Vector.sub(j.default.Vector.sub(j.default.Vector.sub(this.p1, this.c1), e5), j.default.Vector.mult(t4, 2)), i4 = [], n3 = t4.x * r4.y - t4.y * r4.x;
              if (n3 !== 0) {
                var a2 = e5.x * r4.y - e5.y * r4.x, o3 = e5.x * t4.y - e5.y * t4.x, s3 = a2 * a2 - 4 * n3 * o3;
                if (0 <= s3) {
                  n3 < 0 && (n3 = -n3, a2 = -a2, o3 = -o3);
                  var l2 = Math.sqrt(s3), u2 = (-a2 - l2) / (2 * n3), h2 = (-a2 + l2) / (2 * n3);
                  0 < u2 && u2 < 1 && (i4.push(this.split(u2)), h2 = 1 - (1 - h2) / (1 - u2)), 0 < h2 && h2 < 1 && i4.push(this.split(h2));
                }
              }
              return i4.push(this), i4;
            };
          }
          function g(e4, t3, r3, i3, n3, a2, o3, s3) {
            var l2 = new w(new j.default.Vector(e4, t3), new j.default.Vector(r3, i3), new j.default.Vector(n3, a2), new j.default.Vector(o3, s3)).splitInflections(), u2 = [], h2 = 30 / z, c2 = true, f2 = false, d2 = void 0;
            try {
              for (var p2, m2 = l2[Symbol.iterator](); !(c2 = (p2 = m2.next()).done); c2 = true) {
                for (var v2 = p2.value, y2 = [], g2 = void 0; !(0.125 <= (g2 = h2 / v2.quadError())); ) {
                  var b2 = Math.pow(g2, 1 / 3), _2 = v2.split(b2), x2 = v2.split(1 - b2 / (1 - b2));
                  u2.push(_2), y2.push(v2), v2 = x2;
                }
                g2 < 1 && u2.push(v2.split(0.5)), u2.push(v2), Array.prototype.push.apply(u2, y2.reverse());
              }
            } catch (e5) {
              f2 = true, d2 = e5;
            } finally {
              try {
                c2 || m2.return == null || m2.return();
              } finally {
                if (f2)
                  throw d2;
              }
            }
            return u2;
          }
          function b(e4, t3, r3, i3) {
            v([e4, r3], [t3, i3], {x: e4, y: t3, cx: (e4 + r3) / 2, cy: (t3 + i3) / 2});
          }
          function _(e4, t3, r3, i3) {
            return Math.abs(r3 - e4) < 1e-5 && Math.abs(i3 - t3) < 1e-5;
          }
          var x = true, S = false, M = void 0;
          try {
            for (var T, E = l[Symbol.iterator](); !(x = (T = E.next()).done); x = true) {
              var C = T.value, L = (C.x - n2) / o2, O = (C.y - a) / s2;
              if (!_(u, h, L, O)) {
                switch (C.type) {
                  case "M":
                    c = L, f = O;
                    break;
                  case "L":
                    b(u, h, L, O);
                    break;
                  case "Q":
                    var P = (C.x1 - n2) / o2, R = (C.y1 - a) / s2;
                    v([u, L, P], [h, O, R], {x: u, y: h, cx: P, cy: R});
                    break;
                  case "Z":
                    _(u, h, c, f) ? d.push({x: u, y: h}) : (b(u, h, c, f), d.push({x: c, y: f}));
                    break;
                  case "C":
                    for (var D = g(u, h, (C.x1 - n2) / o2, (C.y1 - a) / s2, (C.x2 - n2) / o2, (C.y2 - a) / s2, L, O), k2 = 0; k2 < D.length; k2++) {
                      var A2 = D[k2].toQuadratic();
                      v([A2.x, A2.x1, A2.cx], [A2.y, A2.y1, A2.cy], A2);
                    }
                    break;
                  default:
                    throw new Error("unknown command type: ".concat(C.type));
                }
                u = L, h = O;
              }
            }
          } catch (e4) {
            S = true, M = e4;
          } finally {
            try {
              x || E.return == null || E.return();
            } finally {
              if (S)
                throw M;
            }
          }
          for (var I = d.length, U = this.strokeImageInfos.findImage(I), N = U.index, F = 0; F < I; ++F) {
            var B = d[F];
            V(U, y(B.x), y(B.y), y(B.cx), y(B.cy));
          }
          function G(e4, t3, r3) {
            for (var i3 = e4.length, n3 = t3.findImage(i3), a2 = n3.index, o3 = 0, s3 = 0; s3 < i3; ++s3)
              o3 += e4[s3].length;
            for (var l2 = r3.findImage(o3), u2 = 0; u2 < i3; ++u2) {
              var h2 = e4[u2], c2 = h2.length, f2 = l2.index;
              V(n3, f2 >> 7, 127 & f2, c2 >> 7, 127 & c2);
              for (var d2 = 0; d2 < c2; ++d2) {
                var p2 = h2[d2] + N;
                V(l2, p2 >> 7, 127 & p2, 0, 0);
              }
            }
            return {cellImageInfo: l2, dimOffset: a2, dimImageInfo: n3};
          }
          return (t2 = this.glyphInfos[e3.index] = {glyph: e3, uGlyphRect: [i2.x1, -i2.y1, i2.x2, -i2.y2], strokeImageInfo: U, strokes: d, colInfo: G(m, this.colDimImageInfos, this.colCellImageInfos), rowInfo: G(p, this.rowDimImageInfos, this.rowCellImageInfos)}).uGridOffset = [t2.colInfo.dimOffset, t2.rowInfo.dimOffset], t2;
        };
      }
      var z = Math.sqrt(3);
      j.default.RendererGL.prototype._renderText = function(e2, t2, r2, i2, n2) {
        if (this._textFont && typeof this._textFont != "string") {
          if (!(n2 <= i2) && this._doFill) {
            if (!this._isOpenType())
              return console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported"), e2;
            e2.push();
            var a = this._doStroke, o2 = this.drawMode;
            this._doStroke = false, this.drawMode = k.TEXTURE;
            var s2 = this._textFont.font, l = this._textFont._fontInfo;
            l = l || (this._textFont._fontInfo = new A(s2));
            var u = this._textFont._handleAlignment(this, t2, r2, i2), h = this._textSize / s2.unitsPerEm;
            this.translate(u.x, u.y, 0), this.scale(h, h, 1);
            var c = this.GL, f = !this._defaultFontShader, d = this._getFontShader();
            d.init(), d.bindShader(), f && (d.setUniform("uGridImageSize", [64, 64]), d.setUniform("uCellsImageSize", [64, 64]), d.setUniform("uStrokeImageSize", [64, 64]), d.setUniform("uGridSize", [9, 9])), this._applyColorBlend(this.curFillColor);
            var p = this.retainedMode.geometry.glyph;
            if (!p) {
              var m = this._textGeom = new j.default.Geometry(1, 1, function() {
                for (var e3 = 0; e3 <= 1; e3++)
                  for (var t3 = 0; t3 <= 1; t3++)
                    this.vertices.push(new j.default.Vector(t3, e3, 0)), this.uvs.push(t3, e3);
              });
              m.computeFaces().computeNormals(), p = this.createBuffers("glyph", m);
            }
            var v = true, y = false, g = void 0;
            try {
              for (var b, _ = this.retainedMode.buffers.text[Symbol.iterator](); !(v = (b = _.next()).done); v = true) {
                b.value._prepareBuffer(p, d);
              }
            } catch (e3) {
              y = true, g = e3;
            } finally {
              try {
                v || _.return == null || _.return();
              } finally {
                if (y)
                  throw g;
              }
            }
            this._bindBuffer(p.indexBuffer, c.ELEMENT_ARRAY_BUFFER), d.setUniform("uMaterialColor", this.curFillColor);
            try {
              var x = 0, w = null, S = s2.stringToGlyphs(t2), M = true, T = false, E = void 0;
              try {
                for (var C, L = S[Symbol.iterator](); !(M = (C = L.next()).done); M = true) {
                  var O = C.value;
                  w && (x += s2.getKerningValue(w, O));
                  var P = l.getGlyphInfo(O);
                  if (P.uGlyphRect) {
                    var R = P.rowInfo, D = P.colInfo;
                    d.setUniform("uSamplerStrokes", P.strokeImageInfo.imageData), d.setUniform("uSamplerRowStrokes", R.cellImageInfo.imageData), d.setUniform("uSamplerRows", R.dimImageInfo.imageData), d.setUniform("uSamplerColStrokes", D.cellImageInfo.imageData), d.setUniform("uSamplerCols", D.dimImageInfo.imageData), d.setUniform("uGridOffset", P.uGridOffset), d.setUniform("uGlyphRect", P.uGlyphRect), d.setUniform("uGlyphOffset", x), d.bindTextures(), c.drawElements(c.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0);
                  }
                  x += O.advanceWidth, w = O;
                }
              } catch (e3) {
                T = true, E = e3;
              } finally {
                try {
                  M || L.return == null || L.return();
                } finally {
                  if (T)
                    throw E;
                }
              }
            } finally {
              d.unbindShader(), this._doStroke = a, this.drawMode = o2, e2.pop();
            }
            return e2;
          }
        } else
          console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.");
      };
    }, {"../core/constants": 26, "../core/main": 36, "./p5.RendererGL.Retained": 89, "./p5.Shader": 91}]}, {}, [21])(21);
  });
});
var __pika_web_default_export_for_treeshaking__ = /* @__PURE__ */ getDefaultExportFromCjs(p5_min);
var p5_default = __pika_web_default_export_for_treeshaking__;

// build/dist/p5/Canvas.svelte.js
function create_fragment9(ctx) {
  let div;
  let div_resize_listener;
  let mounted;
  let dispose;
  return {
    c() {
      div = element("div");
      attr(div, "class", "m-0 p-0 object-contain h-full");
      add_render_callback(() => ctx[7].call(div));
    },
    m(target, anchor) {
      insert(target, div, anchor);
      div_resize_listener = add_resize_listener(div, ctx[7].bind(div));
      ctx[8](div);
      if (!mounted) {
        dispose = listen(window, "keydown", ctx[2]);
        mounted = true;
      }
    },
    p: noop,
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching)
        detach(div);
      div_resize_listener();
      ctx[8](null);
      mounted = false;
      dispose();
    }
  };
}
function instance8($$self, $$props, $$invalidate) {
  let {sketch} = $$props;
  let {mode = "2D"} = $$props;
  let {height = 0} = $$props;
  let {width = 0} = $$props;
  let clientWidth;
  let element2;
  let child;
  const debounce = (x, fn) => {
    let timeout;
    return () => {
      const later = (...x2) => {
        timeout = null;
        fn(...x2);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, x);
    };
  };
  const run2 = (p) => {
    child = sketch(p, element2);
    p.setup = () => {
      const renderer = mode == "2D" ? p.P2D : p.WEBGL;
      p.createCanvas(width || clientWidth, height || p.windowHeight * 0.75, renderer);
      child.setup && child.setup();
    };
    if (width === 0) {
      p.windowResized = debounce(300, () => {
        p.resizeCanvas(width || clientWidth, height || p.windowHeight * 0.75);
        child.onResize && child.onResize();
      });
    }
  };
  const ignoreSpace = (e) => {
    if (e.keyCode == 32) {
      e.preventDefault();
    }
  };
  onMount(() => {
    new p5_default(run2, element2);
  });
  function div_elementresize_handler() {
    clientWidth = this.clientWidth;
    $$invalidate(0, clientWidth);
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      element2 = $$value;
      $$invalidate(1, element2);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("sketch" in $$props2)
      $$invalidate(3, sketch = $$props2.sketch);
    if ("mode" in $$props2)
      $$invalidate(4, mode = $$props2.mode);
    if ("height" in $$props2)
      $$invalidate(5, height = $$props2.height);
    if ("width" in $$props2)
      $$invalidate(6, width = $$props2.width);
  };
  return [
    clientWidth,
    element2,
    ignoreSpace,
    sketch,
    mode,
    height,
    width,
    div_elementresize_handler,
    div_binding
  ];
}
var Canvas = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance8, create_fragment9, safe_not_equal, {sketch: 3, mode: 4, height: 5, width: 6});
  }
};
var Canvas_svelte_default = Canvas;

// build/dist/beyond/ParametricEqLines.svelte.js
function create_fragment10(ctx) {
  let div4;
  let canvas;
  let t0;
  let div3;
  let div2;
  let div0;
  let p0;
  let t2;
  let p1;
  let t3_value = ctx[0].toFixed(3) + "";
  let t3;
  let t4;
  let input0;
  let t5;
  let div1;
  let p2;
  let t7;
  let p3;
  let t8;
  let t9;
  let input1;
  let current;
  let mounted;
  let dispose;
  canvas = new Canvas_svelte_default({props: {sketch: ctx[2]}});
  return {
    c() {
      div4 = element("div");
      create_component(canvas.$$.fragment);
      t0 = space();
      div3 = element("div");
      div2 = element("div");
      div0 = element("div");
      p0 = element("p");
      p0.textContent = "speed:";
      t2 = space();
      p1 = element("p");
      t3 = text(t3_value);
      t4 = space();
      input0 = element("input");
      t5 = space();
      div1 = element("div");
      p2 = element("p");
      p2.textContent = "lines:";
      t7 = space();
      p3 = element("p");
      t8 = text(ctx[1]);
      t9 = space();
      input1 = element("input");
      attr(p0, "class", "table-cell w-12 font-mono text-right");
      attr(p1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input0, "class", "table-cell align-left");
      attr(input0, "type", "range");
      attr(input0, "min", "0.001");
      attr(input0, "max", "0.5");
      attr(input0, "step", "0.01");
      attr(div0, "class", "table-row");
      attr(p2, "class", "table-cell w-12 font-mono text-right");
      attr(p3, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input1, "class", "table-cell align-left");
      attr(input1, "type", "range");
      attr(input1, "min", "1");
      attr(input1, "max", "24");
      attr(div1, "class", "table-row");
      attr(div2, "class", "table-row-group");
      attr(div3, "class", "table w-full");
      attr(div4, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div4, anchor);
      mount_component(canvas, div4, null);
      append(div4, t0);
      append(div4, div3);
      append(div3, div2);
      append(div2, div0);
      append(div0, p0);
      append(div0, t2);
      append(div0, p1);
      append(p1, t3);
      append(div0, t4);
      append(div0, input0);
      set_input_value(input0, ctx[0]);
      append(div2, t5);
      append(div2, div1);
      append(div1, p2);
      append(div1, t7);
      append(div1, p3);
      append(p3, t8);
      append(div1, t9);
      append(div1, input1);
      set_input_value(input1, ctx[1]);
      current = true;
      if (!mounted) {
        dispose = [
          listen(input0, "change", ctx[4]),
          listen(input0, "input", ctx[4]),
          listen(input1, "change", ctx[5]),
          listen(input1, "input", ctx[5])
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & 1) && t3_value !== (t3_value = ctx2[0].toFixed(3) + ""))
        set_data(t3, t3_value);
      if (dirty & 1) {
        set_input_value(input0, ctx2[0]);
      }
      if (!current || dirty & 2)
        set_data(t8, ctx2[1]);
      if (dirty & 2) {
        set_input_value(input1, ctx2[1]);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(canvas.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(canvas.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div4);
      destroy_component(canvas);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance9($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let dt2 = 0.215;
  let lines = 12;
  const sketch = (p, el) => {
    const setup = () => {
      p.background(0);
      p.stroke(255);
      p.strokeWeight(4);
      p.colorMode(p.HSB);
    };
    const x1 = (t2) => p.sin(t2 / 10) * 180 + p.sin(t2 / 5) * 30;
    const y1 = (t2) => p.cos(t2 / 10) * 120;
    const x2 = (t2) => p.sin(t2 / 7) * 280 + p.sin(t2) * 2;
    const y2 = (t2) => p.cos(t2 / 2) * 20 + p.sin(t2 / 7) * 75;
    let hue = 0;
    const h = (t2) => hue++ % 256;
    let t = 0;
    p.draw = () => {
      p.translate(p.width / 2, p.height / 2);
      p.background(0);
      p.stroke(h(t), 80, 80, 20);
      for (let i = 0; i < lines; i++) {
        const ti = t + i;
        p.line(x1(ti), y1(ti), x2(ti), y2(ti));
      }
      t += dt2;
    };
    let looping = true;
    const toggleLoop = () => {
      looping ? p.noLoop() : p.loop();
      looping = !looping;
    };
    p.keyPressed = () => {
      switch (p.keyCode) {
        case 32:
          toggleLoop();
          break;
        case 13:
          p.redraw();
          break;
      }
    };
    return {setup};
  };
  function input0_change_input_handler() {
    dt2 = to_number(this.value);
    $$invalidate(0, dt2);
  }
  function input1_change_input_handler() {
    lines = to_number(this.value);
    $$invalidate(1, lines);
  }
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(3, location2 = $$props2.location);
  };
  return [
    dt2,
    lines,
    sketch,
    location2,
    input0_change_input_handler,
    input1_change_input_handler
  ];
}
var ParametricEqLines = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance9, create_fragment10, safe_not_equal, {location: 3});
  }
};
var ParametricEqLines_svelte_default = ParametricEqLines;

// build/dist/beyond/Spirograph.svelte.js
function create_active_slot2(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Pause";
      attr(span, "slot", "active");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot2(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Animate";
      attr(span, "slot", "inactive");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot2(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Reset";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_fragment11(ctx) {
  let div17;
  let canvas;
  let t0;
  let div16;
  let div15;
  let div10;
  let div2;
  let p0;
  let t2;
  let p1;
  let t3;
  let div0;
  let toggle0;
  let t4;
  let div1;
  let button;
  let t5;
  let div4;
  let p2;
  let t7;
  let p3;
  let t8_value = Math.round(ctx[1]) + "";
  let t8;
  let t9;
  let input0;
  let t10;
  let div3;
  let toggle1;
  let t11;
  let div6;
  let p4;
  let t13;
  let p5_1;
  let t14_value = Math.round(ctx[0]) + "";
  let t14;
  let t15;
  let input1;
  let t16;
  let div5;
  let toggle2;
  let t17;
  let div7;
  let p6;
  let t19;
  let p7;
  let t20;
  let t21;
  let input2;
  let t22;
  let div8;
  let p8;
  let t24;
  let p9;
  let t25;
  let t26;
  let input3;
  let t27;
  let div9;
  let p10;
  let t29;
  let p11;
  let t30;
  let t31;
  let input4;
  let t32;
  let div14;
  let div11;
  let p12;
  let t34;
  let p13;
  let t35_value = Math.round(ctx[1]) + "";
  let t35;
  let t36;
  let input5;
  let t37;
  let p14;
  let t39;
  let p15;
  let t40_value = Math.round(ctx[0]) + "";
  let t40;
  let t41;
  let input6;
  let t42;
  let div12;
  let p16;
  let t44;
  let p17;
  let t45;
  let t46;
  let input7;
  let t47;
  let p18;
  let t49;
  let p19;
  let t50;
  let t51;
  let input8;
  let t52;
  let div13;
  let p20;
  let t54;
  let p21;
  let t55;
  let t56;
  let input9;
  let current;
  let mounted;
  let dispose;
  canvas = new Canvas_svelte_default({
    props: {
      height: "400",
      sketch: ctx[10]
    }
  });
  toggle0 = new Toggle_svelte_default({
    props: {
      invert: "true",
      $$slots: {
        inactive: [create_inactive_slot2],
        active: [create_active_slot2]
      },
      $$scope: {ctx}
    }
  });
  toggle0.$on("toggle", ctx[8]);
  button = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot2]},
      $$scope: {ctx}
    }
  });
  button.$on("click", ctx[9]);
  toggle1 = new Toggle_svelte_default({});
  toggle1.$on("toggle", ctx[6]);
  toggle2 = new Toggle_svelte_default({});
  toggle2.$on("toggle", ctx[7]);
  return {
    c() {
      div17 = element("div");
      create_component(canvas.$$.fragment);
      t0 = space();
      div16 = element("div");
      div15 = element("div");
      div10 = element("div");
      div2 = element("div");
      p0 = element("p");
      p0.textContent = "sketch:";
      t2 = space();
      p1 = element("p");
      t3 = space();
      div0 = element("div");
      create_component(toggle0.$$.fragment);
      t4 = space();
      div1 = element("div");
      create_component(button.$$.fragment);
      t5 = space();
      div4 = element("div");
      p2 = element("p");
      p2.textContent = "outer:";
      t7 = space();
      p3 = element("p");
      t8 = text(t8_value);
      t9 = space();
      input0 = element("input");
      t10 = space();
      div3 = element("div");
      create_component(toggle1.$$.fragment);
      t11 = space();
      div6 = element("div");
      p4 = element("p");
      p4.textContent = "inner:";
      t13 = space();
      p5_1 = element("p");
      t14 = text(t14_value);
      t15 = space();
      input1 = element("input");
      t16 = space();
      div5 = element("div");
      create_component(toggle2.$$.fragment);
      t17 = space();
      div7 = element("div");
      p6 = element("p");
      p6.textContent = "dot speed:";
      t19 = space();
      p7 = element("p");
      t20 = text(ctx[2]);
      t21 = space();
      input2 = element("input");
      t22 = space();
      div8 = element("div");
      p8 = element("p");
      p8.textContent = "rotation:";
      t24 = space();
      p9 = element("p");
      t25 = text(ctx[3]);
      t26 = space();
      input3 = element("input");
      t27 = space();
      div9 = element("div");
      p10 = element("p");
      p10.textContent = "dot:";
      t29 = space();
      p11 = element("p");
      t30 = text(ctx[4]);
      t31 = space();
      input4 = element("input");
      t32 = space();
      div14 = element("div");
      div11 = element("div");
      p12 = element("p");
      p12.textContent = "outer:";
      t34 = space();
      p13 = element("p");
      t35 = text(t35_value);
      t36 = space();
      input5 = element("input");
      t37 = space();
      p14 = element("p");
      p14.textContent = "inner:";
      t39 = space();
      p15 = element("p");
      t40 = text(t40_value);
      t41 = space();
      input6 = element("input");
      t42 = space();
      div12 = element("div");
      p16 = element("p");
      p16.textContent = "dot speed:";
      t44 = space();
      p17 = element("p");
      t45 = text(ctx[2]);
      t46 = space();
      input7 = element("input");
      t47 = space();
      p18 = element("p");
      p18.textContent = "rotation:";
      t49 = space();
      p19 = element("p");
      t50 = text(ctx[3]);
      t51 = space();
      input8 = element("input");
      t52 = space();
      div13 = element("div");
      p20 = element("p");
      p20.textContent = "dot:";
      t54 = space();
      p21 = element("p");
      t55 = text(ctx[4]);
      t56 = space();
      input9 = element("input");
      attr(p0, "class", "table-cell w-12 font-mono text-right");
      attr(p1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(div0, "class", "table-cell p-2");
      attr(div1, "class", "table-cell p-2");
      attr(div2, "class", "table-row");
      attr(p2, "class", "table-cell w-12 font-mono text-right");
      attr(p3, "class", "table-cell w-24 truncate text-xs font-mono pl-2");
      attr(input0, "class", "table-cell align-left");
      attr(input0, "type", "range");
      attr(input0, "min", "1");
      attr(input0, "max", ctx[5]);
      attr(div3, "class", "table-cell px-2");
      attr(div4, "class", "table-row");
      attr(p4, "class", "table-cell w-24 font-mono text-right");
      attr(p5_1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input1, "class", "table-cell align-left");
      attr(input1, "type", "range");
      attr(input1, "min", "1");
      attr(input1, "max", ctx[5]);
      attr(div5, "class", "table-cell px-2");
      attr(div6, "class", "table-row");
      attr(p6, "class", "flex-shirk-0 table-cell w-32 font-mono text-right");
      attr(p7, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input2, "class", "table-cell align-left");
      attr(input2, "type", "range");
      attr(input2, "min", "0.0");
      attr(input2, "max", "10");
      attr(input2, "step", "0.1");
      attr(div7, "class", "table-row");
      attr(p8, "class", "table-cell w-12 font-mono text-right");
      attr(p9, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input3, "class", "table-cell align-left");
      attr(input3, "type", "range");
      attr(input3, "min", "0.0");
      attr(input3, "max", "30.0");
      attr(input3, "step", "0.1");
      attr(div8, "class", "table-row");
      attr(p10, "class", "table-cell w-12 font-mono text-right");
      attr(p11, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input4, "class", "table-cell align-left");
      attr(input4, "type", "range");
      attr(input4, "min", "0");
      attr(input4, "max", "2.0");
      attr(input4, "step", "0.1");
      attr(div9, "class", "table-row");
      attr(div10, "class", "sm:hidden");
      attr(p12, "class", "table-cell w-12 font-mono text-right");
      attr(p13, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input5, "class", "table-cell align-left");
      attr(input5, "type", "range");
      attr(input5, "min", "1");
      attr(input5, "max", ctx[5]);
      attr(p14, "class", "table-cell w-24 font-mono text-right");
      attr(p15, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input6, "class", "table-cell align-left");
      attr(input6, "type", "range");
      attr(input6, "min", "1");
      attr(input6, "max", ctx[5]);
      attr(div11, "class", "table-row");
      attr(p16, "class", "flex-shirk-0 table-cell w-32 font-mono text-right");
      attr(p17, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input7, "class", "table-cell align-left");
      attr(input7, "type", "range");
      attr(input7, "min", "0.0");
      attr(input7, "max", "10");
      attr(input7, "step", "0.1");
      attr(p18, "class", "table-cell w-12 font-mono text-right");
      attr(p19, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input8, "class", "table-cell align-left");
      attr(input8, "type", "range");
      attr(input8, "min", "0.0");
      attr(input8, "max", "30.0");
      attr(input8, "step", "0.1");
      attr(div12, "class", "table-row");
      attr(p20, "class", "table-cell w-12 font-mono text-right");
      attr(p21, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input9, "class", "table-cell align-left");
      attr(input9, "type", "range");
      attr(input9, "min", "0");
      attr(input9, "max", "2.0");
      attr(input9, "step", "0.1");
      attr(div13, "class", "table-row");
      attr(div14, "class", "hidden sm:block");
      attr(div15, "class", "table-row-group");
      attr(div16, "class", "mt-2 table w-full");
      attr(div17, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div17, anchor);
      mount_component(canvas, div17, null);
      append(div17, t0);
      append(div17, div16);
      append(div16, div15);
      append(div15, div10);
      append(div10, div2);
      append(div2, p0);
      append(div2, t2);
      append(div2, p1);
      append(div2, t3);
      append(div2, div0);
      mount_component(toggle0, div0, null);
      append(div2, t4);
      append(div2, div1);
      mount_component(button, div1, null);
      append(div10, t5);
      append(div10, div4);
      append(div4, p2);
      append(div4, t7);
      append(div4, p3);
      append(p3, t8);
      append(div4, t9);
      append(div4, input0);
      set_input_value(input0, ctx[1]);
      append(div4, t10);
      append(div4, div3);
      mount_component(toggle1, div3, null);
      append(div10, t11);
      append(div10, div6);
      append(div6, p4);
      append(div6, t13);
      append(div6, p5_1);
      append(p5_1, t14);
      append(div6, t15);
      append(div6, input1);
      set_input_value(input1, ctx[0]);
      append(div6, t16);
      append(div6, div5);
      mount_component(toggle2, div5, null);
      append(div10, t17);
      append(div10, div7);
      append(div7, p6);
      append(div7, t19);
      append(div7, p7);
      append(p7, t20);
      append(div7, t21);
      append(div7, input2);
      set_input_value(input2, ctx[2]);
      append(div10, t22);
      append(div10, div8);
      append(div8, p8);
      append(div8, t24);
      append(div8, p9);
      append(p9, t25);
      append(div8, t26);
      append(div8, input3);
      set_input_value(input3, ctx[3]);
      append(div10, t27);
      append(div10, div9);
      append(div9, p10);
      append(div9, t29);
      append(div9, p11);
      append(p11, t30);
      append(div9, t31);
      append(div9, input4);
      set_input_value(input4, ctx[4]);
      append(div15, t32);
      append(div15, div14);
      append(div14, div11);
      append(div11, p12);
      append(div11, t34);
      append(div11, p13);
      append(p13, t35);
      append(div11, t36);
      append(div11, input5);
      set_input_value(input5, ctx[1]);
      append(div11, t37);
      append(div11, p14);
      append(div11, t39);
      append(div11, p15);
      append(p15, t40);
      append(div11, t41);
      append(div11, input6);
      set_input_value(input6, ctx[0]);
      append(div14, t42);
      append(div14, div12);
      append(div12, p16);
      append(div12, t44);
      append(div12, p17);
      append(p17, t45);
      append(div12, t46);
      append(div12, input7);
      set_input_value(input7, ctx[2]);
      append(div12, t47);
      append(div12, p18);
      append(div12, t49);
      append(div12, p19);
      append(p19, t50);
      append(div12, t51);
      append(div12, input8);
      set_input_value(input8, ctx[3]);
      append(div14, t52);
      append(div14, div13);
      append(div13, p20);
      append(div13, t54);
      append(div13, p21);
      append(p21, t55);
      append(div13, t56);
      append(div13, input9);
      set_input_value(input9, ctx[4]);
      current = true;
      if (!mounted) {
        dispose = [
          listen(input0, "change", ctx[14]),
          listen(input0, "input", ctx[14]),
          listen(input1, "change", ctx[15]),
          listen(input1, "input", ctx[15]),
          listen(input2, "change", ctx[16]),
          listen(input2, "input", ctx[16]),
          listen(input3, "change", ctx[17]),
          listen(input3, "input", ctx[17]),
          listen(input4, "change", ctx[18]),
          listen(input4, "input", ctx[18]),
          listen(input5, "change", ctx[19]),
          listen(input5, "input", ctx[19]),
          listen(input6, "change", ctx[20]),
          listen(input6, "input", ctx[20]),
          listen(input7, "change", ctx[21]),
          listen(input7, "input", ctx[21]),
          listen(input8, "change", ctx[22]),
          listen(input8, "input", ctx[22]),
          listen(input9, "change", ctx[23]),
          listen(input9, "input", ctx[23])
        ];
        mounted = true;
      }
    },
    p(ctx2, dirty) {
      const toggle0_changes = {};
      if (dirty[1] & 2) {
        toggle0_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle0.$set(toggle0_changes);
      const button_changes = {};
      if (dirty[1] & 2) {
        button_changes.$$scope = {dirty, ctx: ctx2};
      }
      button.$set(button_changes);
      if ((!current || dirty[0] & 2) && t8_value !== (t8_value = Math.round(ctx2[1]) + ""))
        set_data(t8, t8_value);
      if (!current || dirty[0] & 32) {
        attr(input0, "max", ctx2[5]);
      }
      if (dirty[0] & 2) {
        set_input_value(input0, ctx2[1]);
      }
      if ((!current || dirty[0] & 1) && t14_value !== (t14_value = Math.round(ctx2[0]) + ""))
        set_data(t14, t14_value);
      if (!current || dirty[0] & 32) {
        attr(input1, "max", ctx2[5]);
      }
      if (dirty[0] & 1) {
        set_input_value(input1, ctx2[0]);
      }
      if (!current || dirty[0] & 4)
        set_data(t20, ctx2[2]);
      if (dirty[0] & 4) {
        set_input_value(input2, ctx2[2]);
      }
      if (!current || dirty[0] & 8)
        set_data(t25, ctx2[3]);
      if (dirty[0] & 8) {
        set_input_value(input3, ctx2[3]);
      }
      if (!current || dirty[0] & 16)
        set_data(t30, ctx2[4]);
      if (dirty[0] & 16) {
        set_input_value(input4, ctx2[4]);
      }
      if ((!current || dirty[0] & 2) && t35_value !== (t35_value = Math.round(ctx2[1]) + ""))
        set_data(t35, t35_value);
      if (!current || dirty[0] & 32) {
        attr(input5, "max", ctx2[5]);
      }
      if (dirty[0] & 2) {
        set_input_value(input5, ctx2[1]);
      }
      if ((!current || dirty[0] & 1) && t40_value !== (t40_value = Math.round(ctx2[0]) + ""))
        set_data(t40, t40_value);
      if (!current || dirty[0] & 32) {
        attr(input6, "max", ctx2[5]);
      }
      if (dirty[0] & 1) {
        set_input_value(input6, ctx2[0]);
      }
      if (!current || dirty[0] & 4)
        set_data(t45, ctx2[2]);
      if (dirty[0] & 4) {
        set_input_value(input7, ctx2[2]);
      }
      if (!current || dirty[0] & 8)
        set_data(t50, ctx2[3]);
      if (dirty[0] & 8) {
        set_input_value(input8, ctx2[3]);
      }
      if (!current || dirty[0] & 16)
        set_data(t55, ctx2[4]);
      if (dirty[0] & 16) {
        set_input_value(input9, ctx2[4]);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(canvas.$$.fragment, local);
      transition_in(toggle0.$$.fragment, local);
      transition_in(button.$$.fragment, local);
      transition_in(toggle1.$$.fragment, local);
      transition_in(toggle2.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(canvas.$$.fragment, local);
      transition_out(toggle0.$$.fragment, local);
      transition_out(button.$$.fragment, local);
      transition_out(toggle1.$$.fragment, local);
      transition_out(toggle2.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div17);
      destroy_component(canvas);
      destroy_component(toggle0);
      destroy_component(button);
      destroy_component(toggle1);
      destroy_component(toggle2);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance10($$self, $$props, $$invalidate) {
  let maxSize;
  let {location: location2} = $$props;
  let innerRadius;
  let outerRadius;
  let dotSpeed = 1;
  let rotateSpeed = 1.618 * 2;
  let dot = 1;
  let width = 0;
  let height = 0;
  let p5js;
  let showOuter = true;
  const toggleOuter = () => {
    showOuter = !showOuter;
    p5js.redraw();
  };
  let showInner = true;
  const toggleInner = () => {
    showInner = !showInner;
    p5js.redraw();
  };
  let looping = true;
  const toggleLoop = () => {
    looping ? p5js.noLoop() : p5js.loop();
    looping = !looping;
  };
  let innerAngle = 0;
  let angle = 0;
  let points = [];
  let cycleCompleted = false;
  const clear = () => {
    innerAngle = 0;
    angle = 0;
    points = [];
    cycleCompleted = false;
    p5js.redraw();
  };
  const sketch = (p, el) => {
    p5js = p;
    const setup = () => {
      $$invalidate(12, width = p.width);
      $$invalidate(13, height = p.height);
      const maxRadius = Math.round(Math.min(width, height) / 2);
      $$invalidate(1, outerRadius = maxRadius * 0.75);
      $$invalidate(0, innerRadius = outerRadius / 2.5);
      p.angleMode(p.DEGREES);
    };
    p.draw = () => {
      p.background(0);
      p.translate(p.width / 2, p.height / 2);
      p.scale(1, -1);
      drawAxis();
      drawOuterCirle();
      drawInnerCirlcePath();
      const radiusRatio = innerRadius / outerRadius;
      angle = -(rotateSpeed * innerAngle % 360);
      const rotateRadius = outerRadius - innerRadius;
      const x = p.cos(angle) * rotateRadius;
      const y = p.sin(angle) * rotateRadius;
      drawInnerCirlce(x, y);
      const dotX = p.round(x + p.cos(innerAngle) * innerRadius * dot, 2);
      const dotY = p.round(y + p.sin(innerAngle) * innerRadius * dot, 2);
      if (!cycleCompleted) {
        const prev = points[points.length - 1];
        if (!prev || prev.x !== dotX || prev.y !== dotY) {
          points.push({x: dotX, y: dotY});
        }
      }
      plotPoints();
      p.stroke(20, 225, 245, 215);
      p.strokeWeight(5);
      p.noFill();
      p.ellipse(dotX, dotY, 6, 6);
      if (angle == 0 && innerAngle != 0 && innerAngle % 360 == 0) {
        innerAngle = 0;
        cycleCompleted = true;
      }
      innerAngle += dotSpeed;
    };
    const plotPoints = () => {
      p.noFill();
      p.stroke(0, 225, 145, 165);
      p.strokeWeight(2);
      p.beginShape();
      for (let pt of points) {
        p.vertex(pt.x, pt.y);
      }
      p.endShape();
    };
    function drawAxis() {
      p.strokeWeight(3);
      p.stroke(230, 0, 0, 180);
      p.line(0, 0, 0, p.height);
      p.stroke(160, 0, 0, 120);
      p.line(0, 0, 0, -p.height);
      p.stroke(0, 230, 0, 180);
      p.line(0, 0, p.width, 0);
      p.stroke(0, 160, 0, 120);
      p.line(0, 0, -p.width, 0);
      p.noStroke();
      p.fill(120, 122, 128, 180);
      p.ellipse(0, 0, 8, 8);
    }
    function drawOuterCirle() {
      if (!showOuter) {
        return;
      }
      p.noFill();
      p.stroke(122, 155, 205, 200);
      p.strokeWeight(3);
      p.ellipse(0, 0, outerRadius * 2, outerRadius * 2);
    }
    function drawInnerCirlcePath() {
      if (!showInner) {
        return;
      }
      p.noFill();
      p.strokeWeight(2);
      p.stroke(122, 100, 55, 180);
      const d = (outerRadius - innerRadius) * 2;
      p.ellipse(0, 0, d, d);
    }
    function drawInnerCirlce(x, y) {
      if (!showInner) {
        return;
      }
      p.noFill();
      p.stroke(222, 125, 105, 225);
      p.strokeWeight(2);
      p.ellipse(x, y, innerRadius * 2, innerRadius * 2);
      p.stroke(222, 125, 105, 225);
      p.strokeWeight(5);
      p.ellipse(x, y, 4, 4);
    }
    p.keyPressed = () => {
      switch (p.keyCode) {
        case 27:
          clear();
          break;
        case 32:
          toggleLoop();
          break;
        case 13:
          p.redraw();
          break;
      }
    };
    return {setup};
  };
  function input0_change_input_handler() {
    outerRadius = to_number(this.value);
    $$invalidate(1, outerRadius);
  }
  function input1_change_input_handler() {
    innerRadius = to_number(this.value);
    $$invalidate(0, innerRadius);
  }
  function input2_change_input_handler() {
    dotSpeed = to_number(this.value);
    $$invalidate(2, dotSpeed);
  }
  function input3_change_input_handler() {
    rotateSpeed = to_number(this.value);
    $$invalidate(3, rotateSpeed);
  }
  function input4_change_input_handler() {
    dot = to_number(this.value);
    $$invalidate(4, dot);
  }
  function input5_change_input_handler() {
    outerRadius = to_number(this.value);
    $$invalidate(1, outerRadius);
  }
  function input6_change_input_handler() {
    innerRadius = to_number(this.value);
    $$invalidate(0, innerRadius);
  }
  function input7_change_input_handler() {
    dotSpeed = to_number(this.value);
    $$invalidate(2, dotSpeed);
  }
  function input8_change_input_handler() {
    rotateSpeed = to_number(this.value);
    $$invalidate(3, rotateSpeed);
  }
  function input9_change_input_handler() {
    dot = to_number(this.value);
    $$invalidate(4, dot);
  }
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(11, location2 = $$props2.location);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty[0] & 12288) {
      $:
        $$invalidate(5, maxSize = Math.round(Math.min(width, height) / 2));
    }
  };
  return [
    innerRadius,
    outerRadius,
    dotSpeed,
    rotateSpeed,
    dot,
    maxSize,
    toggleOuter,
    toggleInner,
    toggleLoop,
    clear,
    sketch,
    location2,
    width,
    height,
    input0_change_input_handler,
    input1_change_input_handler,
    input2_change_input_handler,
    input3_change_input_handler,
    input4_change_input_handler,
    input5_change_input_handler,
    input6_change_input_handler,
    input7_change_input_handler,
    input8_change_input_handler,
    input9_change_input_handler
  ];
}
var Spirograph = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance10, create_fragment11, safe_not_equal, {location: 11}, [-1, -1]);
  }
};
var Spirograph_svelte_default = Spirograph;

// build/dist/math/FourierSeries.svelte.js
function create_active_slot3(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Resume";
      attr(span, "slot", "active");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot3(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Pause";
      attr(span, "slot", "inactive");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot3(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Reset";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_fragment12(ctx) {
  let div7;
  let div0;
  let canvas;
  let t0;
  let div1;
  let toggle;
  let t1;
  let button;
  let t2;
  let div6;
  let div5;
  let div2;
  let p0;
  let t4;
  let p1;
  let t5;
  let t6;
  let input0;
  let t7;
  let div3;
  let p2;
  let t9;
  let p3;
  let t10;
  let t11;
  let input1;
  let t12;
  let div4;
  let p4;
  let t14;
  let p5_1;
  let t15;
  let t16;
  let input2;
  let t17;
  let p6;
  let current;
  let mounted;
  let dispose;
  canvas = new Canvas_svelte_default({
    props: {height: "500", sketch: ctx[5]}
  });
  toggle = new Toggle_svelte_default({
    props: {
      class: "w-24",
      $$slots: {
        inactive: [create_inactive_slot3],
        active: [create_active_slot3]
      },
      $$scope: {ctx}
    }
  });
  toggle.$on("toggle", ctx[3]);
  button = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot3]},
      $$scope: {ctx}
    }
  });
  button.$on("click", ctx[4]);
  return {
    c() {
      div7 = element("div");
      div0 = element("div");
      create_component(canvas.$$.fragment);
      t0 = space();
      div1 = element("div");
      create_component(toggle.$$.fragment);
      t1 = space();
      create_component(button.$$.fragment);
      t2 = space();
      div6 = element("div");
      div5 = element("div");
      div2 = element("div");
      p0 = element("p");
      p0.textContent = "radius:";
      t4 = space();
      p1 = element("p");
      t5 = text(ctx[1]);
      t6 = space();
      input0 = element("input");
      t7 = space();
      div3 = element("div");
      p2 = element("p");
      p2.textContent = "speed:";
      t9 = space();
      p3 = element("p");
      t10 = text(ctx[0]);
      t11 = space();
      input1 = element("input");
      t12 = space();
      div4 = element("div");
      p4 = element("p");
      p4.textContent = "circles:";
      t14 = space();
      p5_1 = element("p");
      t15 = text(ctx[2]);
      t16 = space();
      input2 = element("input");
      t17 = space();
      p6 = element("p");
      p6.innerHTML = `<em>Credits:</em> Used
    <a target="_blank" href="https://www.youtube.com/watch?v=Mm2eYfj0SgA" class="text-yellow-400">Coding Train Fourier Series</a> Tutorial as a
    reference for the Fourier Series Equations`;
      attr(div0, "class", "min-w-full");
      attr(div1, "class", "flex flex-row m-4 gap-2");
      attr(p0, "class", "table-cell w-12 font-mono text-right");
      attr(p1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input0, "class", "table-cell align-left");
      attr(input0, "type", "range");
      attr(input0, "min", "10");
      attr(input0, "max", "80");
      attr(div2, "class", "table-row");
      attr(p2, "class", "table-cell w-12 font-mono text-right");
      attr(p3, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input1, "class", "table-cell align-left");
      attr(input1, "type", "range");
      attr(input1, "min", "0.01");
      attr(input1, "max", "0.1");
      attr(input1, "step", "0.001");
      attr(div3, "class", "table-row");
      attr(p4, "class", "table-cell w-12 font-mono text-right");
      attr(p5_1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input2, "class", "table-cell align-left");
      attr(input2, "type", "range");
      attr(input2, "min", "1");
      attr(input2, "max", "50");
      attr(div4, "class", "table-row");
      attr(div5, "class", "table-row-group");
      attr(div6, "class", "table w-full");
      attr(p6, "class", "bg-gray-600 text-gray-300 rounded p-2 justify-left my-2");
      attr(div7, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div7, anchor);
      append(div7, div0);
      mount_component(canvas, div0, null);
      append(div7, t0);
      append(div7, div1);
      mount_component(toggle, div1, null);
      append(div1, t1);
      mount_component(button, div1, null);
      append(div7, t2);
      append(div7, div6);
      append(div6, div5);
      append(div5, div2);
      append(div2, p0);
      append(div2, t4);
      append(div2, p1);
      append(p1, t5);
      append(div2, t6);
      append(div2, input0);
      set_input_value(input0, ctx[1]);
      append(div5, t7);
      append(div5, div3);
      append(div3, p2);
      append(div3, t9);
      append(div3, p3);
      append(p3, t10);
      append(div3, t11);
      append(div3, input1);
      set_input_value(input1, ctx[0]);
      append(div5, t12);
      append(div5, div4);
      append(div4, p4);
      append(div4, t14);
      append(div4, p5_1);
      append(p5_1, t15);
      append(div4, t16);
      append(div4, input2);
      set_input_value(input2, ctx[2]);
      append(div7, t17);
      append(div7, p6);
      current = true;
      if (!mounted) {
        dispose = [
          listen(input0, "change", ctx[7]),
          listen(input0, "input", ctx[7]),
          listen(input1, "change", ctx[8]),
          listen(input1, "input", ctx[8]),
          listen(input2, "change", ctx[9]),
          listen(input2, "input", ctx[9])
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      const toggle_changes = {};
      if (dirty & 65536) {
        toggle_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle.$set(toggle_changes);
      const button_changes = {};
      if (dirty & 65536) {
        button_changes.$$scope = {dirty, ctx: ctx2};
      }
      button.$set(button_changes);
      if (!current || dirty & 2)
        set_data(t5, ctx2[1]);
      if (dirty & 2) {
        set_input_value(input0, ctx2[1]);
      }
      if (!current || dirty & 1)
        set_data(t10, ctx2[0]);
      if (dirty & 1) {
        set_input_value(input1, ctx2[0]);
      }
      if (!current || dirty & 4)
        set_data(t15, ctx2[2]);
      if (dirty & 4) {
        set_input_value(input2, ctx2[2]);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(canvas.$$.fragment, local);
      transition_in(toggle.$$.fragment, local);
      transition_in(button.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(canvas.$$.fragment, local);
      transition_out(toggle.$$.fragment, local);
      transition_out(button.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div7);
      destroy_component(canvas);
      destroy_component(toggle);
      destroy_component(button);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance11($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let dt2 = 0.025;
  let r = 60;
  let numCircles = 25;
  let t = 0;
  let graphX = r * 2;
  let p5js;
  let looping = true;
  const toggleLoop = () => {
    looping ? p5js.noLoop() : p5js.loop();
    looping = !looping;
  };
  let graph = [];
  let trace = [];
  const reset = () => {
    t = 0;
    graphX = r * 2;
    graph = [];
    trace = [];
    p5js.redraw();
  };
  const sketch = (p, el) => {
    p5js = p;
    const setup = () => {
      p.rectMode(p.CENTER);
      looping = false;
      p.noLoop();
    };
    const onResize = () => {
    };
    const epicycle = (x, y, r2, t2, series) => {
      p.noFill();
      p.strokeWeight(p.map(series, 1, numCircles * 2 + 1, 4, 1));
      p.stroke(22, 80 + series * 15, 52 + series * 10, 220);
      const d = 2 * r2;
      p.ellipse(x, y, d, d);
      const px = p.cos(t2 * series) * r2 + x;
      const py = p.sin(t2 * series) * r2 + y;
      p.stroke(22, 120 + series * 15, 82 + series * 10, 230);
      p.fill(22, 120 + series * 15, 82 + series * 10, 230);
      p.line(x, y, px, py);
      p.ellipse(px, py, 2, 2);
      return [px, py];
    };
    graphX = r * 2;
    p.draw = () => {
      p.background(0);
      t += dt2;
      let cx = r * 3.5;
      let cy = p.height / 2;
      for (let i = 0; i < numCircles; i++) {
        const series = i * 2 + 1;
        const cr = 4 * r / (series * p.PI);
        [cx, cy] = epicycle(cx, cy, cr, t, series);
        graphX = p.max(cx + 50, graphX);
      }
      if (t < p.TWO_PI * 1.05) {
        trace.push({x: cx, y: cy});
      }
      p.noFill();
      p.strokeWeight(2);
      p.stroke(122, 180, 220, 120);
      p.beginShape();
      for (const pt of trace) {
        p.vertex(pt.x, pt.y);
      }
      p.endShape();
      const lastY = graphX[0];
      if (lastY != p.round(cy)) {
        graph.unshift(p.round(cy));
        if (graph.length > p.width * 1.5) {
          graph = graph.slice(0, p.width - graphX);
        }
      }
      p.line(cx, cy, graphX, graph[0]);
      p.stroke(22, 120 + numCircles * 22, 82 + numCircles * 12);
      p.fill(22, 120 + numCircles * 22, 82 + numCircles * 12);
      p.ellipse(graphX, graph[0], 4, 4);
      p.strokeWeight(2);
      p.stroke(22, 120 + numCircles * 13, 82 + numCircles * 8);
      p.noFill();
      p.beginShape();
      for (let i = 0; i <= graph.length; i++) {
        p.vertex(graphX + i, graph[i]);
      }
      p.endShape();
    };
    p.keyPressed = () => {
      switch (p.keyCode) {
        case 32:
          toggleLoop();
          break;
        case 13:
          p.redraw();
          break;
      }
    };
    return {setup, onResize};
  };
  function input0_change_input_handler() {
    r = to_number(this.value);
    $$invalidate(1, r);
  }
  function input1_change_input_handler() {
    dt2 = to_number(this.value);
    $$invalidate(0, dt2);
  }
  function input2_change_input_handler() {
    numCircles = to_number(this.value);
    $$invalidate(2, numCircles);
  }
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(6, location2 = $$props2.location);
  };
  return [
    dt2,
    r,
    numCircles,
    toggleLoop,
    reset,
    sketch,
    location2,
    input0_change_input_handler,
    input1_change_input_handler,
    input2_change_input_handler
  ];
}
var FourierSeries = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance11, create_fragment12, safe_not_equal, {location: 6});
  }
};
var FourierSeries_svelte_default = FourierSeries;

// build/dist/math/FourierTransform.svelte.js
function create_active_slot4(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Resume";
      attr(span, "slot", "active");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot4(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Pause";
      attr(span, "slot", "inactive");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot4(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Reset";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_fragment13(ctx) {
  let div7;
  let div0;
  let canvas;
  let t0;
  let div1;
  let toggle;
  let t1;
  let button;
  let t2;
  let div6;
  let div5;
  let div2;
  let p0;
  let t4;
  let p1;
  let t5;
  let t6;
  let input0;
  let t7;
  let div3;
  let p2;
  let t9;
  let p3;
  let t10;
  let t11;
  let input1;
  let t12;
  let div4;
  let p4;
  let t14;
  let p5_1;
  let t15;
  let t16;
  let input2;
  let t17;
  let p6;
  let current;
  let mounted;
  let dispose;
  canvas = new Canvas_svelte_default({
    props: {height: "500", sketch: ctx[5]}
  });
  toggle = new Toggle_svelte_default({
    props: {
      class: "w-24",
      $$slots: {
        inactive: [create_inactive_slot4],
        active: [create_active_slot4]
      },
      $$scope: {ctx}
    }
  });
  toggle.$on("toggle", ctx[3]);
  button = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot4]},
      $$scope: {ctx}
    }
  });
  button.$on("click", ctx[4]);
  return {
    c() {
      div7 = element("div");
      div0 = element("div");
      create_component(canvas.$$.fragment);
      t0 = space();
      div1 = element("div");
      create_component(toggle.$$.fragment);
      t1 = space();
      create_component(button.$$.fragment);
      t2 = space();
      div6 = element("div");
      div5 = element("div");
      div2 = element("div");
      p0 = element("p");
      p0.textContent = "radius:";
      t4 = space();
      p1 = element("p");
      t5 = text(ctx[1]);
      t6 = space();
      input0 = element("input");
      t7 = space();
      div3 = element("div");
      p2 = element("p");
      p2.textContent = "speed:";
      t9 = space();
      p3 = element("p");
      t10 = text(ctx[0]);
      t11 = space();
      input1 = element("input");
      t12 = space();
      div4 = element("div");
      p4 = element("p");
      p4.textContent = "iterations:";
      t14 = space();
      p5_1 = element("p");
      t15 = text(ctx[2]);
      t16 = space();
      input2 = element("input");
      t17 = space();
      p6 = element("p");
      p6.innerHTML = `<em>Credits:</em> Used
    <a target="_blank" href="https://www.youtube.com/watch?v=Mm2eYfj0SgA" class="text-yellow-400">Coding Train Fourier Series</a> Tutorial as a
    reference for the Fourier Series Equations`;
      attr(div0, "class", "min-w-full");
      attr(div1, "class", "flex flex-row m-4 gap-2");
      attr(p0, "class", "table-cell w-12 font-mono text-right");
      attr(p1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input0, "class", "table-cell align-left");
      attr(input0, "type", "range");
      attr(input0, "min", "10");
      attr(input0, "max", "80");
      attr(div2, "class", "table-row");
      attr(p2, "class", "table-cell w-12 font-mono text-right");
      attr(p3, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input1, "class", "table-cell align-left");
      attr(input1, "type", "range");
      attr(input1, "min", "0.01");
      attr(input1, "max", "0.1");
      attr(input1, "step", "0.001");
      attr(div3, "class", "table-row");
      attr(p4, "class", "table-cell w-12 font-mono text-right");
      attr(p5_1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input2, "class", "table-cell align-left");
      attr(input2, "type", "range");
      attr(input2, "min", "1");
      attr(input2, "max", "10");
      attr(div4, "class", "table-row");
      attr(div5, "class", "table-row-group");
      attr(div6, "class", "table w-full");
      attr(p6, "class", "bg-gray-600 text-gray-300 rounded p-2 justify-left my-2");
      attr(div7, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div7, anchor);
      append(div7, div0);
      mount_component(canvas, div0, null);
      append(div7, t0);
      append(div7, div1);
      mount_component(toggle, div1, null);
      append(div1, t1);
      mount_component(button, div1, null);
      append(div7, t2);
      append(div7, div6);
      append(div6, div5);
      append(div5, div2);
      append(div2, p0);
      append(div2, t4);
      append(div2, p1);
      append(p1, t5);
      append(div2, t6);
      append(div2, input0);
      set_input_value(input0, ctx[1]);
      append(div5, t7);
      append(div5, div3);
      append(div3, p2);
      append(div3, t9);
      append(div3, p3);
      append(p3, t10);
      append(div3, t11);
      append(div3, input1);
      set_input_value(input1, ctx[0]);
      append(div5, t12);
      append(div5, div4);
      append(div4, p4);
      append(div4, t14);
      append(div4, p5_1);
      append(p5_1, t15);
      append(div4, t16);
      append(div4, input2);
      set_input_value(input2, ctx[2]);
      append(div7, t17);
      append(div7, p6);
      current = true;
      if (!mounted) {
        dispose = [
          listen(input0, "change", ctx[7]),
          listen(input0, "input", ctx[7]),
          listen(input1, "change", ctx[8]),
          listen(input1, "input", ctx[8]),
          listen(input2, "change", ctx[9]),
          listen(input2, "input", ctx[9])
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      const toggle_changes = {};
      if (dirty & 32768) {
        toggle_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle.$set(toggle_changes);
      const button_changes = {};
      if (dirty & 32768) {
        button_changes.$$scope = {dirty, ctx: ctx2};
      }
      button.$set(button_changes);
      if (!current || dirty & 2)
        set_data(t5, ctx2[1]);
      if (dirty & 2) {
        set_input_value(input0, ctx2[1]);
      }
      if (!current || dirty & 1)
        set_data(t10, ctx2[0]);
      if (dirty & 1) {
        set_input_value(input1, ctx2[0]);
      }
      if (!current || dirty & 4)
        set_data(t15, ctx2[2]);
      if (dirty & 4) {
        set_input_value(input2, ctx2[2]);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(canvas.$$.fragment, local);
      transition_in(toggle.$$.fragment, local);
      transition_in(button.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(canvas.$$.fragment, local);
      transition_out(toggle.$$.fragment, local);
      transition_out(button.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div7);
      destroy_component(canvas);
      destroy_component(toggle);
      destroy_component(button);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance12($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let dt2 = 0.025;
  let r = 60;
  let n = 4;
  let t = 0;
  let p5js;
  let looping = true;
  const toggleLoop = () => {
    looping ? p5js.noLoop() : p5js.loop();
    looping = !looping;
  };
  let graph = [];
  let trace = [];
  const reset = () => {
    t = 0;
    graph = [];
    trace = [];
    p5js.redraw();
  };
  const sketch = (p, el) => {
    p5js = p;
    const setup = () => {
      p.rectMode(p.CENTER);
      looping = false;
      p.noLoop();
    };
    const onResize = () => {
    };
    const update2 = () => {
      t += dt2;
    };
    const circle = (cx, cy, r2, t2, series) => {
      p.noFill();
      p.strokeWeight(p.map(series, 1, n * 2 + 1, 4, 1));
      p.stroke(22, 80 + series * 15, 52 + series * 10, 180);
      const d = 2 * r2;
      p.ellipse(cx, cy, d, d);
      const x = p.cos(t2 * series) * r2 + cx;
      const y = p.sin(t2 * series) * r2 + cy;
      p.stroke(22, 120 + series * 15, 82 + series * 10, 230);
      p.fill(22, 120 + series * 15, 82 + series * 10, 230);
      p.line(cx, cy, x, y);
      p.ellipse(x, y, 2, 2);
      return [x, y];
    };
    let graphX = r * n / 2;
    p.draw = () => {
      p.background(0);
      update2();
      p.noFill();
      p.strokeWeight(2);
      let cx = r * 3;
      let cy = p.height / 2;
      for (let i = 0; i < n; i++) {
        const series = i * 2 + 1;
        const cr = 4 / (series * p.PI) * r;
        [cx, cy] = circle(cx, cy, cr, t, series);
        graphX = p.max(cx, graphX);
      }
      if (t <= p.TWO_PI * 1.2) {
        trace.push({x: cx, y: cy});
      }
      p.noFill();
      p.strokeWeight(2);
      p.stroke(122, 180, 220, 120);
      p.beginShape();
      for (const pt of trace) {
        p.vertex(pt.x, pt.y);
      }
      p.endShape();
      const lastY = graphX[0];
      if (lastY != p.round(cy)) {
        graph.unshift(p.round(cy));
        if (graph.length > p.width * 1.5) {
          graph = graph.slice(0, p.width - graphX);
        }
      }
      p.line(cx, cy, graphX + 50, graph[0]);
      p.ellipse(graphX + 50, graph[0], 2, 2);
      p.strokeWeight(3);
      p.stroke(22, 120 + n * 15, 82 + n * 10);
      p.beginShape();
      for (let i = 0; i <= graph.length; i++) {
        p.vertex(graphX + 50 + i, graph[i]);
      }
      p.endShape();
    };
    p.keyPressed = () => {
      switch (p.keyCode) {
        case 32:
          toggleLoop();
          break;
        case 13:
          p.redraw();
          break;
      }
    };
    return {setup, onResize};
  };
  function input0_change_input_handler() {
    r = to_number(this.value);
    $$invalidate(1, r);
  }
  function input1_change_input_handler() {
    dt2 = to_number(this.value);
    $$invalidate(0, dt2);
  }
  function input2_change_input_handler() {
    n = to_number(this.value);
    $$invalidate(2, n);
  }
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(6, location2 = $$props2.location);
  };
  return [
    dt2,
    r,
    n,
    toggleLoop,
    reset,
    sketch,
    location2,
    input0_change_input_handler,
    input1_change_input_handler,
    input2_change_input_handler
  ];
}
var FourierTransform = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance12, create_fragment13, safe_not_equal, {location: 6});
  }
};
var FourierTransform_svelte_default = FourierTransform;

// build/dist/ui-demo/Buttons.svelte.js
function create_contents_slot_7(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Button";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_6(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Button expands to size of Text";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_52(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Text";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_42(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Text";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_32(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "A large Button";
      attr(span, "slot", "contents");
      attr(span, "class", "font-bold text-4xl");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_22(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "small";
      attr(span, "slot", "contents");
      attr(span, "class", "text-sm");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_12(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Button with Text";
      attr(span, "slot", "contents");
      attr(span, "class", "text-white font-bold");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot5(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "small";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_fragment14(ctx) {
  let div4;
  let div0;
  let button0;
  let t0;
  let button1;
  let t1;
  let button2;
  let t2;
  let div1;
  let button3;
  let t3;
  let button4;
  let t4;
  let button5;
  let t5;
  let button6;
  let t6;
  let div2;
  let button7;
  let t7;
  let button8;
  let t8;
  let button9;
  let t9;
  let div3;
  let button10;
  let t10;
  let button11;
  let t11;
  let button12;
  let current;
  button0 = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot_7]},
      $$scope: {ctx}
    }
  });
  button1 = new Button_svelte_default({});
  button2 = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot_6]},
      $$scope: {ctx}
    }
  });
  button3 = new Button_svelte_default({props: {enabled: false}});
  button4 = new Button_svelte_default({});
  button5 = new Button_svelte_default({
    props: {
      enabled: false,
      $$slots: {contents: [create_contents_slot_52]},
      $$scope: {ctx}
    }
  });
  button6 = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot_42]},
      $$scope: {ctx}
    }
  });
  button7 = new Button_svelte_default({});
  button8 = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot_32]},
      $$scope: {ctx}
    }
  });
  button9 = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot_22]},
      $$scope: {ctx}
    }
  });
  button10 = new Button_svelte_default({props: {enabledClass: "bg-red-700"}});
  button11 = new Button_svelte_default({
    props: {
      enabledClass: "bg-yellow-600",
      $$slots: {contents: [create_contents_slot_12]},
      $$scope: {ctx}
    }
  });
  button12 = new Button_svelte_default({
    props: {
      $$slots: {contents: [create_contents_slot5]},
      $$scope: {ctx}
    }
  });
  return {
    c() {
      div4 = element("div");
      div0 = element("div");
      create_component(button0.$$.fragment);
      t0 = space();
      create_component(button1.$$.fragment);
      t1 = space();
      create_component(button2.$$.fragment);
      t2 = space();
      div1 = element("div");
      create_component(button3.$$.fragment);
      t3 = space();
      create_component(button4.$$.fragment);
      t4 = space();
      create_component(button5.$$.fragment);
      t5 = space();
      create_component(button6.$$.fragment);
      t6 = space();
      div2 = element("div");
      create_component(button7.$$.fragment);
      t7 = space();
      create_component(button8.$$.fragment);
      t8 = space();
      create_component(button9.$$.fragment);
      t9 = space();
      div3 = element("div");
      create_component(button10.$$.fragment);
      t10 = space();
      create_component(button11.$$.fragment);
      t11 = space();
      create_component(button12.$$.fragment);
      attr(div0, "class", "flex gap-4 bg-yellow-200 items-center space-x-2");
      attr(div1, "class", "flex gap-4 bg-gray-200 items-center space-x-2");
      attr(div2, "class", "flex flex-row items-center gap-2 bg-red-200 p-2 space-x-2");
      attr(div3, "class", "flex flex-row gap-2 bg-blue-400 p-2 space-x-2");
      attr(div4, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div4, anchor);
      append(div4, div0);
      mount_component(button0, div0, null);
      append(div0, t0);
      mount_component(button1, div0, null);
      append(div0, t1);
      mount_component(button2, div0, null);
      append(div4, t2);
      append(div4, div1);
      mount_component(button3, div1, null);
      append(div1, t3);
      mount_component(button4, div1, null);
      append(div1, t4);
      mount_component(button5, div1, null);
      append(div1, t5);
      mount_component(button6, div1, null);
      append(div4, t6);
      append(div4, div2);
      mount_component(button7, div2, null);
      append(div2, t7);
      mount_component(button8, div2, null);
      append(div2, t8);
      mount_component(button9, div2, null);
      append(div4, t9);
      append(div4, div3);
      mount_component(button10, div3, null);
      append(div3, t10);
      mount_component(button11, div3, null);
      append(div3, t11);
      mount_component(button12, div3, null);
      current = true;
    },
    p(ctx2, [dirty]) {
      const button0_changes = {};
      if (dirty & 2) {
        button0_changes.$$scope = {dirty, ctx: ctx2};
      }
      button0.$set(button0_changes);
      const button2_changes = {};
      if (dirty & 2) {
        button2_changes.$$scope = {dirty, ctx: ctx2};
      }
      button2.$set(button2_changes);
      const button5_changes = {};
      if (dirty & 2) {
        button5_changes.$$scope = {dirty, ctx: ctx2};
      }
      button5.$set(button5_changes);
      const button6_changes = {};
      if (dirty & 2) {
        button6_changes.$$scope = {dirty, ctx: ctx2};
      }
      button6.$set(button6_changes);
      const button8_changes = {};
      if (dirty & 2) {
        button8_changes.$$scope = {dirty, ctx: ctx2};
      }
      button8.$set(button8_changes);
      const button9_changes = {};
      if (dirty & 2) {
        button9_changes.$$scope = {dirty, ctx: ctx2};
      }
      button9.$set(button9_changes);
      const button11_changes = {};
      if (dirty & 2) {
        button11_changes.$$scope = {dirty, ctx: ctx2};
      }
      button11.$set(button11_changes);
      const button12_changes = {};
      if (dirty & 2) {
        button12_changes.$$scope = {dirty, ctx: ctx2};
      }
      button12.$set(button12_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      transition_in(button3.$$.fragment, local);
      transition_in(button4.$$.fragment, local);
      transition_in(button5.$$.fragment, local);
      transition_in(button6.$$.fragment, local);
      transition_in(button7.$$.fragment, local);
      transition_in(button8.$$.fragment, local);
      transition_in(button9.$$.fragment, local);
      transition_in(button10.$$.fragment, local);
      transition_in(button11.$$.fragment, local);
      transition_in(button12.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      transition_out(button3.$$.fragment, local);
      transition_out(button4.$$.fragment, local);
      transition_out(button5.$$.fragment, local);
      transition_out(button6.$$.fragment, local);
      transition_out(button7.$$.fragment, local);
      transition_out(button8.$$.fragment, local);
      transition_out(button9.$$.fragment, local);
      transition_out(button10.$$.fragment, local);
      transition_out(button11.$$.fragment, local);
      transition_out(button12.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div4);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      destroy_component(button3);
      destroy_component(button4);
      destroy_component(button5);
      destroy_component(button6);
      destroy_component(button7);
      destroy_component(button8);
      destroy_component(button9);
      destroy_component(button10);
      destroy_component(button11);
      destroy_component(button12);
    }
  };
}
function instance13($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(0, location2 = $$props2.location);
  };
  return [location2];
}
var Buttons = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance13, create_fragment14, safe_not_equal, {location: 0});
  }
};
var Buttons_svelte_default = Buttons;

// build/dist/ui-demo/Toggles.svelte.js
function create_active_slot_3(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Active";
      attr(span, "slot", "active");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot_3(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Inactive";
      attr(span, "slot", "inactive");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_active_slot_2(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Active";
      attr(span, "slot", "active");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot_2(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Inactive";
      attr(span, "slot", "inactive");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_active_slot_1(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Active";
      attr(span, "slot", "active");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot_1(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Inactive";
      attr(span, "slot", "inactive");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_active_slot5(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Active";
      attr(span, "slot", "active");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_inactive_slot5(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Inactive";
      attr(span, "slot", "inactive");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_fragment15(ctx) {
  let div2;
  let div0;
  let toggle0;
  let t0;
  let toggle1;
  let t1;
  let toggle2;
  let t2;
  let div1;
  let toggle3;
  let t3;
  let toggle4;
  let t4;
  let toggle5;
  let current;
  toggle0 = new Toggle_svelte_default({
    props: {
      $$slots: {
        inactive: [create_inactive_slot_3],
        active: [create_active_slot_3]
      },
      $$scope: {ctx}
    }
  });
  toggle1 = new Toggle_svelte_default({});
  toggle2 = new Toggle_svelte_default({
    props: {
      class: "w-32",
      $$slots: {
        inactive: [create_inactive_slot_2],
        active: [create_active_slot_2]
      },
      $$scope: {ctx}
    }
  });
  toggle3 = new Toggle_svelte_default({
    props: {
      invert: "true",
      $$slots: {
        inactive: [create_inactive_slot_1],
        active: [create_active_slot_1]
      },
      $$scope: {ctx}
    }
  });
  toggle4 = new Toggle_svelte_default({props: {invert: "true"}});
  toggle5 = new Toggle_svelte_default({
    props: {
      class: "w-32",
      invert: "true",
      $$slots: {
        inactive: [create_inactive_slot5],
        active: [create_active_slot5]
      },
      $$scope: {ctx}
    }
  });
  return {
    c() {
      div2 = element("div");
      div0 = element("div");
      create_component(toggle0.$$.fragment);
      t0 = space();
      create_component(toggle1.$$.fragment);
      t1 = space();
      create_component(toggle2.$$.fragment);
      t2 = space();
      div1 = element("div");
      create_component(toggle3.$$.fragment);
      t3 = space();
      create_component(toggle4.$$.fragment);
      t4 = space();
      create_component(toggle5.$$.fragment);
      attr(div0, "class", "flex gap-4 bg-yellow-200 items-center");
      attr(div1, "class", "flex p-2  gap-4 bg-green-400 items-center");
      attr(div2, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div2, anchor);
      append(div2, div0);
      mount_component(toggle0, div0, null);
      append(div0, t0);
      mount_component(toggle1, div0, null);
      append(div0, t1);
      mount_component(toggle2, div0, null);
      append(div2, t2);
      append(div2, div1);
      mount_component(toggle3, div1, null);
      append(div1, t3);
      mount_component(toggle4, div1, null);
      append(div1, t4);
      mount_component(toggle5, div1, null);
      current = true;
    },
    p(ctx2, [dirty]) {
      const toggle0_changes = {};
      if (dirty & 1) {
        toggle0_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle0.$set(toggle0_changes);
      const toggle2_changes = {};
      if (dirty & 1) {
        toggle2_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle2.$set(toggle2_changes);
      const toggle3_changes = {};
      if (dirty & 1) {
        toggle3_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle3.$set(toggle3_changes);
      const toggle5_changes = {};
      if (dirty & 1) {
        toggle5_changes.$$scope = {dirty, ctx: ctx2};
      }
      toggle5.$set(toggle5_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(toggle0.$$.fragment, local);
      transition_in(toggle1.$$.fragment, local);
      transition_in(toggle2.$$.fragment, local);
      transition_in(toggle3.$$.fragment, local);
      transition_in(toggle4.$$.fragment, local);
      transition_in(toggle5.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(toggle0.$$.fragment, local);
      transition_out(toggle1.$$.fragment, local);
      transition_out(toggle2.$$.fragment, local);
      transition_out(toggle3.$$.fragment, local);
      transition_out(toggle4.$$.fragment, local);
      transition_out(toggle5.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div2);
      destroy_component(toggle0);
      destroy_component(toggle1);
      destroy_component(toggle2);
      destroy_component(toggle3);
      destroy_component(toggle4);
      destroy_component(toggle5);
    }
  };
}
var Toggles = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, null, create_fragment15, safe_not_equal, {});
  }
};
var Toggles_svelte_default = Toggles;

// build/dist/ui/IndexTable.svelte.js
function get_each_context2(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[5] = list[i];
  return child_ctx;
}
function create_default_slot_1(ctx) {
  let div2;
  let div1;
  let div0;
  let t_value = ctx[5].summary + "";
  let t;
  return {
    c() {
      div2 = element("div");
      div1 = element("div");
      div0 = element("div");
      t = text(t_value);
      attr(div0, "class", "contents text-md font-medium text-blue-900");
      attr(div1, "class", "ml-2");
      attr(div2, "class", "flex items-center");
    },
    m(target, anchor) {
      insert(target, div2, anchor);
      append(div2, div1);
      append(div1, div0);
      append(div0, t);
    },
    p(ctx2, dirty) {
      if (dirty & 2 && t_value !== (t_value = ctx2[5].summary + ""))
        set_data(t, t_value);
    },
    d(detaching) {
      if (detaching)
        detach(div2);
    }
  };
}
function create_default_slot2(ctx) {
  let div;
  let t_value = ctx[5].description + "";
  let t;
  return {
    c() {
      div = element("div");
      t = text(t_value);
      attr(div, "class", "text-sm text-gray-900");
    },
    m(target, anchor) {
      insert(target, div, anchor);
      append(div, t);
    },
    p(ctx2, dirty) {
      if (dirty & 2 && t_value !== (t_value = ctx2[5].description + ""))
        set_data(t, t_value);
    },
    d(detaching) {
      if (detaching)
        detach(div);
    }
  };
}
function create_each_block2(ctx) {
  let tr;
  let td0;
  let link0;
  let t0;
  let td1;
  let link1;
  let t1;
  let current;
  link0 = new Link({
    props: {
      to: ctx[5].link,
      $$slots: {default: [create_default_slot_1]},
      $$scope: {ctx}
    }
  });
  link1 = new Link({
    props: {
      to: ctx[5].link,
      $$slots: {default: [create_default_slot2]},
      $$scope: {ctx}
    }
  });
  return {
    c() {
      tr = element("tr");
      td0 = element("td");
      create_component(link0.$$.fragment);
      t0 = space();
      td1 = element("td");
      create_component(link1.$$.fragment);
      t1 = space();
      attr(td0, "class", "px-2 py-2 sm:px-6 sm:py-2 sm:whitespace-nowrap");
      attr(td1, "class", "px-6 py-3 sm:whitespace-nowrap");
      attr(tr, "class", "hover:bg-blue-300 ease-in transition duration-300 bg-white");
    },
    m(target, anchor) {
      insert(target, tr, anchor);
      append(tr, td0);
      mount_component(link0, td0, null);
      append(tr, t0);
      append(tr, td1);
      mount_component(link1, td1, null);
      append(tr, t1);
      current = true;
    },
    p(ctx2, dirty) {
      const link0_changes = {};
      if (dirty & 2)
        link0_changes.to = ctx2[5].link;
      if (dirty & 258) {
        link0_changes.$$scope = {dirty, ctx: ctx2};
      }
      link0.$set(link0_changes);
      const link1_changes = {};
      if (dirty & 2)
        link1_changes.to = ctx2[5].link;
      if (dirty & 258) {
        link1_changes.$$scope = {dirty, ctx: ctx2};
      }
      link1.$set(link1_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(link0.$$.fragment, local);
      transition_in(link1.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(link0.$$.fragment, local);
      transition_out(link1.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(tr);
      destroy_component(link0);
      destroy_component(link1);
    }
  };
}
function create_fragment16(ctx) {
  let div1;
  let span;
  let t0;
  let div0;
  let input;
  let t1;
  let div4;
  let div3;
  let div2;
  let table;
  let thead;
  let t5;
  let tbody;
  let current;
  let mounted;
  let dispose;
  let each_value = ctx[1];
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block2(get_each_context2(ctx, each_value, i));
  }
  const out = (i) => transition_out(each_blocks[i], 1, 1, () => {
    each_blocks[i] = null;
  });
  return {
    c() {
      div1 = element("div");
      span = element("span");
      span.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>`;
      t0 = space();
      div0 = element("div");
      input = element("input");
      t1 = space();
      div4 = element("div");
      div3 = element("div");
      div2 = element("div");
      table = element("table");
      thead = element("thead");
      thead.innerHTML = `<tr><th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">entry</th> 
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Description</th></tr>`;
      t5 = space();
      tbody = element("tbody");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr(span, "class", "absolute w-auto p-2 flex items-center text-gray-600 ");
      attr(input, "class", "min-w-full py-2 text-sm\n      bg-gray-200 border-b-2 border-gray-400\n      text-white bg-gray-100 pl-12\n      focus:outline-none focus:bg-gray-100 focus:text-gray-800\n      focus:border-gray-500\n      ");
      attr(input, "type", "text");
      attr(div0, "class", "flex-grow");
      attr(div1, "class", "pt-2 flex flex-row relative ");
      attr(thead, "class", "bg-gray-700 text-gray-200");
      attr(tbody, "class", "bg-gray-200 divide-y-2 divide-gray-300");
      attr(table, "class", "min-w-full divide-y divide-gray-300");
      attr(div2, "class", "shadow overflow-hidden border-b border-gray-200 sm:rounded-lg");
      attr(div3, "class", "py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8");
      attr(div4, "class", "mx-1 overflow-x-auto sm:-mx-6 lg:-mx-8");
    },
    m(target, anchor) {
      insert(target, div1, anchor);
      append(div1, span);
      append(div1, t0);
      append(div1, div0);
      append(div0, input);
      set_input_value(input, ctx[0]);
      insert(target, t1, anchor);
      insert(target, div4, anchor);
      append(div4, div3);
      append(div3, div2);
      append(div2, table);
      append(table, thead);
      append(table, t5);
      append(table, tbody);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(tbody, null);
      }
      current = true;
      if (!mounted) {
        dispose = [
          listen(input, "input", ctx[4]),
          listen(input, "input", ctx[2])
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if (dirty & 1 && input.value !== ctx2[0]) {
        set_input_value(input, ctx2[0]);
      }
      if (dirty & 2) {
        each_value = ctx2[1];
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context2(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
            transition_in(each_blocks[i], 1);
          } else {
            each_blocks[i] = create_each_block2(child_ctx);
            each_blocks[i].c();
            transition_in(each_blocks[i], 1);
            each_blocks[i].m(tbody, null);
          }
        }
        group_outros();
        for (i = each_value.length; i < each_blocks.length; i += 1) {
          out(i);
        }
        check_outros();
      }
    },
    i(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div1);
      if (detaching)
        detach(t1);
      if (detaching)
        detach(div4);
      destroy_each(each_blocks, detaching);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance14($$self, $$props, $$invalidate) {
  let {entries = []} = $$props;
  let search = "";
  let filtered = entries;
  const filter = () => {
    const txt = search.trim().toLowerCase();
    if (txt == "") {
      $$invalidate(1, filtered = entries);
      return;
    }
    $$invalidate(1, filtered = entries.filter((x) => x.summary.toLowerCase().includes(txt) || x.description.toLowerCase().includes(txt)));
  };
  function input_input_handler() {
    search = this.value;
    $$invalidate(0, search);
  }
  $$self.$$set = ($$props2) => {
    if ("entries" in $$props2)
      $$invalidate(3, entries = $$props2.entries);
  };
  return [search, filtered, filter, entries, input_input_handler];
}
var IndexTable = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance14, create_fragment16, safe_not_equal, {entries: 3});
  }
};
var IndexTable_svelte_default = IndexTable;

// build/dist/svelte/LinksTable.svelte.js
function create_fragment17(ctx) {
  let indextable;
  let current;
  indextable = new IndexTable_svelte_default({props: {entries: ctx[0]}});
  return {
    c() {
      create_component(indextable.$$.fragment);
    },
    m(target, anchor) {
      mount_component(indextable, target, anchor);
      current = true;
    },
    p: noop,
    i(local) {
      if (current)
        return;
      transition_in(indextable.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(indextable.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(indextable, detaching);
    }
  };
}
function instance15($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let entries = [
    {
      link: "store/timer",
      summary: "Custom Svelte Store for Timer",
      description: "Tryout setInterval on store"
    },
    {
      link: "p5/2D",
      summary: "p5js 2D Demo",
      description: "A simple 2D Demo to test svelte integration with p5.js"
    },
    {
      link: "p5/3D",
      summary: "3D Demo",
      description: "Test 3D WebGL Rendering"
    },
    {
      link: "timer",
      summary: "Timer without Store",
      description: "Tryout setInterval w/o store"
    }
  ];
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(1, location2 = $$props2.location);
  };
  return [entries, location2];
}
var LinksTable = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance15, create_fragment17, safe_not_equal, {location: 1});
  }
};
var LinksTable_svelte_default = LinksTable;

// build/dist/svelte/store/timer/store.js
var time = writable(0);
var newTimer = () => {
  const {subscribe: subscribe2, set, update: update2} = writable(0);
  let timer2 = null;
  let startedAt;
  let lapStart;
  let elapsed = 0;
  let oldElapsed = 0;
  const init2 = () => {
    timer2 = null;
    startedAt = void 0;
    lapStart = 0;
    elapsed = 0;
    oldElapsed = 0;
    set(elapsed);
  };
  const setElapsed = (x) => {
    oldElapsed = x;
    elapsed = x;
    startedAt = Date.now() - x;
    set(x);
  };
  const start = () => {
    if (timer2) {
      console.warn("calling start on already started timer");
      return;
    }
    console.log("before start", {startedAt, lapStart, oldElapsed, elapsed});
    startedAt || (startedAt = new Date());
    lapStart = Date.now();
    oldElapsed = elapsed;
    console.log("start", {startedAt, lapStart, oldElapsed, elapsed});
    timer2 = setInterval(() => {
      elapsed = Date.now() - lapStart + oldElapsed;
      console.log(" ... setting elapsed", timer2, elapsed);
      set(elapsed);
    }, 40);
    console.log("started", {startedAt, lapStart, oldElapsed, elapsed, timer: timer2});
  };
  const stop = () => {
    if (!timer2) {
      console.warn("trying to pause when timer isn't running");
      return;
    }
    clearInterval(timer2);
    timer2 = null;
  };
  const reset = () => {
    stop();
    init2();
    console.log("reset", {startedAt, lapStart, oldElapsed, elapsed, timer: timer2});
  };
  return {
    subscribe: subscribe2,
    start,
    stop,
    reset,
    setElapsed
  };
};
var timer = newTimer();

// build/dist/svelte/store/timer/Timer.svelte.js
function create_contents_slot_33(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Start";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_23(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Pause";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_13(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Reset";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot6(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "set";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_fragment18(ctx) {
  let div3;
  let p;
  let t1;
  let div0;
  let t2_value = formatTime(ctx[1]) + "";
  let t2;
  let t3;
  let t4;
  let t5;
  let t6;
  let div1;
  let button0;
  let t7;
  let button1;
  let t8;
  let button2;
  let t9;
  let div2;
  let input;
  let t10;
  let button3;
  let current;
  let mounted;
  let dispose;
  button0 = new Button_svelte_default({
    props: {
      class: "w-24",
      $$slots: {contents: [create_contents_slot_33]},
      $$scope: {ctx}
    }
  });
  button0.$on("click", timer.start);
  button1 = new Button_svelte_default({
    props: {
      enabledClass: "bg-yellow-400",
      $$slots: {contents: [create_contents_slot_23]},
      $$scope: {ctx}
    }
  });
  button1.$on("click", timer.stop);
  button2 = new Button_svelte_default({
    props: {
      enabledClass: "bg-red-400",
      $$slots: {contents: [create_contents_slot_13]},
      $$scope: {ctx}
    }
  });
  button2.$on("click", timer.reset);
  button3 = new Button_svelte_default({
    props: {
      enabledClass: "bg-yellow-800",
      $$slots: {contents: [create_contents_slot6]},
      $$scope: {ctx}
    }
  });
  button3.$on("click", ctx[2]);
  return {
    c() {
      div3 = element("div");
      p = element("p");
      p.textContent = "A test for using store to set and reset a timer.\n    store.ts contains all the logic and this ui is only a representation of\n    the store";
      t1 = space();
      div0 = element("div");
      t2 = text(t2_value);
      t3 = text(" | ");
      t4 = text(ctx[1]);
      t5 = text(" |");
      t6 = space();
      div1 = element("div");
      create_component(button0.$$.fragment);
      t7 = space();
      create_component(button1.$$.fragment);
      t8 = space();
      create_component(button2.$$.fragment);
      t9 = space();
      div2 = element("div");
      input = element("input");
      t10 = space();
      create_component(button3.$$.fragment);
      attr(p, "class", "bg-gray-600 text-gray-300 rounded p-2 justify-left");
      attr(div0, "class", "border-t border-gray-400 mt-4 py-2\n    flex flex-row gap-4 justify-center font-mono ");
      attr(div1, "class", "flex flex-row gap-4 mt-4 justify-center");
      attr(input, "type", "number");
      attr(input, "class", "w-24 px-2");
      attr(div2, "class", "flex flex-row gap-4 mt-4 justify-center");
      attr(div3, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div3, anchor);
      append(div3, p);
      append(div3, t1);
      append(div3, div0);
      append(div0, t2);
      append(div0, t3);
      append(div0, t4);
      append(div0, t5);
      append(div3, t6);
      append(div3, div1);
      mount_component(button0, div1, null);
      append(div1, t7);
      mount_component(button1, div1, null);
      append(div1, t8);
      mount_component(button2, div1, null);
      append(div3, t9);
      append(div3, div2);
      append(div2, input);
      set_input_value(input, ctx[0]);
      append(div2, t10);
      mount_component(button3, div2, null);
      current = true;
      if (!mounted) {
        dispose = listen(input, "input", ctx[4]);
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & 2) && t2_value !== (t2_value = formatTime(ctx2[1]) + ""))
        set_data(t2, t2_value);
      if (!current || dirty & 2)
        set_data(t4, ctx2[1]);
      const button0_changes = {};
      if (dirty & 32) {
        button0_changes.$$scope = {dirty, ctx: ctx2};
      }
      button0.$set(button0_changes);
      const button1_changes = {};
      if (dirty & 32) {
        button1_changes.$$scope = {dirty, ctx: ctx2};
      }
      button1.$set(button1_changes);
      const button2_changes = {};
      if (dirty & 32) {
        button2_changes.$$scope = {dirty, ctx: ctx2};
      }
      button2.$set(button2_changes);
      if (dirty & 1 && to_number(input.value) !== ctx2[0]) {
        set_input_value(input, ctx2[0]);
      }
      const button3_changes = {};
      if (dirty & 32) {
        button3_changes.$$scope = {dirty, ctx: ctx2};
      }
      button3.$set(button3_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      transition_in(button3.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      transition_out(button3.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div3);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      destroy_component(button3);
      mounted = false;
      dispose();
    }
  };
}
function instance16($$self, $$props, $$invalidate) {
  let $timer;
  component_subscribe($$self, timer, ($$value) => $$invalidate(1, $timer = $$value));
  let {location: location2} = $$props;
  let elapsed = 1220;
  const setElapsed = () => {
    timer.setElapsed(elapsed);
    console.log("... format time: ", formatTime(elapsed));
  };
  function input_input_handler() {
    elapsed = to_number(this.value);
    $$invalidate(0, elapsed);
  }
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(3, location2 = $$props2.location);
  };
  return [elapsed, $timer, setElapsed, location2, input_input_handler];
}
var Timer = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance16, create_fragment18, safe_not_equal, {location: 3});
  }
};
var Timer_svelte_default = Timer;

// build/dist/svelte/timer/StatefulTimer.svelte.js
function create_fragment19(ctx) {
  let div;
  let t;
  return {
    c() {
      div = element("div");
      t = text(ctx[0]);
    },
    m(target, anchor) {
      insert(target, div, anchor);
      append(div, t);
    },
    p(ctx2, [dirty]) {
      if (dirty & 1)
        set_data(t, ctx2[0]);
    },
    i: noop,
    o: noop,
    d(detaching) {
      if (detaching)
        detach(div);
    }
  };
}
function instance17($$self, $$props, $$invalidate) {
  let {state = "paused"} = $$props;
  let {elapsed = 0} = $$props;
  let startedAt;
  const resetTimer = (x) => {
    console.log("reset:", {state});
    if (state == "start") {
      start();
    } else if (state == "paused") {
      pause();
    } else {
      stop();
    }
  };
  const start = () => {
    console.log("starting a timer");
  };
  const pause = () => {
    console.log("pausing the timer");
  };
  const stop = () => {
    console.log("stopping the timer");
  };
  $$self.$$set = ($$props2) => {
    if ("state" in $$props2)
      $$invalidate(0, state = $$props2.state);
    if ("elapsed" in $$props2)
      $$invalidate(1, elapsed = $$props2.elapsed);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & 1) {
      $:
        resetTimer(state);
    }
  };
  return [state, elapsed];
}
var StatefulTimer = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance17, create_fragment19, safe_not_equal, {state: 0, elapsed: 1});
  }
};
var StatefulTimer_svelte_default = StatefulTimer;

// build/dist/svelte/timer/NoStoreTimer.svelte.js
function create_contents_slot_34(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Start";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_24(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Pause";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot_14(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "Reset";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_contents_slot7(ctx) {
  let span;
  return {
    c() {
      span = element("span");
      span.textContent = "set";
      attr(span, "slot", "contents");
    },
    m(target, anchor) {
      insert(target, span, anchor);
    },
    d(detaching) {
      if (detaching)
        detach(span);
    }
  };
}
function create_fragment20(ctx) {
  let div4;
  let p;
  let t1;
  let div1;
  let statefultimer;
  let updating_state;
  let updating_elapsed;
  let t2;
  let div0;
  let t3;
  let t4;
  let div2;
  let button0;
  let t5;
  let button1;
  let t6;
  let button2;
  let t7;
  let div3;
  let input;
  let t8;
  let button3;
  let current;
  let mounted;
  let dispose;
  function statefultimer_state_binding(value) {
    ctx[5](value);
  }
  function statefultimer_elapsed_binding(value) {
    ctx[6](value);
  }
  let statefultimer_props = {};
  if (ctx[0] !== void 0) {
    statefultimer_props.state = ctx[0];
  }
  if (ctx[1] !== void 0) {
    statefultimer_props.elapsed = ctx[1];
  }
  statefultimer = new StatefulTimer_svelte_default({props: statefultimer_props});
  binding_callbacks.push(() => bind(statefultimer, "state", statefultimer_state_binding));
  binding_callbacks.push(() => bind(statefultimer, "elapsed", statefultimer_elapsed_binding));
  button0 = new Button_svelte_default({
    props: {
      class: "w-24",
      $$slots: {contents: [create_contents_slot_34]},
      $$scope: {ctx}
    }
  });
  button0.$on("click", ctx[7]);
  button1 = new Button_svelte_default({
    props: {
      enabledClass: "bg-yellow-400",
      $$slots: {contents: [create_contents_slot_24]},
      $$scope: {ctx}
    }
  });
  button1.$on("click", ctx[8]);
  button2 = new Button_svelte_default({
    props: {
      enabledClass: "bg-red-400",
      $$slots: {contents: [create_contents_slot_14]},
      $$scope: {ctx}
    }
  });
  button2.$on("click", ctx[9]);
  button3 = new Button_svelte_default({
    props: {
      enabledClass: "bg-yellow-800",
      $$slots: {contents: [create_contents_slot7]},
      $$scope: {ctx}
    }
  });
  button3.$on("click", ctx[11]);
  return {
    c() {
      div4 = element("div");
      p = element("p");
      p.textContent = "Storeless timer can be controlled by setting the state of the Timer";
      t1 = space();
      div1 = element("div");
      create_component(statefultimer.$$.fragment);
      t2 = space();
      div0 = element("div");
      t3 = text(ctx[1]);
      t4 = space();
      div2 = element("div");
      create_component(button0.$$.fragment);
      t5 = space();
      create_component(button1.$$.fragment);
      t6 = space();
      create_component(button2.$$.fragment);
      t7 = space();
      div3 = element("div");
      input = element("input");
      t8 = space();
      create_component(button3.$$.fragment);
      attr(p, "class", "bg-gray-600 text-gray-300 rounded p-2 justify-left");
      attr(div1, "class", "border-t border-gray-400 mt-4 py-2\n    flex flex-row gap-4 justify-center font-mono ");
      attr(div2, "class", "flex flex-row gap-4 mt-4 justify-center");
      attr(input, "type", "number");
      attr(input, "class", "w-24 px-2");
      attr(div3, "class", "flex flex-row gap-4 mt-4 justify-center");
      attr(div4, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div4, anchor);
      append(div4, p);
      append(div4, t1);
      append(div4, div1);
      mount_component(statefultimer, div1, null);
      append(div1, t2);
      append(div1, div0);
      append(div0, t3);
      append(div4, t4);
      append(div4, div2);
      mount_component(button0, div2, null);
      append(div2, t5);
      mount_component(button1, div2, null);
      append(div2, t6);
      mount_component(button2, div2, null);
      append(div4, t7);
      append(div4, div3);
      append(div3, input);
      set_input_value(input, ctx[2]);
      append(div3, t8);
      mount_component(button3, div3, null);
      current = true;
      if (!mounted) {
        dispose = listen(input, "input", ctx[10]);
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      const statefultimer_changes = {};
      if (!updating_state && dirty & 1) {
        updating_state = true;
        statefultimer_changes.state = ctx2[0];
        add_flush_callback(() => updating_state = false);
      }
      if (!updating_elapsed && dirty & 2) {
        updating_elapsed = true;
        statefultimer_changes.elapsed = ctx2[1];
        add_flush_callback(() => updating_elapsed = false);
      }
      statefultimer.$set(statefultimer_changes);
      if (!current || dirty & 2)
        set_data(t3, ctx2[1]);
      const button0_changes = {};
      if (dirty & 4096) {
        button0_changes.$$scope = {dirty, ctx: ctx2};
      }
      button0.$set(button0_changes);
      const button1_changes = {};
      if (dirty & 4096) {
        button1_changes.$$scope = {dirty, ctx: ctx2};
      }
      button1.$set(button1_changes);
      const button2_changes = {};
      if (dirty & 4096) {
        button2_changes.$$scope = {dirty, ctx: ctx2};
      }
      button2.$set(button2_changes);
      if (dirty & 4 && to_number(input.value) !== ctx2[2]) {
        set_input_value(input, ctx2[2]);
      }
      const button3_changes = {};
      if (dirty & 4096) {
        button3_changes.$$scope = {dirty, ctx: ctx2};
      }
      button3.$set(button3_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(statefultimer.$$.fragment, local);
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      transition_in(button3.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(statefultimer.$$.fragment, local);
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      transition_out(button3.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div4);
      destroy_component(statefultimer);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      destroy_component(button3);
      mounted = false;
      dispose();
    }
  };
}
function instance18($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let state;
  let elapsed;
  let newElapsed;
  const setState = (x) => {
    $$invalidate(0, state = x);
  };
  function statefultimer_state_binding(value) {
    state = value;
    $$invalidate(0, state);
  }
  function statefultimer_elapsed_binding(value) {
    elapsed = value;
    $$invalidate(1, elapsed);
  }
  const click_handler = () => setState("start");
  const click_handler_1 = () => setState("paused");
  const click_handler_2 = () => setState("stopped");
  function input_input_handler() {
    newElapsed = to_number(this.value);
    $$invalidate(2, newElapsed);
  }
  const click_handler_3 = () => $$invalidate(1, elapsed = newElapsed);
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(4, location2 = $$props2.location);
  };
  return [
    state,
    elapsed,
    newElapsed,
    setState,
    location2,
    statefultimer_state_binding,
    statefultimer_elapsed_binding,
    click_handler,
    click_handler_1,
    click_handler_2,
    input_input_handler,
    click_handler_3
  ];
}
var NoStoreTimer = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance18, create_fragment20, safe_not_equal, {location: 4});
  }
};
var NoStoreTimer_svelte_default = NoStoreTimer;

// build/dist/svelte/p5/P2DTest.svelte.js
function create_fragment21(ctx) {
  let div4;
  let canvas;
  let t0;
  let div3;
  let div2;
  let div0;
  let p0;
  let t2;
  let p1;
  let t3_value = Math.round(ctx[2]) + "";
  let t3;
  let t4;
  let input0;
  let input0_max_value;
  let t5;
  let div1;
  let p2;
  let t7;
  let p3;
  let t8_value = Math.round(ctx[3]) + "";
  let t8;
  let t9;
  let input1;
  let input1_max_value;
  let current;
  let mounted;
  let dispose;
  canvas = new Canvas_svelte_default({
    props: {height: "400", sketch: ctx[4]}
  });
  return {
    c() {
      div4 = element("div");
      create_component(canvas.$$.fragment);
      t0 = space();
      div3 = element("div");
      div2 = element("div");
      div0 = element("div");
      p0 = element("p");
      p0.textContent = "x:";
      t2 = space();
      p1 = element("p");
      t3 = text(t3_value);
      t4 = space();
      input0 = element("input");
      t5 = space();
      div1 = element("div");
      p2 = element("p");
      p2.textContent = "y:";
      t7 = space();
      p3 = element("p");
      t8 = text(t8_value);
      t9 = space();
      input1 = element("input");
      attr(p0, "class", "table-cell w-12 font-mono text-right");
      attr(p1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input0, "class", "table-cell align-left");
      attr(input0, "type", "range");
      attr(input0, "min", "0");
      attr(input0, "max", input0_max_value = Math.round(ctx[0]));
      attr(div0, "class", "table-row");
      attr(p2, "class", "table-cell w-12 font-mono text-right");
      attr(p3, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input1, "class", "table-cell align-left");
      attr(input1, "type", "range");
      attr(input1, "min", "0");
      attr(input1, "max", input1_max_value = Math.round(ctx[1]));
      attr(div1, "class", "table-row");
      attr(div2, "class", "table-row-group");
      attr(div3, "class", "table w-full");
      attr(div4, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div4, anchor);
      mount_component(canvas, div4, null);
      append(div4, t0);
      append(div4, div3);
      append(div3, div2);
      append(div2, div0);
      append(div0, p0);
      append(div0, t2);
      append(div0, p1);
      append(p1, t3);
      append(div0, t4);
      append(div0, input0);
      set_input_value(input0, ctx[2]);
      append(div2, t5);
      append(div2, div1);
      append(div1, p2);
      append(div1, t7);
      append(div1, p3);
      append(p3, t8);
      append(div1, t9);
      append(div1, input1);
      set_input_value(input1, ctx[3]);
      current = true;
      if (!mounted) {
        dispose = [
          listen(input0, "change", ctx[6]),
          listen(input0, "input", ctx[6]),
          listen(input1, "change", ctx[7]),
          listen(input1, "input", ctx[7])
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & 4) && t3_value !== (t3_value = Math.round(ctx2[2]) + ""))
        set_data(t3, t3_value);
      if (!current || dirty & 1 && input0_max_value !== (input0_max_value = Math.round(ctx2[0]))) {
        attr(input0, "max", input0_max_value);
      }
      if (dirty & 4) {
        set_input_value(input0, ctx2[2]);
      }
      if ((!current || dirty & 8) && t8_value !== (t8_value = Math.round(ctx2[3]) + ""))
        set_data(t8, t8_value);
      if (!current || dirty & 2 && input1_max_value !== (input1_max_value = Math.round(ctx2[1]))) {
        attr(input1, "max", input1_max_value);
      }
      if (dirty & 8) {
        set_input_value(input1, ctx2[3]);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(canvas.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(canvas.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div4);
      destroy_component(canvas);
      mounted = false;
      run_all(dispose);
    }
  };
}
var vx = 1;
var vy = 1;
var dt = 0;
function instance19($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let width;
  let height;
  let x = 100;
  let y = 100;
  const sketch = (p, el) => {
    let w = p.random(50, 100);
    let h = p.random(50, 100);
    const setup = () => {
      $$invalidate(0, width = p.width - w);
      $$invalidate(1, height = p.height - h);
      $$invalidate(2, x = width / 2 - w / 2);
      $$invalidate(3, y = height / 2 - h / 2);
    };
    const onResize = () => {
      $$invalidate(0, width = p.width - w);
      $$invalidate(1, height = p.height - h);
    };
    const update2 = () => {
      $$invalidate(2, x += vx * dt);
      $$invalidate(3, y += vy * dt);
    };
    p.draw = () => {
      p.background(0);
      update2();
      p.fill(255);
      p.rect(x, y, w, h);
    };
    return {setup, onResize};
  };
  function input0_change_input_handler() {
    x = to_number(this.value);
    $$invalidate(2, x);
  }
  function input1_change_input_handler() {
    y = to_number(this.value);
    $$invalidate(3, y);
  }
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(5, location2 = $$props2.location);
  };
  return [
    width,
    height,
    x,
    y,
    sketch,
    location2,
    input0_change_input_handler,
    input1_change_input_handler
  ];
}
var P2DTest = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance19, create_fragment21, safe_not_equal, {location: 5});
  }
};
var P2DTest_svelte_default = P2DTest;

// build/dist/svelte/p5/P3DTest.svelte.js
function create_fragment22(ctx) {
  let div3;
  let canvas;
  let t0;
  let div2;
  let div1;
  let div0;
  let p0;
  let t2;
  let p1;
  let t3_value = ctx[0].toFixed(2) + "";
  let t3;
  let t4;
  let input;
  let current;
  let mounted;
  let dispose;
  canvas = new Canvas_svelte_default({
    props: {mode: "3D", sketch: ctx[1]}
  });
  return {
    c() {
      div3 = element("div");
      create_component(canvas.$$.fragment);
      t0 = space();
      div2 = element("div");
      div1 = element("div");
      div0 = element("div");
      p0 = element("p");
      p0.textContent = "speed:";
      t2 = space();
      p1 = element("p");
      t3 = text(t3_value);
      t4 = space();
      input = element("input");
      attr(p0, "class", "table-cell w-12 font-mono text-right");
      attr(p1, "class", "table-cell w-24 truncate font-mono pl-2");
      attr(input, "class", "table-cell align-left");
      attr(input, "type", "range");
      attr(input, "step", "0.01");
      attr(input, "min", "0.0");
      attr(input, "max", "0.1");
      attr(div0, "class", "table-row");
      attr(div1, "class", "table-row-group");
      attr(div2, "class", "table w-full");
      attr(div3, "class", "flex flex-col");
    },
    m(target, anchor) {
      insert(target, div3, anchor);
      mount_component(canvas, div3, null);
      append(div3, t0);
      append(div3, div2);
      append(div2, div1);
      append(div1, div0);
      append(div0, p0);
      append(div0, t2);
      append(div0, p1);
      append(p1, t3);
      append(div0, t4);
      append(div0, input);
      set_input_value(input, ctx[0]);
      current = true;
      if (!mounted) {
        dispose = [
          listen(input, "change", ctx[3]),
          listen(input, "input", ctx[3])
        ];
        mounted = true;
      }
    },
    p(ctx2, [dirty]) {
      if ((!current || dirty & 1) && t3_value !== (t3_value = ctx2[0].toFixed(2) + ""))
        set_data(t3, t3_value);
      if (dirty & 1) {
        set_input_value(input, ctx2[0]);
      }
    },
    i(local) {
      if (current)
        return;
      transition_in(canvas.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(canvas.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching)
        detach(div3);
      destroy_component(canvas);
      mounted = false;
      run_all(dispose);
    }
  };
}
function instance20($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let speed = 0.01;
  const sketch = (p, el) => {
    let x = 100;
    let y = 100;
    let w = p.random(50, 100);
    let h = p.random(50, 100);
    p.draw = () => {
      p.background(0);
      p.normalMaterial();
      p.translate(0, 0, 0);
      p.push();
      p.rotateZ(p.frameCount * speed);
      p.rotateX(p.frameCount * speed);
      p.rotateY(p.frameCount * speed);
      p.torus(70, 20);
      p.pop();
    };
    return {};
  };
  function input_change_input_handler() {
    speed = to_number(this.value);
    $$invalidate(0, speed);
  }
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(2, location2 = $$props2.location);
  };
  return [speed, sketch, location2, input_change_input_handler];
}
var P3DTest = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance20, create_fragment22, safe_not_equal, {location: 2});
  }
};
var P3DTest_svelte_default = P3DTest;

// build/dist/svelte/Index.svelte.js
function create_default_slot3(ctx) {
  let route0;
  let t0;
  let route1;
  let t1;
  let route2;
  let t2;
  let route3;
  let t3;
  let route4;
  let current;
  route0 = new Route({
    props: {path: "/", component: LinksTable_svelte_default}
  });
  route1 = new Route({
    props: {
      path: "store/timer",
      component: Timer_svelte_default
    }
  });
  route2 = new Route({
    props: {path: "timer", component: NoStoreTimer_svelte_default}
  });
  route3 = new Route({
    props: {path: "p5/2D", component: P2DTest_svelte_default}
  });
  route4 = new Route({
    props: {path: "p5/3D", component: P3DTest_svelte_default}
  });
  return {
    c() {
      create_component(route0.$$.fragment);
      t0 = space();
      create_component(route1.$$.fragment);
      t1 = space();
      create_component(route2.$$.fragment);
      t2 = space();
      create_component(route3.$$.fragment);
      t3 = space();
      create_component(route4.$$.fragment);
    },
    m(target, anchor) {
      mount_component(route0, target, anchor);
      insert(target, t0, anchor);
      mount_component(route1, target, anchor);
      insert(target, t1, anchor);
      mount_component(route2, target, anchor);
      insert(target, t2, anchor);
      mount_component(route3, target, anchor);
      insert(target, t3, anchor);
      mount_component(route4, target, anchor);
      current = true;
    },
    p: noop,
    i(local) {
      if (current)
        return;
      transition_in(route0.$$.fragment, local);
      transition_in(route1.$$.fragment, local);
      transition_in(route2.$$.fragment, local);
      transition_in(route3.$$.fragment, local);
      transition_in(route4.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(route0.$$.fragment, local);
      transition_out(route1.$$.fragment, local);
      transition_out(route2.$$.fragment, local);
      transition_out(route3.$$.fragment, local);
      transition_out(route4.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(route0, detaching);
      if (detaching)
        detach(t0);
      destroy_component(route1, detaching);
      if (detaching)
        detach(t1);
      destroy_component(route2, detaching);
      if (detaching)
        detach(t2);
      destroy_component(route3, detaching);
      if (detaching)
        detach(t3);
      destroy_component(route4, detaching);
    }
  };
}
function create_fragment23(ctx) {
  let router;
  let current;
  router = new Router({
    props: {
      $$slots: {default: [create_default_slot3]},
      $$scope: {ctx}
    }
  });
  return {
    c() {
      create_component(router.$$.fragment);
    },
    m(target, anchor) {
      mount_component(router, target, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      const router_changes = {};
      if (dirty & 2) {
        router_changes.$$scope = {dirty, ctx: ctx2};
      }
      router.$set(router_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(router.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(router.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(router, detaching);
    }
  };
}
function instance21($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(0, location2 = $$props2.location);
  };
  return [location2];
}
var Index = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance21, create_fragment23, safe_not_equal, {location: 0});
  }
};
var Index_svelte_default = Index;

// build/dist/LinksTable.svelte.js
function create_fragment24(ctx) {
  let indextable;
  let current;
  indextable = new IndexTable_svelte_default({props: {entries: ctx[0]}});
  return {
    c() {
      create_component(indextable.$$.fragment);
    },
    m(target, anchor) {
      mount_component(indextable, target, anchor);
      current = true;
    },
    p: noop,
    i(local) {
      if (current)
        return;
      transition_in(indextable.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(indextable.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(indextable, detaching);
    }
  };
}
function instance22($$self, $$props, $$invalidate) {
  let {location: location2} = $$props;
  let entries = [
    {
      link: "apps/stopwatch",
      summary: "Stop Watch",
      description: "Work in progress Stop watch for competetive test"
    },
    {
      link: "beyond/spirograph",
      summary: "Spirograph",
      description: "Spirograph creates beautiful patterns"
    },
    {
      link: "beyond/parametric-eq",
      summary: "Line Animation",
      description: "Line animations using parametric equations"
    },
    {
      link: "math/fs",
      summary: "Fourier Series ",
      description: "Fourier series using spinning discs"
    },
    {
      link: "svelte",
      summary: "Svelte experiments",
      description: "Tryout things ing svelte"
    },
    {
      link: "ui/buttons",
      summary: "Buttons UI",
      description: "Test ui/button component"
    },
    {
      link: "ui/toggles",
      summary: "Toggle UI",
      description: "Test ui/toggle component"
    }
  ];
  $$self.$$set = ($$props2) => {
    if ("location" in $$props2)
      $$invalidate(1, location2 = $$props2.location);
  };
  return [entries, location2];
}
var LinksTable2 = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance22, create_fragment24, safe_not_equal, {location: 1});
  }
};
var LinksTable_svelte_default2 = LinksTable2;

// build/dist/App.svelte.js
function create_default_slot4(ctx) {
  let nav;
  let t0;
  let div1;
  let div0;
  let route0;
  let t1;
  let route1;
  let t2;
  let route2;
  let t3;
  let route3;
  let t4;
  let route4;
  let t5;
  let route5;
  let t6;
  let route6;
  let t7;
  let route7;
  let t8;
  let route8;
  let current;
  nav = new Nav_svelte_default({});
  route0 = new Route({
    props: {
      path: "apps/stopwatch",
      component: TestTimer_svelte_default
    }
  });
  route1 = new Route({
    props: {
      path: "beyond/spirograph",
      component: Spirograph_svelte_default
    }
  });
  route2 = new Route({
    props: {
      path: "beyond/parametric-eq",
      component: ParametricEqLines_svelte_default
    }
  });
  route3 = new Route({
    props: {path: "math/fs", component: FourierSeries_svelte_default}
  });
  route4 = new Route({
    props: {path: "math/fft", component: FourierTransform_svelte_default}
  });
  route5 = new Route({
    props: {path: "ui/buttons", component: Buttons_svelte_default}
  });
  route6 = new Route({
    props: {path: "ui/toggles", component: Toggles_svelte_default}
  });
  route7 = new Route({
    props: {path: "svelte/*", component: Index_svelte_default}
  });
  route8 = new Route({
    props: {path: "/", component: LinksTable_svelte_default2}
  });
  return {
    c() {
      create_component(nav.$$.fragment);
      t0 = space();
      div1 = element("div");
      div0 = element("div");
      create_component(route0.$$.fragment);
      t1 = space();
      create_component(route1.$$.fragment);
      t2 = space();
      create_component(route2.$$.fragment);
      t3 = space();
      create_component(route3.$$.fragment);
      t4 = space();
      create_component(route4.$$.fragment);
      t5 = space();
      create_component(route5.$$.fragment);
      t6 = space();
      create_component(route6.$$.fragment);
      t7 = space();
      create_component(route7.$$.fragment);
      t8 = space();
      create_component(route8.$$.fragment);
      attr(div0, "class", "flex mt-6 flex-col mx-4");
      attr(div1, "class", "bg-gray-200 mt-14 w-screen h-screen flex flex-col");
    },
    m(target, anchor) {
      mount_component(nav, target, anchor);
      insert(target, t0, anchor);
      insert(target, div1, anchor);
      append(div1, div0);
      mount_component(route0, div0, null);
      append(div0, t1);
      mount_component(route1, div0, null);
      append(div0, t2);
      mount_component(route2, div0, null);
      append(div0, t3);
      mount_component(route3, div0, null);
      append(div0, t4);
      mount_component(route4, div0, null);
      append(div0, t5);
      mount_component(route5, div0, null);
      append(div0, t6);
      mount_component(route6, div0, null);
      append(div0, t7);
      mount_component(route7, div0, null);
      append(div0, t8);
      mount_component(route8, div0, null);
      current = true;
    },
    p: noop,
    i(local) {
      if (current)
        return;
      transition_in(nav.$$.fragment, local);
      transition_in(route0.$$.fragment, local);
      transition_in(route1.$$.fragment, local);
      transition_in(route2.$$.fragment, local);
      transition_in(route3.$$.fragment, local);
      transition_in(route4.$$.fragment, local);
      transition_in(route5.$$.fragment, local);
      transition_in(route6.$$.fragment, local);
      transition_in(route7.$$.fragment, local);
      transition_in(route8.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(nav.$$.fragment, local);
      transition_out(route0.$$.fragment, local);
      transition_out(route1.$$.fragment, local);
      transition_out(route2.$$.fragment, local);
      transition_out(route3.$$.fragment, local);
      transition_out(route4.$$.fragment, local);
      transition_out(route5.$$.fragment, local);
      transition_out(route6.$$.fragment, local);
      transition_out(route7.$$.fragment, local);
      transition_out(route8.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(nav, detaching);
      if (detaching)
        detach(t0);
      if (detaching)
        detach(div1);
      destroy_component(route0);
      destroy_component(route1);
      destroy_component(route2);
      destroy_component(route3);
      destroy_component(route4);
      destroy_component(route5);
      destroy_component(route6);
      destroy_component(route7);
      destroy_component(route8);
    }
  };
}
function create_fragment25(ctx) {
  let router;
  let current;
  router = new Router({
    props: {
      url: ctx[0],
      $$slots: {default: [create_default_slot4]},
      $$scope: {ctx}
    }
  });
  return {
    c() {
      create_component(router.$$.fragment);
    },
    m(target, anchor) {
      mount_component(router, target, anchor);
      current = true;
    },
    p(ctx2, [dirty]) {
      const router_changes = {};
      if (dirty & 1)
        router_changes.url = ctx2[0];
      if (dirty & 2) {
        router_changes.$$scope = {dirty, ctx: ctx2};
      }
      router.$set(router_changes);
    },
    i(local) {
      if (current)
        return;
      transition_in(router.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(router.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      destroy_component(router, detaching);
    }
  };
}
function instance23($$self, $$props, $$invalidate) {
  let {url = ""} = $$props;
  $$self.$$set = ($$props2) => {
    if ("url" in $$props2)
      $$invalidate(0, url = $$props2.url);
  };
  return [url];
}
var App = class extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, instance23, create_fragment25, safe_not_equal, {url: 0});
  }
};
var App_svelte_default = App;

// build/dist/index.js
var app = new App_svelte_default({
  target: document.body
});
var dist_default = app;
export {
  dist_default as default
};
//# sourceMappingURL=//dist//index.js.map
